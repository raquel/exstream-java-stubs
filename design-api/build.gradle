plugins {
    id 'idea'
    id 'eclipse'
    id 'java'
    id 'maven-publish'
    id 'com.diffplug.spotless' version '6.11.0'
}

group = 'org.openapitools'
version = '1.0'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

dependencies {
    implementation 'io.swagger:swagger-annotations:1.6.8'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'io.gsonfire:gson-fire:1.9.0'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.0.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation "jakarta.annotation:jakarta.annotation-api:2.1.1"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'openapi-java-client'
            from components.java
        }
    }
}

tasks.register("execute", JavaExec) {
    mainClass.set(System.getProperty('mainClass'))
    classpath = sourceSets.main.runtimeClasspath
}

javadoc {
    options.addStringOption('tags', "http.response.details:a:Http Response Details")
}

spotless {
    enforceCheck false
    java {
        googleJavaFormat('1.8').aosp().reflowLongStrings()
        removeUnusedImports()
        importOrder()
    }
}

test {
    useJUnitPlatform()
    dependsOn 'cleanTest'
    testLogging {
        events "passed", "skipped", "failed"
    }
}
