/*
 * Exstream CE Design API (21.2.0)
 * The Exstream CE Design API allows developers to query, create, modify, or delete Exstream CE resources and their links outside of the Exstream CE user inferface. This API requires authentication in order to be used - to authenticate requests, supply a valid OTDS token with `Authorization: Bearer OTDS_TOKEN` in the request header.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataResponseImportResponse;
import java.io.File;
import org.openapitools.client.model.ListResponseImportHistory;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ImportControllerApi
 */
@Disabled
public class ImportControllerApiTest {

    private final ImportControllerApi api = new ImportControllerApi();

    /**
     * Fetch import history
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getImportHistoryUsingGETTest() throws ApiException {
        ListResponseImportHistory response = api.getImportHistoryUsingGET();
        // TODO: test validations
    }

    /**
     * Import a package that was previously exported
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importPackageUsingPOSTTest() throws ApiException {
        String domain = null;
        String packagetype = null;
        String commit = null;
        String previousExportPackage = null;
        File exportPackage = null;
        DataResponseImportResponse response = api.importPackageUsingPOST(domain, packagetype, commit, previousExportPackage, exportPackage);
        // TODO: test validations
    }

}
