/*
 * Exstream CE Design API (21.2.0)
 * The Exstream CE Design API allows developers to query, create, modify, or delete Exstream CE resources and their links outside of the Exstream CE user inferface. This API requires authentication in order to be used - to authenticate requests, supply a valid OTDS token with `Authorization: Bearer OTDS_TOKEN` in the request header.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateThemeRequest;
import org.openapitools.client.model.DataResponseResourceVersion;
import org.openapitools.client.model.DataResponseTheme;
import org.openapitools.client.model.GenericResponse;
import org.openapitools.client.model.PostGetThemeWithOptionsPayload;
import org.openapitools.client.model.Theme;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThemeControllerApi
 */
@Disabled
public class ThemeControllerApiTest {

    private final ThemeControllerApi api = new ThemeControllerApi();

    /**
     * Create a theme
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createThemeUsingPOSTTest() throws ApiException {
        String domain = null;
        CreateThemeRequest request = null;
        DataResponseResourceVersion response = api.createThemeUsingPOST(domain, request);
        // TODO: test validations
    }

    /**
     * Fetch theme
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getThemeUsingGETTest() throws ApiException {
        String domain = null;
        UUID themeId = null;
        Integer version = null;
        DataResponseTheme response = api.getThemeUsingGET(domain, themeId, version);
        // TODO: test validations
    }

    /**
     * Fetch theme with options payload
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getThemeWithOptionsUsingPOSTTest() throws ApiException {
        String domain = null;
        UUID themeId = null;
        Integer version = null;
        PostGetThemeWithOptionsPayload options = null;
        DataResponseTheme response = api.getThemeWithOptionsUsingPOST(domain, themeId, version, options);
        // TODO: test validations
    }

    /**
     * Update a theme to be based on the latest approved version of its template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTemplateUsingPUTTest() throws ApiException {
        String domain = null;
        UUID themeId = null;
        GenericResponse response = api.updateTemplateUsingPUT(domain, themeId);
        // TODO: test validations
    }

    /**
     * Update theme
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateThemeUsingPUTTest() throws ApiException {
        String domain = null;
        UUID themeId = null;
        Theme theme = null;
        GenericResponse response = api.updateThemeUsingPUT(domain, themeId, theme);
        // TODO: test validations
    }

}
