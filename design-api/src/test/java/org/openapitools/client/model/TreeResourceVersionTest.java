/*
 * Exstream CE Design API (21.2.0)
 * The Exstream CE Design API allows developers to query, create, modify, or delete Exstream CE resources and their links outside of the Exstream CE user inferface. This API requires authentication in order to be used - to authenticate requests, supply a valid OTDS token with `Authorization: Bearer OTDS_TOKEN` in the request header.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.Domain;
import org.openapitools.client.model.ResourceCategory;
import org.openapitools.client.model.ResourceMetadata;
import org.openapitools.client.model.ResourceVersion;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TreeResourceVersion
 */
public class TreeResourceVersionTest {
    private final TreeResourceVersion model = new TreeResourceVersion();

    /**
     * Model tests for TreeResourceVersion
     */
    @Test
    public void testTreeResourceVersion() {
        // TODO: test TreeResourceVersion
    }

    /**
     * Test the property 'allowNestedSections'
     */
    @Test
    public void allowNestedSectionsTest() {
        // TODO: test allowNestedSections
    }

    /**
     * Test the property 'categories'
     */
    @Test
    public void categoriesTest() {
        // TODO: test categories
    }

    /**
     * Test the property 'children'
     */
    @Test
    public void childrenTest() {
        // TODO: test children
    }

    /**
     * Test the property 'containsActiveRevisions'
     */
    @Test
    public void containsActiveRevisionsTest() {
        // TODO: test containsActiveRevisions
    }

    /**
     * Test the property 'content'
     */
    @Test
    public void contentTest() {
        // TODO: test content
    }

    /**
     * Test the property 'contentMimeType'
     */
    @Test
    public void contentMimeTypeTest() {
        // TODO: test contentMimeType
    }

    /**
     * Test the property 'contentType'
     */
    @Test
    public void contentTypeTest() {
        // TODO: test contentType
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    public void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'domains'
     */
    @Test
    public void domainsTest() {
        // TODO: test domains
    }

    /**
     * Test the property 'effectiveEnd'
     */
    @Test
    public void effectiveEndTest() {
        // TODO: test effectiveEnd
    }

    /**
     * Test the property 'effectiveStart'
     */
    @Test
    public void effectiveStartTest() {
        // TODO: test effectiveStart
    }

    /**
     * Test the property 'hidden'
     */
    @Test
    public void hiddenTest() {
        // TODO: test hidden
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isTrackingRevisions'
     */
    @Test
    public void isTrackingRevisionsTest() {
        // TODO: test isTrackingRevisions
    }

    /**
     * Test the property 'lastModifiedBy'
     */
    @Test
    public void lastModifiedByTest() {
        // TODO: test lastModifiedBy
    }

    /**
     * Test the property 'lastModifiedDate'
     */
    @Test
    public void lastModifiedDateTest() {
        // TODO: test lastModifiedDate
    }

    /**
     * Test the property 'latestVersion'
     */
    @Test
    public void latestVersionTest() {
        // TODO: test latestVersion
    }

    /**
     * Test the property 'locked'
     */
    @Test
    public void lockedTest() {
        // TODO: test locked
    }

    /**
     * Test the property 'lockedBy'
     */
    @Test
    public void lockedByTest() {
        // TODO: test lockedBy
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'resourcePackId'
     */
    @Test
    public void resourcePackIdTest() {
        // TODO: test resourcePackId
    }

    /**
     * Test the property 'standardVariantId'
     */
    @Test
    public void standardVariantIdTest() {
        // TODO: test standardVariantId
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'stateComment'
     */
    @Test
    public void stateCommentTest() {
        // TODO: test stateComment
    }

    /**
     * Test the property 'subtype'
     */
    @Test
    public void subtypeTest() {
        // TODO: test subtype
    }

    /**
     * Test the property 'systemResource'
     */
    @Test
    public void systemResourceTest() {
        // TODO: test systemResource
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'variants'
     */
    @Test
    public void variantsTest() {
        // TODO: test variants
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
