/*
 * Exstream Orchestration
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataResponseDeletableResource;
import org.openapitools.client.model.DataResponseFlowModelContextSnapshot;
import org.openapitools.client.model.FlowModelContextFilterRequest;
import org.openapitools.client.model.FlowObjectsRequest;
import org.openapitools.client.model.GenericResponse;
import org.openapitools.client.model.ListResponseFlowModelContextSnapshot;
import org.openapitools.client.model.PageResponseFlowModelContextSnapshot;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FlowModelContextControllerApi
 */
@Disabled
public class FlowModelContextControllerApiTest {

    private final FlowModelContextControllerApi api = new FlowModelContextControllerApi();

    /**
     * Filter published flow contexts
     *
     * Get a filtered list of current published flow contexts in this orchestration runtime environment context.&lt;br/&gt;Filter example: searchString:fulfillment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFilteredContextsTest() throws ApiException {
        FlowModelContextFilterRequest filterRequest = null;
        String domain = null;
        PageResponseFlowModelContextSnapshot response = api.getFilteredContexts(filterRequest, domain);
        // TODO: test validations
    }

    /**
     * Get published flow context content
     *
     * Get content of specified published flow context version from orchestration runtime environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPublishedTest() throws ApiException {
        String domain = null;
        UUID flowModelContextId = null;
        DataResponseFlowModelContextSnapshot response = api.getPublished(domain, flowModelContextId);
        // TODO: test validations
    }

    /**
     * Says whether this flow context can be safely deleted
     *
     * It will not be deletable if it is published in at least one domain, maybe one to which the user has no access
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void isDeletable1Test() throws ApiException {
        String domain = null;
        UUID flowContextId = null;
        Integer version = null;
        DataResponseDeletableResource response = api.isDeletable1(domain, flowContextId, version);
        // TODO: test validations
    }

    /**
     * List published flow contexts
     *
     * Get a list of current published flow contexts in this orchestration runtime environment context.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listPublished1Test() throws ApiException {
        String domain = null;
        ListResponseFlowModelContextSnapshot response = api.listPublished1(domain);
        // TODO: test validations
    }

    /**
     * Publish flow context
     *
     * Publish specified flow context version to orchestration runtime environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publish1Test() throws ApiException {
        String domain = null;
        UUID flowModelContextId = null;
        Integer version = null;
        DataResponseFlowModelContextSnapshot response = api.publish1(domain, flowModelContextId, version);
        // TODO: test validations
    }

    /**
     * Unpublish flow context
     *
     * Unpublish specified flow context version from orchestration runtime environment. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unpublish2Test() throws ApiException {
        String domain = null;
        UUID flowModelContextId = null;
        Integer version = null;
        GenericResponse response = api.unpublish2(domain, flowModelContextId, version);
        // TODO: test validations
    }

    /**
     * Unpublish list of flow contexts
     *
     * Unpublish specified flow contexts from orchestration runtime environment. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unpublish3Test() throws ApiException {
        String domain = null;
        FlowObjectsRequest flowObjectsRequest = null;
        GenericResponse response = api.unpublish3(domain, flowObjectsRequest);
        // TODO: test validations
    }

}
