/*
 * Exstream Orchestration
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CronJob;
import org.openapitools.client.model.DataResponseCronJob;
import org.openapitools.client.model.GenericResponse;
import org.openapitools.client.model.ListResponseCronJob;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CronJobsControllerApi
 */
@Disabled
public class CronJobsControllerApiTest {

    private final CronJobsControllerApi api = new CronJobsControllerApi();

    /**
     * Adds a new cron job
     *
     * Adds a new Cron job 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addScheduleTest() throws ApiException {
        String domain = null;
        CronJob cronJob = null;
        DataResponseCronJob response = api.addSchedule(domain, cronJob);
        // TODO: test validations
    }

    /**
     * Deletes a cron job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteScheduleTest() throws ApiException {
        String domain = null;
        UUID cronJobId = null;
        GenericResponse response = api.deleteSchedule(domain, cronJobId);
        // TODO: test validations
    }

    /**
     * List all cron jobs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSchedulesTest() throws ApiException {
        String domain = null;
        ListResponseCronJob response = api.listSchedules(domain);
        // TODO: test validations
    }

    /**
     * Gets a cron job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void readScheduleTest() throws ApiException {
        String domain = null;
        UUID cronJobId = null;
        DataResponseCronJob response = api.readSchedule(domain, cronJobId);
        // TODO: test validations
    }

    /**
     * Trigger a cron job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggerScheduleTest() throws ApiException {
        String domain = null;
        UUID cronJobId = null;
        String response = api.triggerSchedule(domain, cronJobId);
        // TODO: test validations
    }

    /**
     * Updates a cron job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateScheduleTest() throws ApiException {
        String domain = null;
        UUID cronJobId = null;
        CronJob cronJob = null;
        DataResponseCronJob response = api.updateSchedule(domain, cronJobId, cronJob);
        // TODO: test validations
    }

}
