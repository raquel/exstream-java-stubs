openapi: 3.0.1
info:
  title: Exstream Orchestration
  version: v1
servers:
- description: service frontend url
  url: https://vm-exstreamna1.eimdemo.com/orchestration
paths:
  /api/v1/tenants/{tenantId}/schema:
    put:
      operationId: updateTenantSchema
      parameters:
      - explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseTenant'
          description: OK
      tags:
      - tenant-admin-controller
      x-accepts: application/json
      x-tags:
      - tag: tenant-admin-controller
  /api/v1/tenants/updateTenant:
    put:
      operationId: updateTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseTenant'
          description: OK
      tags:
      - tenant-admin-controller
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: tenant-admin-controller
  /api/v1/tenants/all/schema:
    put:
      operationId: updateTenantSchemas
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseTenant'
          description: OK
      tags:
      - tenant-admin-controller
      x-accepts: application/json
      x-tags:
      - tag: tenant-admin-controller
  /api/v1/sortdata/{domain}:
    delete:
      description: |-
        Sorting assets using synchronous mode is not included.

        The filter value is a semicolon delimited list of key value pairs.

        List values separate possible values with commas. These are the only keys possible, please ignore the parameters below this list:
        | Filter name                    | Filter value description                                                         |
        |--------------------------------|----------------------------------------------------------------------------------|
        | flowModelIds                   | Match sorting assets with these flow model ids.                                  |
        | communicationIds               | Match sorting assets with these communication ids.                               |
        | queueNames                     | Match sorting assets with these queue names.                                     |
        | externalIds                    | Match sorting assets with these external ids.                                    |
        | flowStepIds                    | Match sorting assets with these flow step ids.                                   |
        | ids                            | Match sorting assets with these sorting asset ids.                               |
        | jobIds                         | Match sorting assets with these job ids.                                         |
        | referenceIds                   | Match sorting assets with these reference ids.                                   |
        | sortSubflows                   | Match sorting assets with these sort sub flows.                                  |
        | metadata                       | Match sorting assets with these metadata values.                                 |
        | states                         | Match sorting assets with any of these states. Possible values: processed,waiting,expired,canceled,all|
        | customersCountFrom             | Match sorting assets having customer count from this number.                     |
        | customersCountTo               | Match sorting assets having customer count to this number.                       |
        | creationDateStart              | Match sorting assets created after this date. (yyyy-MM-dd format)                |
        | creationDateEnd                | Match sorting assets created before this date. (yyyy-MM-dd format)               |
        | lastModificationDateStart      | Match sorting assets modified after this date. (yyyy-MM-dd format)               |
        | lastModificationDateEnd        | Match sorting assets modified before this date. (yyyy-MM-dd format)              |
        Note: For following special characters in strings (applicable for queueNames, externalIds, sortSubflows, metadata) use:

        : &rarr; /colon/

        ; &rarr; /semi/

        \ &rarr; /bsol/

        Example - filter=states:expired;queueNames:SortPrep
      operationId: deleteSortData
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SortingDataFilterRequest'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Success
      summary: "Delete sorting assets and set the jobs, instances and queued flow\
        \ steps using those assets to error. The only possible parameters are domain\
        \ (in the URL) and the mandatory filter"
      tags:
      - sort-data-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: sort-data-controller
    get:
      description: |-
        Sorting assets using synchronous mode is not included.

        The filter value is a semicolon delimited list of key value pairs.

        List values separate possible values with commas. These are the only keys possible, please ignore the parameters below this list:
        | Filter name                    | Filter value description                                                         |
        |--------------------------------|----------------------------------------------------------------------------------|
        | flowModelIds                   | Match sorting assets with these flow model ids.                                  |
        | communicationIds               | Match sorting assets with these communication ids.                               |
        | queueNames                     | Match sorting assets with these queue names.                                     |
        | externalIds                    | Match sorting assets with these external ids.                                    |
        | flowStepIds                    | Match sorting assets with these flow step ids.                                   |
        | ids                            | Match sorting assets with these sorting asset ids.                               |
        | jobIds                         | Match sorting assets with these job ids.                                         |
        | referenceIds                   | Match sorting assets with these reference ids.                                   |
        | sortSubflows                   | Match sorting assets with these sort sub flows.                                  |
        | metadata                       | Match sorting assets with these metadata values.                                 |
        | states                         | Match sorting assets with any of these states. Possible values: processed,waiting,expired,canceled,all|
        | customersCountFrom             | Match sorting assets having customer count from this number.                     |
        | customersCountTo               | Match sorting assets having customer count to this number.                       |
        | creationDateStart              | Match sorting assets created after this date. (yyyy-MM-dd format)                |
        | creationDateEnd                | Match sorting assets created before this date. (yyyy-MM-dd format)               |
        | lastModificationDateStart      | Match sorting assets modified after this date. (yyyy-MM-dd format)               |
        | lastModificationDateEnd        | Match sorting assets modified before this date. (yyyy-MM-dd format)              |
        Note: For following special characters in strings (applicable for queueNames, externalIds, sortSubflows, metadata) use:

        : &rarr; /colon/

        ; &rarr; /semi/

        \ &rarr; /bsol/

        Example - filter=queueNames:SortPrep&count=10&offset=0
      operationId: listSortingAssets
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Use the optional filter parameter to decide which sorting assets
          should be listed (ALL of them if no filter specified)
        explode: true
        in: query
        name: filterRequest
        required: true
        schema:
          $ref: '#/components/schemas/SortingDataFilterRequest'
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Success
      summary: "List sorting assets. Possible parameters are domain (in the URL) and\
        \ the optional parameters filter,count,offset and sort"
      tags:
      - sort-data-controller
      x-accepts: '*/*'
      x-tags:
      - tag: sort-data-controller
    put:
      description: |-
        Sorting assets using synchronous mode is not included.

        The filter value is a semicolon delimited list of key value pairs.

        List values separate possible values with commas. These are the only keys possible, please ignore the parameters below this list:
        | Filter name                    | Filter value description                                                         |
        |--------------------------------|----------------------------------------------------------------------------------|
        | flowModelIds                   | Match sorting assets with these flow model ids.                                  |
        | communicationIds               | Match sorting assets with these communication ids.                               |
        | queueNames                     | Match sorting assets with these queue names.                                     |
        | externalIds                    | Match sorting assets with these external ids.                                    |
        | flowStepIds                    | Match sorting assets with these flow step ids.                                   |
        | ids                            | Match sorting assets with these sorting asset ids.                               |
        | jobIds                         | Match sorting assets with these job ids.                                         |
        | referenceIds                   | Match sorting assets with these reference ids.                                   |
        | sortSubflows                   | Match sorting assets with these sort sub flows.                                  |
        | metadata                       | Match sorting assets with these metadata values.                                 |
        | states                         | Match sorting assets with any of these states. Possible values: processed,waiting,expired,canceled,all|
        | customersCountFrom             | Match sorting assets having customer count from this number.                     |
        | customersCountTo               | Match sorting assets having customer count to this number.                       |
        | creationDateStart              | Match sorting assets created after this date. (yyyy-MM-dd format)                |
        | creationDateEnd                | Match sorting assets created before this date. (yyyy-MM-dd format)               |
        | lastModificationDateStart      | Match sorting assets modified after this date. (yyyy-MM-dd format)               |
        | lastModificationDateEnd        | Match sorting assets modified before this date. (yyyy-MM-dd format)              |
        Note: For following special characters in strings (applicable for queueNames, externalIds, sortSubflows, metadata) use:

        : &rarr; /colon/

        ; &rarr; /semi/

        \ &rarr; /bsol/

        Example - state=waiting&filter=externalIds:Ext001;states:processed
      operationId: updateState
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateState_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK
      summary: "Update state for all sort assets matching filter criteria. Possible\
        \ parameters are domain (in the URL), state and the mandatory filter"
      tags:
      - sort-data-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: sort-data-controller
  /api/v1/sortdata/{domain}/{id}:
    delete:
      description: Sorting assets using synchronous mode is not included.
      operationId: deleteSortData_1
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Success
      summary: "Delete sorting asset and set the jobs, instances and queued flow steps\
        \ using those assets to error. The only possible parameters are domain (in\
        \ the URL) and the sorting asset id (in the URL)"
      tags:
      - sort-data-controller
      x-accepts: '*/*'
      x-tags:
      - tag: sort-data-controller
    get:
      description: Sorting assets using synchronous mode is not included.
      operationId: getSortingAsset
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseSortingAsset'
          description: OK
      summary: Get sorting asset. The only possible parameters are domain (in the
        URL) and the id (in the URL)
      tags:
      - sort-data-controller
      x-accepts: '*/*'
      x-tags:
      - tag: sort-data-controller
    put:
      description: |-
        Sorting assets using synchronous mode is not included.

        Example - state=expired
      operationId: updateState_1
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateState_1_request'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseSortingAsset'
          description: OK
      summary: "Update state for all sort assets referenced by given id. Possible\
        \ parameters are domain (in the URL), id (in the URL) and state."
      tags:
      - sort-data-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: sort-data-controller
  /api/v1/secrets/{domain}/{secretId}:
    put:
      operationId: setSecret
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: secretId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretInfo'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - secret-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: secret-controller
  /api/v1/cron-jobs/{domain}/{cronJobId}:
    delete:
      operationId: deleteSchedule
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: CronJobId
        explode: false
        in: path
        name: cronJobId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: default response
      summary: Deletes a cron job
      tags:
      - cron-jobs-controller
      x-accepts: '*/*'
      x-tags:
      - tag: cron-jobs-controller
    get:
      operationId: readSchedule
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: CronJobId
        explode: false
        in: path
        name: cronJobId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseCronJob'
          description: default response
      summary: Gets a cron job
      tags:
      - cron-jobs-controller
      x-accepts: '*/*'
      x-tags:
      - tag: cron-jobs-controller
    put:
      operationId: updateSchedule
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: CronJobId
        explode: false
        in: path
        name: cronJobId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CronJob'
        description: "Cron job. It can apply to jobs or sort assets.<br/>name: Name\
          \ of the cron job<br/>cronExpression: Cron expression in UNIX format that\
          \ reflects when the cron job should be executed (the main cron orchestration\
          \ cleanup job is executed hourly by default)<br/>cronType: Cron job type.\
          \ Available values: markDeleted,wipe,startJob,updateExpirationTime,wipeSortingAssets,expireSortingAssets,sortingAndBundling.\
          \ When wipe is selected the filter parameters are not used.<br/>startDateStart:\
          \ Filter jobs matching started date after this date or sort assets created\
          \ after this date. Date is a (yyyy-MM-dd format) String. It's also possible\
          \ to use a negative number, representing the number of days before today.<br/>startDateEnd:\
          \ Filter jobs matching started date before this date or sort assets created\
          \ before this date. Date is a (yyyy-MM-dd format) String. It's also possible\
          \ to use a negative number, representing the number of days before today.<br/>endDateStart:\
          \ Filter jobs matching ended date after this date or sort assets modified\
          \ after this date. Date is a (yyyy-MM-dd format) String. It's also possible\
          \ to use a negative number, representing the number of days before today<br/>endDateEnd:\
          \ Filter jobs matching ended date before this date or sort assets modified\
          \ before this date. Date is a (yyyy-MM-dd format) String. It's also possible\
          \ to use a negative number, representing the number of days before today<br/>statuses:\
          \ Match jobs with any of these statuses. Possible values for jobs: complete,error,canceled,deleted<br/>sortingAssetStatuses:\
          \ Match sorting assets with any of these statuses, possible values for sort\
          \ assets: processed,waiting,expired,canceled<br/>serviceName: service to\
          \ trigger for job<br/>channelName: input channel for pulling data<br/>inputPath:\
          \ path parameter for the input channel<br/>headers: map of headers for starting\
          \ job<br/>cacheTimeout: optional duration of file cache<br/>mode: Filter\
          \ jobs matching this mode (ONDEMAND|BATCH)<br/>flowModelId: Filter sorting\
          \ assets matching flow model id<br/>communicationIdList: Filter sorting\
          \ assets matching the communication id (only one) or when running sorting&bundling\
          \ with appConsolidation equal to true, use the specified communications,<br/>when\
          \ appConsolidation is false, only one communication id should be present<br/>preSortQueueName:\
          \ Filter sorting assets matching pre sort queue name<br/>jobId: Filter sorting\
          \ assets matching jobId<br/>postSortQueueName: queue name used in the post\
          \ sort queue name<br/>appConsolidation: says whether multiple communications\
          \ should be consolidated when running sorting&bundling<br/>enabled: Determines\
          \ whether the cron job should be triggered or not. Default value: true"
        required: true
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseCronJob'
          description: default response
      summary: Updates a cron job
      tags:
      - cron-jobs-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: cron-jobs-controller
  /api/v1/configuration/{domainId}:
    get:
      description: "Get all configurations (no filter) or all the configurations matching\
        \ the filter. <br/>Filter example: filter=configType:myConfigType (domain\
        \ is taken from the URL)"
      operationId: getConfigurations
      parameters:
      - description: |-
          The filter value is a semicolon delimited list of key value pairs.
          List values separate possible values with commas. Keys include:
          | filter name          | Filter value description                                                                                       |
          |----------------------|----------------------------------------------------------------------------------------------------------------|
          | configType           | Match configurations with this configType.                                                                     |
          | configName           | Match configurations with this configName.                                                                     |
        explode: true
        in: query
        name: filterRequest
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationFilterRequest'
        style: form
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseConfiguration'
          description: OK
      summary: Get all matching configurations
      tags:
      - configuration-controller
      x-accepts: '*/*'
      x-tags:
      - tag: configuration-controller
    post:
      operationId: addConfiguration
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseConfiguration'
          description: OK
      tags:
      - configuration-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: configuration-controller
    put:
      operationId: updateConfiguration
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseConfiguration'
          description: OK
      tags:
      - configuration-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: configuration-controller
  /api/v1/tenants/{tenantId}:
    get:
      operationId: getTenant
      parameters:
      - explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseTenant'
          description: OK
      tags:
      - tenant-admin-controller
      x-accepts: application/json
      x-tags:
      - tag: tenant-admin-controller
    post:
      operationId: createTenantSchema
      parameters:
      - explode: false
        in: path
        name: tenantId
        required: true
        schema:
          maxLength: 40
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseTenant'
          description: OK
      tags:
      - tenant-admin-controller
      x-accepts: application/json
      x-tags:
      - tag: tenant-admin-controller
  /api/v1/tenants/addTenant:
    post:
      operationId: createTenantWithExistingSchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseTenant'
          description: OK
      tags:
      - tenant-admin-controller
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: tenant-admin-controller
  /api/v1/ssh/known-hosts/hostkey:
    get:
      description: Requests a fresh key for specified host.
      operationId: getKeyForHost
      parameters:
      - description: Specifies host name
        explode: true
        in: query
        name: host
        required: true
        schema:
          type: string
        style: form
      - description: Specifies port
        explode: true
        in: query
        name: port
        required: false
        schema:
          default: 22
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK
      summary: Get key for host
      tags:
      - ssh-connection-controller
      x-accepts: '*/*'
      x-tags:
      - tag: ssh-connection-controller
    post:
      description: Add key of provided host to known hosts.
      operationId: addKeyForHost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostKey'
        description: hostkey
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK
      summary: Add key for host
      tags:
      - ssh-connection-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: ssh-connection-controller
  /api/v1/secrets/{domain}/rollover:
    post:
      operationId: rolloverKeys
      parameters:
      - explode: true
        in: query
        name: oldKeyId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                format: int32
                type: integer
          description: OK
      tags:
      - secret-controller
      x-accepts: '*/*'
      x-tags:
      - tag: secret-controller
  /api/v1/secrets/{domain}/migrateVault:
    post:
      operationId: migrateVault
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      summary: Migrate secrets to vault.
      tags:
      - secret-controller
      x-accepts: '*/*'
      x-tags:
      - tag: secret-controller
  /api/v1/runtime/{domain}/jobs/{id}/stop:
    post:
      description: Stop a running job entry (including all flow instances) in runtime
        database.
      operationId: stopJob
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Job id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Cancel job
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/jobs/{id}/reprocessing:
    post:
      description: "Reprocess the job with the specified id, optionally using the\
        \ current flow model and/or the current flow context"
      operationId: reprocessJob
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Job id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Use current flow model (instead of the one stored in the job)
        explode: true
        in: query
        name: useCurrentFlowModel
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Use current flow context (instead of the one stored in the job
        explode: true
        in: query
        name: useCurrentFlowContext
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Reprocess job
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/jobs/post-sort:
    post:
      description: Trigger a post-sort related job
      operationId: startPostSortJob
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSortRunOption'
        description: |2-



          | Run setting            | description                                                                                           |
          |------------------------|-------------------------------------------------------------------------------------------------------|
          | flowModelId            | Select sorting assets matching flow model id.                                                         |
          | appConsolidation       | Consolidate multiple communications.                                                                  |
          | dryRun                 | Dry run                                                                                               |
          | externalId             | Set externalID on the job for this post-sort run.                                                     |
          | customerList           | Select individual list of customer numbers or ranges of numbers to be processed in post-sort run.     |
          | postSortQueueName      | Set post-sort queue to use in this post-sort run. If not specified, all post-sort queues will be included in the run.|


          | Sort asset filter name |Filter value description                                                                               |
          |------------------------|-------------------------------------------------------------------------------------------------------|
          | ids                    | Filter sorting assets matching sorting index ids.                                                     |
          | jobIds                 | Filter sorting assets matching job ids.                                                               |
          | flowStepIds            | Filter sorting assets matching flow step ids.                                                         |
          | communicationIds       | Filter sorting assets matching communication ids.                                                     |
          | queueNames             | Filter sorting assets matching pre-sort queue name                                                     (Note: Only first entry of list is currently supported for post-sort run).       |
          | externalIds            | Filter sorting assets matching external ids.                                                          |
          | creationDateStart      | Filter sorting assets created after this date (yyyy-MM-dd format or elapsed period in negative days). |
          | creationDateEnd        | Filter sorting assets created before this date (yyyy-MM-dd format or elapsed period in negative days).|
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Post sort run(s) triggered.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Bad request. Validation failure.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Domain not found or flow model not found in domain.
      summary: Trigger post-sort run
      tags:
      - runtime-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/stop:
    post:
      description: Stop a running flow step in runtime database.
      operationId: stopFlowStep
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow step id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Cancel flow step
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/release:
    post:
      description: Release a flow step in holding state.
      operationId: releaseHoldingFlowStep
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow step id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Continue a held flow step
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-instances/{id}/stop:
    post:
      description: Stop a running flow instance entry (including all flow steps) in
        runtime database.
      operationId: stopFlowInstance
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow instance id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Cancel flow instance
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-instances/{id}/release:
    post:
      description: Release a flow instance in holding state.
      operationId: releaseHoldingFlowInstances
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow instance id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Continue a held flow instance
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-instances/counts:
    post:
      description: Get counts of flow instances grouped by start date and status.
        The counts will be automatically grouped by DAY/MONTH/YEAR based on available
        data.
      operationId: getFlowInstancesCounts
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowInstanceCountsFilterRequest'
        description: |-
          The filter value is a semicolon delimited list of key value pairs.
          List values separate possible values with commas. Keys include:
          | Filter name          | Filter value description                                                                                             |
          |----------------------|----------------------------------------------------------------------------------------------------------------------|
          | flowModelIds         | Match flow instances spawned from these flow model ids.                                                              |
          | startDateStart       | Match flow instances started after this date. (yyyy-MM-ddThh:mm:ss.SSSZ format)                                      |
          | startDateEnd         | Match flow instances started before this date. (yyyy-MM-ddThh:mm:ss.SSSZ format)                                     |
          | fillMissingData      | Populate any missing data between grouped data ranges. If data is not found, counts would be returned as 0           |
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseMapObjectObject'
          description: OK
      summary: Get flow instances counts
      tags:
      - runtime-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-instances/associated-jobs:
    post:
      operationId: getFlowInstancesAndAssociatedJobs
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowInstanceFilterRequest'
        description: |-
          The filter value is a semicolon delimited list of key value pairs.
          List values separate possible values with commas. Keys include:
          | filter name            | Filter value description                                                                               |
          |------------------------|--------------------------------------------------------------------------------------------------------|
          | ids                    | Match flow instances with ids in this comma-separated list.                                            |
          | flowModelId            | Match flow instances spawned from this flow model id (deprecated).                                     |
          | flowModelIds           | Match flow instances spawned from these flow model ids.(Note: When used along with flowModelId filter, ids from both filters are applied.)|
          | flowModelSnapshotIds   | Match flow instances spawned from any of these flow model snapshot ids.                                |
          | jobId                  | Match flow instances that ran as part of this job.                                                     |
          | externalId             | Match flow instances associated to this external id.                                                   |
          | statuses               | Match flow instances with any of these statuses. Possible values: canceled,started,complete,error,waiting,holding|
          | expiringDateStart      | Match flow instances expiring after this date. (yyyy-MM-dd format)                                     |
          | expiringDateEnd        | Match flow instances expiring before this date. (yyyy-MM-dd format)                                    |
          | flowModelTypes         | Match flow instances with any of these flow model types. Possible values: COMMUNICATION,ALERT,NOTIFICATION|
          | startDateStart         | Match flow instances started after this date. (yyyy-MM-dd format)                                      |
          | startDateEnd           | Match flow instances started before this date. (yyyy-MM-dd format)                                     |
          | endDateStart           | Match flow instances ended after this date. (yyyy-MM-dd format)                                        |
          | endDateEnd             | Match flow instances ended before this date. (yyyy-MM-dd format)                                       |
          | executingLongRunningOp | Match flow instances which are executing a long-running operation                                      |
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseFlowInstancesAndAssociatedJobs'
          description: OK
      tags:
      - runtime-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/cache/update:
    post:
      description: Checks if files in the cache should be updated.
      operationId: updateCache
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Updates input file cache
      tags:
      - cache-controller
      x-accepts: application/json
      x-tags:
      - tag: cache-controller
  /api/v1/flow-models/{domain}/{flowModelId}/unpublish:
    post:
      description: 'Unpublish specified flow model version from orchestration runtime
        environment. '
      operationId: unpublish
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow model id
        explode: false
        in: path
        name: flowModelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Specify version (optional). If omitted, latest version will\
          \ be unpublished."
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Flow model published successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Bad request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Flow model not found
      summary: Unpublish flow model
      tags:
      - flow-model-controller
      x-accepts: '*/*'
      x-tags:
      - tag: flow-model-controller
  /api/v1/flow-models/{domain}/{flowModelId}/publish:
    post:
      description: Publish specified flow model version to orchestration runtime environment.
        <br /><b>Version 20.4.0:</b> Flow model '<i>version</i>' property changed
        from datatype string to integer in response body.
      operationId: publish
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow model id
        explode: false
        in: path
        name: flowModelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Specify version (optional). If omitted, latest version will\
          \ be published."
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseTenantFlowmodel'
          description: Flow model published successfully
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Bad request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Flow model not found
      summary: Publish flow model
      tags:
      - flow-model-controller
      x-accepts: '*/*'
      x-tags:
      - tag: flow-model-controller
  /api/v1/flow-models/{domain}/unpublish:
    post:
      description: 'Unpublish specified flow models version from orchestration runtime
        environment. '
      operationId: unpublish_1
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowObjectsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Bad request
      summary: Unpublish list of flow models
      tags:
      - flow-model-controller
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: flow-model-controller
  /api/v1/flow-model-contexts/{domain}/{flowModelContextId}/unpublish:
    post:
      description: 'Unpublish specified flow context version from orchestration runtime
        environment. '
      operationId: unpublish_2
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow context id
        explode: false
        in: path
        name: flowModelContextId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Specify version (optional). If omitted, latest version will\
          \ be unpublished."
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Flow model context unpublished successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Flow model context not found
      summary: Unpublish flow context
      tags:
      - flow-model-context-controller
      x-accepts: application/json
      x-tags:
      - tag: flow-model-context-controller
  /api/v1/flow-model-contexts/{domain}/{flowModelContextId}/publish:
    post:
      description: Publish specified flow context version to orchestration runtime
        environment.
      operationId: publish_1
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow context id
        explode: false
        in: path
        name: flowModelContextId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Specify version (optional). If omitted, latest version will\
          \ be published."
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseFlowModelContextSnapshot'
          description: Flow model context published successfully.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Bad request
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Flow model context not found.
      summary: Publish flow context
      tags:
      - flow-model-context-controller
      x-accepts: '*/*'
      x-tags:
      - tag: flow-model-context-controller
  /api/v1/flow-model-contexts/{domain}/unpublish:
    post:
      description: 'Unpublish specified flow contexts from orchestration runtime environment. '
      operationId: unpublish_3
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlowObjectsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Bad request
      summary: Unpublish list of flow contexts
      tags:
      - flow-model-context-controller
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: flow-model-context-controller
  /api/v1/cron-jobs/{domain}:
    get:
      operationId: listSchedules
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseCronJob'
          description: default response
      summary: List all cron jobs
      tags:
      - cron-jobs-controller
      x-accepts: application/json
      x-tags:
      - tag: cron-jobs-controller
    post:
      description: 'Adds a new Cron job '
      operationId: addSchedule
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CronJob'
        description: "Cron job. It can apply to jobs or sort assets.<br/>name: Name\
          \ of the cron job<br/>cronExpression: Cron expression in UNIX format that\
          \ reflects when the cron job should be executed (the main cron orchestration\
          \ cleanup job is executed hourly by default)<br/>cronType: Cron job type.\
          \ Available values: markDeleted,wipe,startJob,updateExpirationTime,wipeSortingAssets,expireSortingAssets,sortingAndBundling.\
          \ When wipe is selected the filter parameters are not used.<br/>startDateStart:\
          \ Filter jobs matching started date after this date or sort assets created\
          \ after this date. Date is a (yyyy-MM-dd format) String. It's also possible\
          \ to use a negative number, representing the number of days before today.<br/>startDateEnd:\
          \ Filter jobs matching started date before this date or sort assets created\
          \ before this date. Date is a (yyyy-MM-dd format) String. It's also possible\
          \ to use a negative number, representing the number of days before today.<br/>endDateStart:\
          \ Filter jobs matching ended date after this date or sort assets modified\
          \ after this date. Date is a (yyyy-MM-dd format) String. It's also possible\
          \ to use a negative number, representing the number of days before today<br/>endDateEnd:\
          \ Filter jobs matching ended date before this date or sort assets modified\
          \ before this date. Date is a (yyyy-MM-dd format) String. It's also possible\
          \ to use a negative number, representing the number of days before today<br/>statuses:\
          \ Match jobs with any of these statuses. Possible values for jobs: complete,error,canceled,deleted<br/>sortingAssetStatuses:\
          \ Match sorting assets with any of these statuses, possible values for sort\
          \ assets: processed,waiting,expired,canceled<br/>serviceName: service to\
          \ trigger for job<br/>channelName: input channel for pulling data<br/>inputPath:\
          \ path parameter for the input channel<br/>headers: map of headers for starting\
          \ job<br/>cacheTimeout: optional duration of file cache<br/>mode: Filter\
          \ jobs matching this mode (ONDEMAND|BATCH)<br/>flowModelId: Filter sorting\
          \ assets matching flow model id<br/>communicationIdList: Filter sorting\
          \ assets matching the communication id (only one) or when running sorting&bundling\
          \ with appConsolidation equal to true, use the specified communications,<br/>when\
          \ appConsolidation is false, only one communication id should be present<br/>preSortQueueName:\
          \ Filter sorting assets matching pre sort queue name<br/>jobId: Filter sorting\
          \ assets matching jobId<br/>postSortQueueName: queue name used in the post\
          \ sort queue name<br/>appConsolidation: says whether multiple communications\
          \ should be consolidated when running sorting&bundling<br/>enabled: Determines\
          \ whether the cron job should be triggered or not. Default value: true"
        required: true
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseCronJob'
          description: default response
      summary: Adds a new cron job
      tags:
      - cron-jobs-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: cron-jobs-controller
  /api/v1/cron-jobs/{domain}/{cronJobId}/trigger:
    post:
      operationId: triggerSchedule
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: CronJobId
        explode: false
        in: path
        name: cronJobId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Trigger a cron job
      tags:
      - cron-jobs-controller
      x-accepts: '*/*'
      x-tags:
      - tag: cron-jobs-controller
  /api/v1/version/api:
    get:
      operationId: getApiVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      tags:
      - version-controller
      x-accepts: application/json
      x-tags:
      - tag: version-controller
  /version/api:
    get:
      operationId: getApiVersion_1
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      tags:
      - version-controller
      x-accepts: application/json
      x-tags:
      - tag: version-controller
  /version:
    get:
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConfig'
          description: OK
      tags:
      - version-controller
      x-accepts: application/json
      x-tags:
      - tag: version-controller
  /api/v1/version:
    get:
      operationId: getVersion_1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConfig'
          description: OK
      tags:
      - version-controller
      x-accepts: application/json
      x-tags:
      - tag: version-controller
  /api/v1/tenants:
    get:
      operationId: getTenants
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponseTenant'
          description: OK
      tags:
      - tenant-admin-controller
      x-accepts: application/json
      x-tags:
      - tag: tenant-admin-controller
  /api/v1/tenants/configuration:
    get:
      operationId: getTenantConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseTenantsConfiguration'
          description: OK
      tags:
      - tenant-admin-controller
      x-accepts: application/json
      x-tags:
      - tag: tenant-admin-controller
  /api/v1/ssh/known-hosts:
    delete:
      description: Deletes all currently known hosts and their keys in this tenant
        context.
      operationId: clearKnownHosts
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK
      summary: Clear list of known hosts
      tags:
      - ssh-connection-controller
      x-accepts: '*/*'
      x-tags:
      - tag: ssh-connection-controller
    get:
      description: Returns a list of all currently known hosts and their keys in this
        tenant context.
      operationId: listKnownHosts
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseHostKey'
          description: OK
      summary: Get a list of known hosts
      tags:
      - ssh-connection-controller
      x-accepts: '*/*'
      x-tags:
      - tag: ssh-connection-controller
  /api/v1/sortdata/{domain}/{id}/content:
    get:
      description: Sorting assets using synchronous mode is not included.
      operationId: getSortingAssetContent
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/exstream-sort-index:
              examples:
                sortingIndex:
                  description: sortingIndex
                  value: "0mwrzCN0000006u     ad7f42e3-d747-4f72-885f-cfa7c1901c6d\
                    \              83575                    Iran                 \
                    \                                                    \n0mwrzCN000001o1\
                    \     79f4ce52-2f7a-46d1-9923-d25ae21fc075              22776\
                    \                    Finland                                 \
                    \                                 \n0mwrzCN000003VC     ebc5b694-fad6-4fbf-bb18-238a547262be\
                    \              39657                    France               \
                    \                                                    \n0mwrzCN000005Cv\
                    \     72a6690a-3b43-4f8c-af26-d1ca4f78e838              801  \
                    \                    Australia                               \
                    \                                 \n0mwrzCN000006uE     094fc861-0320-45a0-82f3-31842defaff9\
                    \              1960                     Switzerland "
          description: OK
      summary: Get content of sorting assets. Possible parameters are domain (in the
        URL) and the id (in the URL) of the sorting asset.
      tags:
      - sort-data-controller
      x-accepts: application/exstream-sort-index
      x-tags:
      - tag: sort-data-controller
  /api/v1/secrets/{domain}/{secretId}/exists:
    get:
      operationId: secretExists
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: secretId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseBoolean'
          description: OK
      tags:
      - secret-controller
      x-accepts: '*/*'
      x-tags:
      - tag: secret-controller
  /api/v1/runtime/{domain}/jobs:
    delete:
      description: "Delete completed, canceled or failed job entries (including all\
        \ flow instances) in runtime database and correspondent job working directories.\
        \ <br/> Filter example: filter=mode:BATCH;statuses:complete,error "
      operationId: deleteJobs
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Force deletion of job entry in the database repository in case
          deletion of one or more files in the job working directory failed.
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Delete jobs and all job files synchronously. In case we run\
          \ it asynchronously, the jobs will be marked as deleted and will be deleted\
          \ asynchronously by an external job. This parameter only is available when\
          \ using the key 'ids' in the filter."
        explode: true
        in: query
        name: syncDelete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobFilterRequest'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseJobDeleteStatus'
          description: Deleted jobs successful
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Bad request
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseJobDeleteStatus'
          description: Deletion of one or more files failed.
      summary: "Delete completed, canceled or failed jobs"
      tags:
      - runtime-controller
      x-content-type: application/json
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
    get:
      description: "Get all jobs (no filter) or all the jobs matching the filter.\
        \ <br/>Filter example: filter=mode:BATCH;statuses:complete,error "
      operationId: getJobs
      parameters:
      - description: |-
          The filter value is a semicolon delimited list of key value pairs.
          List values separate possible values with commas. In deletion, if ids are used as key, the other keys are ignored. Keys include:
          | filter name             | Filter value description                                                                           |
          |-------------------------|----------------------------------------------------------------------------------------------------|
          | ids                     | Match jobs with ids in this comma-separated list. For deletion, the maximum number of ids is 100   |
          | channel                 | Match jobs using this channel                                                                      |
          | externalId              | Match jobs associated to this external id.                                                         |
          | triggeredBy             | Match jobs triggered by this user                                                                  |
          | statuses                | Match jobs with any of these statuses. Possible values: started,complete,error,waiting,holding,canceled,deleted|
          | startDateStart          | Match jobs started after this date. (yyyy-MM-dd format)                                            |
          | startDateEnd            | Match jobs started before this date. (yyyy-MM-dd format)                                           |
          | endDateStart            | Match jobs ended after this date. (yyyy-MM-dd format)                                              |
          | endDateEnd              | Match jobs ended before this date. (yyyy-MM-dd format)                                             |
          | expiringDateStart       | Match jobs expiring after this date. (yyyy-MM-dd format)                                           |
          | expiringDateEnd         | Match jobs expiring before this date. (yyyy-MM-dd format)                                          |
          | mode                    | Match jobs with modes in this list. Modes include: BATCH,ONDEMAND                      |
          | aggregatedFMCSnapshotIds| Match jobs with any of these aggregated flow context snapshot ids.                                 |
          | flowModelTypes          | Match jobs with any of these flowModelTypes. Possible values:COMMUNICATION,ALERT      |
        explode: true
        in: query
        name: filterRequest
        required: true
        schema:
          $ref: '#/components/schemas/JobFilterRequest'
        style: form
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: "Show deleted jobs. If set to true, other states are ignored\
          \ and only deleted jobs are returned."
        explode: true
        in: query
        name: fetchDeleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseJob'
          description: OK
      summary: Get jobs
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/jobs/{id}:
    delete:
      description: Delete completed job entry (including all flow instances) in runtime
        database and correspondent job working directory.
      operationId: deleteJob
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Job id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Force deletion of job entry in the database repository in case
          deletion of one or more files in the job working directory failed.
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "409":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Deletion of one or more files failed
      summary: Delete completed job
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
    get:
      operationId: getJob
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseJob'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps:
    get:
      description: "Get all flow steps in the domain (no filter) or all the flow steps\
        \ matching the filter. <br/>Filter example: name:FileInput;statuses:complete,error"
      operationId: getFlowSteps
      parameters:
      - description: |-
          The filter value is a semicolon delimited list of key value pairs.
          List values separate possible values with commas. Keys include:
          | filter name             | Filter value description                                                                       |
          |-------------------------|------------------------------------------------------------------------------------------------|
          | ids                     | Match flow steps with ids in this comma-separated list.                                        |
          | stepName                | Match resources with this stepName                                                             |
          | externalId              | Match flow steps associated to this external id.                                               |
          | previousStepId          | Match flow steps having this flow step as previous step id                                     |
          | flowInstanceId          | Match flow steps belonging to this flow instance                                               |
          | caseSensitive           | Specify if searches (stepName, displayName, externalId) are case sensitive or not.             |
          | statuses                | Match flow steps with any of these statuses. Possible values: canceled,created,waiting,holding,started,executed,complete,error|
          | stepTypes               | Match flow steps with any of these types. Possible values: input,communication,output,decider,processor,delay,hold,externalFlow,aggregator|
          | startDateStart          | Match flow steps started after this date. (yyyy-MM-dd format)                                  |
          | startDateEnd            | Match flow steps started before this date. (yyyy-MM-dd format)                                 |
          | endDateStart            | Match flow steps ended after this date. (yyyy-MM-dd format)                                    |
          | endDateEnd              | Match flow steps ended before this date. (yyyy-MM-dd format)                                   |
          | expiringDateStart       | Match flow steps expiring after this date. (yyyy-MM-dd format)                                 |
          | expiringDateEnd         | Match flow steps expiring before this date. (yyyy-MM-dd format)                                |
          | queueDateStart          | Match flow steps started after this date. (yyyy-MM-dd format)                                  |
          | queueDateEnd            | Match flow steps started before this date. (yyyy-MM-dd format)                                 |
          | executeDateStart        | Match flow steps ended after this date. (yyyy-MM-dd format)                                    |
          | executeDateEnd          | Match flow steps ended before this date. (yyyy-MM-dd format)                                   |
          | deliveryFileRetrievable | Match flow steps that have retrievable delivery files                                          |
          | displayName             | Match flow steps with this display name                                                        |
        explode: true
        in: query
        name: filterRequest
        required: true
        schema:
          $ref: '#/components/schemas/FlowStepFilterRequest'
        style: form
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: true
        in: query
        name: checkArtifacts
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseFlowStep'
          description: OK
      summary: Get flow steps
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}:
    get:
      operationId: getFlowStep
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: checkArtifacts
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseFlowStep'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/message-file:
    get:
      operationId: getFlowStepMessageFile
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/flow:
    get:
      operationId: getFlowStepFlow
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseFlowStepFlow'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/delivery-file:
    get:
      operationId: getFlowStepDeliveryFile
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/delivery-file/outputs:
    get:
      operationId: getDeliveryFileOutputs
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseJsonNode'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/delivery-file/output-files:
    get:
      operationId: getDeliveryFileOutputFiles
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: pageRequest
        required: true
        schema:
          $ref: '#/components/schemas/SimplePageRequest'
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseString'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/customer-artifacts/{customerId}:
    get:
      description: "Get the customer artifacts (1 or more) in a zip file, for the\
        \ specified customer number (e.g. 1)"
      operationId: getCustomerOutputArtifacts
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: customerId
        required: true
        schema:
          maxLength: 512
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          description: OK
      summary: Get the customer artifacts in a zip file
      tags:
      - runtime-controller
      x-accepts: application/json
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/collection-resources:
    get:
      description: Returns all collection resource ids used by the specified flow
        step
      operationId: getFlowStepCollectionResources
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseString'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-steps/{id}/artifact/{artifactName}:
    get:
      operationId: getDeliveryFileOutputs_1
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: artifactName
        required: true
        schema:
          maxLength: 512
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-model-snapshots:
    get:
      operationId: getFlowModelSnapshots
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: true
        in: query
        name: filterRequest
        required: true
        schema:
          $ref: '#/components/schemas/FlowModelSnapshotFilterRequest'
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseFlowModelSnapshot'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-model-snapshots/{snapshotId}:
    get:
      operationId: getFlowModelSnapshot
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseFlowModelSnapshot'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-instances:
    get:
      description: "Get all flow instances (no filter) or all the flow instances matching\
        \ the filter. <br/>Filter example: filter=statuses:complete,error;externalId:specialJob "
      operationId: getFlowInstances
      parameters:
      - description: |-
          The filter value is a semicolon delimited list of key value pairs.
          List values separate possible values with commas. Keys include:
          | filter name            | Filter value description                                                                               |
          |------------------------|--------------------------------------------------------------------------------------------------------|
          | ids                    | Match flow instances with ids in this comma-separated list.                                            |
          | flowModelId            | Match flow instances spawned from this flow model id (deprecated).                                     |
          | flowModelIds           | Match flow instances spawned from these flow model ids.(Note: When used along with flowModelId filter, ids from both filters are applied.)|
          | flowModelSnapshotIds   | Match flow instances spawned from any of these flow model snapshot ids.                                |
          | jobId                  | Match flow instances that ran as part of this job.                                                     |
          | externalId             | Match flow instances associated to this external id.                                                   |
          | statuses               | Match flow instances with any of these statuses. Possible values: canceled,started,complete,error,waiting,holding|
          | expiringDateStart      | Match flow instances expiring after this date. (yyyy-MM-dd format)                                     |
          | expiringDateEnd        | Match flow instances expiring before this date. (yyyy-MM-dd format)                                    |
          | flowModelTypes         | Match flow instances with any of these flow model types. Possible values: COMMUNICATION,ALERT,NOTIFICATION|
          | startDateStart         | Match flow instances started after this date. (yyyy-MM-dd format)                                      |
          | startDateEnd           | Match flow instances started before this date. (yyyy-MM-dd format)                                     |
          | endDateStart           | Match flow instances ended after this date. (yyyy-MM-dd format)                                        |
          | endDateEnd             | Match flow instances ended before this date. (yyyy-MM-dd format)                                       |
          | executingLongRunningOp | Match flow instances which are executing a long-running operation                                      |
        explode: true
        in: query
        name: filterRequest
        required: true
        schema:
          $ref: '#/components/schemas/FlowInstanceFilterRequest'
        style: form
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseFlowInstance'
          description: OK
      summary: Get flow instances
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-instances/{id}:
    delete:
      operationId: deleteFlowInstance
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
    get:
      operationId: getFlowInstance
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: checkArtifacts
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseFlowInstance'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-instances/{id}/input:
    get:
      operationId: getFlowInstanceInput
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: download
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/runtime/{domain}/flow-instances/{id}/collection-resources:
    get:
      description: Returns all collection resource ids used by any flow step for a
        flow instance
      operationId: getFlowInstanceCollectionResources
      parameters:
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseString'
          description: OK
      tags:
      - runtime-controller
      x-accepts: '*/*'
      x-tags:
      - tag: runtime-controller
  /api/v1/plugins:
    get:
      description: Returns a list of descriptions for all currently deployed custom
        plugins
      operationId: getPlugins
      parameters:
      - description: Requested localization for plugins if available. Will return
          base localization otherwise.
        explode: true
        in: query
        name: locale
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseMapStringPlugin'
          description: OK
      summary: Get a list of plugins
      tags:
      - custom-plugins-controller
      x-accepts: application/json
      x-tags:
      - tag: custom-plugins-controller
  /api/v1/flow-models/{domain}/{flowModelId}/deletable:
    get:
      description: "It will not be deletable if it is published in at least one domain,\
        \ maybe one to which the user has no access"
      operationId: isDeletable
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow model id
        explode: false
        in: path
        name: flowModelId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Specify version (optional). If omitted, any version will match."
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseDeletableResource'
          description: Says whether the flow model can be safely deleted or not
      summary: Says whether this flow model can be safely deleted
      tags:
      - flow-model-controller
      x-accepts: '*/*'
      x-tags:
      - tag: flow-model-controller
  /api/v1/flow-models/{domain}/published:
    get:
      description: Get a list of current published flow models in this orchestration
        runtime environment context.<br /><b>Version 20.4.0:</b> Flow model '<i>version</i>'
        property changed from datatype string to integer in response body.
      operationId: listPublished
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseTenantFlowmodel'
          description: "List of published flow models, the list may be empty"
      summary: List published flow models
      tags:
      - flow-model-controller
      x-accepts: '*/*'
      x-tags:
      - tag: flow-model-controller
  /api/v1/flow-model-contexts/{domain}:
    get:
      description: "Get a filtered list of current published flow contexts in this\
        \ orchestration runtime environment context.<br/>Filter example: searchString:fulfillment"
      operationId: getFilteredContexts
      parameters:
      - description: |-
          The filter value is a semicolon delimited list of key value pairs.
          List values separate possible values with commas. Keys include:
          | filter name          | Filter value description                                                                                       |
          |----------------------|----------------------------------------------------------------------------------------------------------------|
          | snapshotIds          | Match contexts with snapshotIds in this comma-separated list.                                                  |
          | dasIds               | Match snapshots created from any of these das ids.                                                             |
          | dasVersions          | Match snapshots where das version of original flow model is in this list. Useful with a singular id in dasIds. |
          | searchString         | Match snapshots with names matching this string.                                                               |
          | caseSensitive        | Specify if searches are case sensitive or not.                                                                 |
          | wholeWord            | Specify if searches match whole word or not.                                                                   |
        explode: true
        in: query
        name: filterRequest
        required: true
        schema:
          $ref: '#/components/schemas/FlowModelContextFilterRequest'
        style: form
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageResponseFlowModelContextSnapshot'
          description: OK
      summary: Filter published flow contexts
      tags:
      - flow-model-context-controller
      x-accepts: '*/*'
      x-tags:
      - tag: flow-model-context-controller
  /api/v1/flow-model-contexts/{domain}/{flowContextId}/deletable:
    get:
      description: "It will not be deletable if it is published in at least one domain,\
        \ maybe one to which the user has no access"
      operationId: isDeletable_1
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow context id
        explode: false
        in: path
        name: flowContextId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Specify version (optional). If omitted, any version will match."
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseDeletableResource'
          description: Says whether the flow context can be safely deleted or not
      summary: Says whether this flow context can be safely deleted
      tags:
      - flow-model-context-controller
      x-accepts: '*/*'
      x-tags:
      - tag: flow-model-context-controller
  /api/v1/flow-model-contexts/{domain}/published:
    get:
      description: Get a list of current published flow contexts in this orchestration
        runtime environment context.
      operationId: listPublished_1
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListResponseFlowModelContextSnapshot'
          description: "List of published flow model contexts, the list may be empty"
      summary: List published flow contexts
      tags:
      - flow-model-context-controller
      x-accepts: '*/*'
      x-tags:
      - tag: flow-model-context-controller
  /api/v1/flow-model-contexts/{domain}/published/{flowModelContextId}:
    get:
      description: Get content of specified published flow context version from orchestration
        runtime environment.
      operationId: getPublished
      parameters:
      - description: Domain id
        explode: false
        in: path
        name: domain
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Flow context id
        explode: false
        in: path
        name: flowModelContextId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataResponseFlowModelContextSnapshot'
          description: Content of flow model context returned successfully
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: Flow model context not found
      summary: Get published flow context content
      tags:
      - flow-model-context-controller
      x-accepts: '*/*'
      x-tags:
      - tag: flow-model-context-controller
  /api/v1/configuration/{domainId}/{configType}/{configName}:
    delete:
      operationId: deleteConfiguration
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Specify the configuration type.
        explode: false
        in: path
        name: configType
        required: true
        schema:
          type: string
        style: simple
      - description: Specify the configuration name.
        explode: false
        in: path
        name: configName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenericResponse'
          description: OK
      tags:
      - configuration-controller
      x-accepts: '*/*'
      x-tags:
      - tag: configuration-controller
    get:
      operationId: getConfiguration
      parameters:
      - explode: false
        in: path
        name: domainId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
        style: simple
      - description: Specify the configuration type.
        explode: false
        in: path
        name: configType
        required: true
        schema:
          type: string
        style: simple
      - description: Specify the configuration name.
        explode: false
        in: path
        name: configName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Configuration'
          description: OK
      tags:
      - configuration-controller
      x-accepts: '*/*'
      x-tags:
      - tag: configuration-controller
  /config:
    get:
      operationId: getConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicOrcConfiguration'
          description: OK
      tags:
      - config-controller
      x-accepts: application/json
      x-tags:
      - tag: config-controller
  /api/v1/config:
    get:
      operationId: getConfig_1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicOrcConfiguration'
          description: OK
      tags:
      - config-controller
      x-accepts: application/json
      x-tags:
      - tag: config-controller
  /api/v1/runtime/cache:
    delete:
      description: Delete all input file cache entries for files which are currently
        not in use.
      operationId: cleanCache
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Clean input file cache
      tags:
      - cache-controller
      x-accepts: application/json
      x-tags:
      - tag: cache-controller
components:
  schemas:
    DataResponseTenant:
      example:
        data:
          schema:
            schemaMissingFromDatabase: true
            schemaId: schemaId
            latestSchemaChangeLogEntry:
              liquiBaseVersion: liquiBaseVersion
              orderExecuted: 0
              id: id
              dateExecuted: 2000-01-23T04:56:07.000+00:00
          tenantId: tenantId
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/Tenant'
      type: object
    Schema:
      example:
        schemaMissingFromDatabase: true
        schemaId: schemaId
        latestSchemaChangeLogEntry:
          liquiBaseVersion: liquiBaseVersion
          orderExecuted: 0
          id: id
          dateExecuted: 2000-01-23T04:56:07.000+00:00
      properties:
        schemaId:
          type: string
        latestSchemaChangeLogEntry:
          $ref: '#/components/schemas/SchemaChangeLogEntry'
        schemaMissingFromDatabase:
          type: boolean
      type: object
    SchemaChangeLogEntry:
      example:
        liquiBaseVersion: liquiBaseVersion
        orderExecuted: 0
        id: id
        dateExecuted: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        dateExecuted:
          format: date-time
          type: string
        orderExecuted:
          format: int32
          type: integer
        liquiBaseVersion:
          type: string
      type: object
    Tenant:
      example:
        schema:
          schemaMissingFromDatabase: true
          schemaId: schemaId
          latestSchemaChangeLogEntry:
            liquiBaseVersion: liquiBaseVersion
            orderExecuted: 0
            id: id
            dateExecuted: 2000-01-23T04:56:07.000+00:00
        tenantId: tenantId
      properties:
        tenantId:
          type: string
        schema:
          $ref: '#/components/schemas/Schema'
      type: object
    CreateTenantBody:
      example:
        tenantId: tenantId
        schemaName: schemaName
        dbUserId: dbUserId
        dbPassword: dbPassword
      properties:
        tenantId:
          maxLength: 40
          minLength: 1
          type: string
        schemaName:
          type: string
        dbUserId:
          type: string
        dbPassword:
          type: string
      required:
      - dbPassword
      type: object
    ListResponseTenant:
      example:
        data:
        - schema:
            schemaMissingFromDatabase: true
            schemaId: schemaId
            latestSchemaChangeLogEntry:
              liquiBaseVersion: liquiBaseVersion
              orderExecuted: 0
              id: id
              dateExecuted: 2000-01-23T04:56:07.000+00:00
          tenantId: tenantId
        - schema:
            schemaMissingFromDatabase: true
            schemaId: schemaId
            latestSchemaChangeLogEntry:
              liquiBaseVersion: liquiBaseVersion
              orderExecuted: 0
              id: id
              dateExecuted: 2000-01-23T04:56:07.000+00:00
          tenantId: tenantId
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/Tenant'
          type: array
      type: object
    RequestBodyPut:
      description: Request body
      properties:
        state:
          enum:
          - processed
          - waiting
          - expired
          - canceled
          - all
          type: string
      type: object
    SortInfo:
      type: object
    SortingDataFilter:
      example:
        creationDateEnd: 2023-02-20
        flowModelIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        metadata:
        - metadata
        - metadata
        queueNames:
        - Pre-Sort Output Queue
        lastModificationDateEnd: 2000-01-23T04:56:07.000+00:00
        referenceIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        externalIds:
        - ExternalID1
        - ExternalID2
        states:
        - processed
        - processed
        jobIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sortSubflows:
        - sortSubflows
        - sortSubflows
        assetTypes:
        - sortingIndex
        - sortingIndex
        creationDateStart: 2023-02-17
        flowStepIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        communicationIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customersCountTo: 5
        lastModificationDateStart: 2000-01-23T04:56:07.000+00:00
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        customersCountFrom: 1
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        jobIds:
          items:
            format: uuid
            type: string
          type: array
        flowStepIds:
          items:
            format: uuid
            type: string
          type: array
        communicationIds:
          items:
            format: uuid
            type: string
          type: array
        queueNames:
          example:
          - Pre-Sort Output Queue
          items:
            example: "[\"Pre-Sort Output Queue\"]"
            type: string
          type: array
        creationDateStart:
          example: 2023-02-17
          pattern: yyyy-MM-dd
          type: string
        creationDateEnd:
          example: 2023-02-20
          pattern: yyyy-MM-dd
          type: string
        externalIds:
          example:
          - ExternalID1
          - ExternalID2
          items:
            example: "[\"ExternalID1\",\"ExternalID2\"]"
            type: string
          type: array
        flowModelIds:
          items:
            format: uuid
            type: string
          type: array
        lastModificationDateStart:
          format: date-time
          type: string
        lastModificationDateEnd:
          format: date-time
          type: string
        states:
          items:
            enum:
            - processed
            - waiting
            - expired
            - canceled
            - all
            type: string
          type: array
        assetTypes:
          items:
            enum:
            - sortingIndex
            - sortingDataReference
            type: string
          type: array
        metadata:
          items:
            type: string
          type: array
        sortSubflows:
          items:
            type: string
          type: array
        referenceIds:
          items:
            format: uuid
            type: string
          type: array
        customersCountFrom:
          format: int32
          type: integer
        customersCountTo:
          format: int32
          type: integer
      type: object
    SortingDataFilterRequest:
      description: Use the filter parameter to decide which sorting assets should
        be deleted
      example:
        filter:
          creationDateEnd: 2023-02-20
          flowModelIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          metadata:
          - metadata
          - metadata
          queueNames:
          - Pre-Sort Output Queue
          lastModificationDateEnd: 2000-01-23T04:56:07.000+00:00
          referenceIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          externalIds:
          - ExternalID1
          - ExternalID2
          states:
          - processed
          - processed
          jobIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sortSubflows:
          - sortSubflows
          - sortSubflows
          assetTypes:
          - sortingIndex
          - sortingIndex
          creationDateStart: 2023-02-17
          flowStepIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          communicationIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customersCountTo: 5
          lastModificationDateStart: 2000-01-23T04:56:07.000+00:00
          ids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          customersCountFrom: 1
        offset: 0
        count: 6
        sort: "{}"
      properties:
        offset:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        sort:
          type: object
        filter:
          $ref: '#/components/schemas/SortingDataFilter'
      type: object
    GenericResponse:
      example:
        details: details
        message: message
        status: success|failure
      properties:
        status:
          description: General response state
          example: success|failure
          type: string
        message:
          description: Status code as a string representation (optional)
          type: string
        details:
          description: Detailed message (optional)
          type: string
      type: object
    DataResponseSortingAsset:
      example:
        data:
          metadata: metadata
          communicationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sortSubflow: sortSubflow
          externalId: externalId
          subpackageIds: subpackageIds
          flowStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creationDate: 2000-01-23T04:56:07.000+00:00
          referenceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModificationDate: 2000-01-23T04:56:07.000+00:00
          queueName: queueName
          customersCount: 0
          subPackageIds: subPackageIds
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: processed
          engineInfo: engineInfo
        details: details
        message: message
        status: success|failure
      properties:
        status:
          description: General response state
          example: success|failure
          type: string
        message:
          description: Status code as a string representation (optional)
          type: string
        details:
          description: Detailed message (optional)
          type: string
        data:
          $ref: '#/components/schemas/SortingAsset'
      type: object
    SortingAsset:
      example:
        metadata: metadata
        communicationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sortSubflow: sortSubflow
        externalId: externalId
        subpackageIds: subpackageIds
        flowStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creationDate: 2000-01-23T04:56:07.000+00:00
        referenceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModificationDate: 2000-01-23T04:56:07.000+00:00
        queueName: queueName
        customersCount: 0
        subPackageIds: subPackageIds
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: processed
        engineInfo: engineInfo
      properties:
        id:
          format: uuid
          type: string
        jobId:
          format: uuid
          type: string
        flowStepId:
          format: uuid
          type: string
        flowModelId:
          format: uuid
          type: string
        communicationId:
          format: uuid
          type: string
        subpackageIds:
          type: string
        state:
          enum:
          - processed
          - waiting
          - expired
          - canceled
          - all
          type: string
        creationDate:
          format: date-time
          type: string
        lastModificationDate:
          format: date-time
          type: string
        queueName:
          type: string
        metadata:
          type: string
        engineInfo:
          type: string
        sortSubflow:
          type: string
        externalId:
          type: string
        referenceId:
          format: uuid
          type: string
        customersCount:
          format: int32
          type: integer
        subPackageIds:
          type: string
          writeOnly: true
      type: object
    SecretInfo:
      example:
        b64Content: b64Content
        decodedContent: decodedContent
      properties:
        b64Content:
          type: string
        decodedContent:
          type: string
      type: object
    CronJob:
      example:
        dryRun: true
        jobAvailable: true
        endDateStart: endDateStart
        startDateEnd: startDateEnd
        enabled: true
        mode: BATCH
        cronType: markDeleted
        sortingAssetStatuses:
        - processed
        - processed
        flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        appConsolidation: true
        headers:
          key: headers
        endDateEnd: endDateEnd
        serviceName: serviceName
        domainId: domainId
        communicationIdList:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cronExpression: cronExpression
        startDateStart: startDateStart
        jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cacheTimeout: 0.8008282
        inputPath: inputPath
        preSortQueueName: preSortQueueName
        name: name
        statuses:
        - canceled
        - canceled
        channelName: channelName
        postSortQueueName: postSortQueueName
      properties:
        domainId:
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        cronExpression:
          maxLength: 255
          minLength: 1
          type: string
        cronType:
          enum:
          - markDeleted
          - wipe
          - startJob
          - updateExpirationTime
          - wipeSortingAssets
          - expireSortingAssets
          - sortingAndBundling
          type: string
        startDateStart:
          maxLength: 255
          minLength: 0
          type: string
        startDateEnd:
          maxLength: 255
          minLength: 0
          type: string
        endDateStart:
          maxLength: 255
          minLength: 0
          type: string
        endDateEnd:
          maxLength: 255
          minLength: 0
          type: string
        enabled:
          type: boolean
        serviceName:
          maxLength: 255
          minLength: 0
          type: string
        channelName:
          maxLength: 255
          minLength: 0
          type: string
        inputPath:
          maxLength: 255
          minLength: 0
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
        cacheTimeout:
          format: float
          type: number
        mode:
          enum:
          - BATCH
          - ONDEMAND
          type: string
        flowModelId:
          format: uuid
          type: string
        preSortQueueName:
          maxLength: 255
          minLength: 0
          type: string
        postSortQueueName:
          maxLength: 255
          minLength: 0
          type: string
        jobId:
          format: uuid
          type: string
        dryRun:
          type: boolean
        appConsolidation:
          type: boolean
        jobAvailable:
          type: boolean
        id:
          format: uuid
          type: string
        statuses:
          items:
            enum:
            - canceled
            - complete
            - deleted
            - started
            - waiting
            - holding
            - error
            - uninitialized
            type: string
          type: array
        sortingAssetStatuses:
          items:
            enum:
            - processed
            - waiting
            - expired
            - canceled
            - all
            type: string
          type: array
        communicationIdList:
          items:
            format: uuid
            type: string
          type: array
      type: object
    DataResponseCronJob:
      example:
        data:
          dryRun: true
          jobAvailable: true
          endDateStart: endDateStart
          startDateEnd: startDateEnd
          enabled: true
          mode: BATCH
          cronType: markDeleted
          sortingAssetStatuses:
          - processed
          - processed
          flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          appConsolidation: true
          headers:
            key: headers
          endDateEnd: endDateEnd
          serviceName: serviceName
          domainId: domainId
          communicationIdList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cronExpression: cronExpression
          startDateStart: startDateStart
          jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cacheTimeout: 0.8008282
          inputPath: inputPath
          preSortQueueName: preSortQueueName
          name: name
          statuses:
          - canceled
          - canceled
          channelName: channelName
          postSortQueueName: postSortQueueName
        details: details
        message: message
        status: success|failure
      properties:
        status:
          description: General response state
          example: success|failure
          type: string
        message:
          description: Status code as a string representation (optional)
          type: string
        details:
          description: Detailed message (optional)
          type: string
        data:
          $ref: '#/components/schemas/CronJob'
      type: object
    Configuration:
      example:
        configName: configName
        configDetails:
          key:
            values:
            - key: null
            - key: null
            secretId: secretId
            value: value
        active: true
        configType: configType
        domainId: domainId
      properties:
        domainId:
          type: string
        configType:
          type: string
        configName:
          type: string
        configDetails:
          additionalProperties:
            $ref: '#/components/schemas/PropertyValue'
          type: object
        active:
          type: boolean
      type: object
    PropertyValue:
      example:
        values:
        - key: null
        - key: null
        secretId: secretId
        value: value
      properties:
        value:
          type: string
        secretId:
          type: string
        values:
          items:
            additionalProperties:
              $ref: '#/components/schemas/PropertyValue'
            type: object
          type: array
          uniqueItems: true
      type: object
    DataResponseConfiguration:
      example:
        data:
          configName: configName
          configDetails:
            key:
              values:
              - key: null
              - key: null
              secretId: secretId
              value: value
          active: true
          configType: configType
          domainId: domainId
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/Configuration'
      type: object
    HostKey:
      example:
        host: host
        type: type
        key: key
      properties:
        host:
          type: string
        type:
          type: string
        key:
          type: string
      type: object
    PostSortRunFilter:
      example:
        jobIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creationDateStart: 2023-02-17
        creationDateEnd: 2023-02-20
        flowStepIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        communicationIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        queueNames:
        - Pre-Sort Output Queue
        externalIds:
        - ExternalID1
        - ExternalID2
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        jobIds:
          items:
            format: uuid
            type: string
          type: array
        flowStepIds:
          items:
            format: uuid
            type: string
          type: array
        communicationIds:
          items:
            format: uuid
            type: string
          type: array
        queueNames:
          example:
          - Pre-Sort Output Queue
          items:
            example: "[\"Pre-Sort Output Queue\"]"
            type: string
          type: array
        creationDateStart:
          example: 2023-02-17
          pattern: yyyy-MM-dd
          type: string
        creationDateEnd:
          example: 2023-02-20
          pattern: yyyy-MM-dd
          type: string
        externalIds:
          example:
          - ExternalID1
          - ExternalID2
          items:
            example: "[\"ExternalID1\",\"ExternalID2\"]"
            type: string
          type: array
      type: object
    PostSortRunOption:
      example:
        appConsolidation: true
        filter:
          jobIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creationDateStart: 2023-02-17
          creationDateEnd: 2023-02-20
          flowStepIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          communicationIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          queueNames:
          - Pre-Sort Output Queue
          externalIds:
          - ExternalID1
          - ExternalID2
          ids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        dryRun: false
        externalId: externalId
        customerList: "2,7,14-50"
        flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        postSortQueueName: Post-sort queue name
      properties:
        flowModelId:
          format: uuid
          type: string
        appConsolidation:
          type: boolean
        dryRun:
          example: false
          type: boolean
        externalId:
          type: string
        customerList:
          example: "2,7,14-50"
          pattern: "^(?!([ \\d]*-){2})\\d+(?: *[-,] *\\d+)*$"
          type: string
        postSortQueueName:
          example: Post-sort queue name
          maxLength: 255
          minLength: 0
          type: string
        filter:
          $ref: '#/components/schemas/PostSortRunFilter'
      required:
      - flowModelId
      type: object
    FlowInstanceCountsFilter:
      example:
        startDateStart: 2000-01-23T04:56:07.000+00:00
        flowModelIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fillMissingData: true
        startDateEnd: 2000-01-23T04:56:07.000+00:00
      properties:
        flowModelIds:
          items:
            format: uuid
            type: string
          type: array
        startDateStart:
          format: date-time
          type: string
        startDateEnd:
          format: date-time
          type: string
        fillMissingData:
          type: boolean
      type: object
    FlowInstanceCountsFilterRequest:
      example:
        filter:
          startDateStart: 2000-01-23T04:56:07.000+00:00
          flowModelIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fillMissingData: true
          startDateEnd: 2000-01-23T04:56:07.000+00:00
      properties:
        filter:
          $ref: '#/components/schemas/FlowInstanceCountsFilter'
      type: object
    DataResponseMapObjectObject:
      example:
        data:
          key: "{}"
        status: status
      properties:
        status:
          type: string
        data:
          additionalProperties:
            type: object
          type: object
      type: object
    FlowInstanceFilter:
      example:
        flowModelSnapshotIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flowModelIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        endDateEnd: 2000-01-23T04:56:07.000+00:00
        endDateStart: 2000-01-23T04:56:07.000+00:00
        startDateEnd: 2000-01-23T04:56:07.000+00:00
        externalId: externalId
        expiringDateStart: 2000-01-23T04:56:07.000+00:00
        domainId: domainId
        startDateStart: 2000-01-23T04:56:07.000+00:00
        jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flowModelTypes:
        - COMMUNICATION
        - COMMUNICATION
        executingLongRunningOp: true
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        statuses:
        - canceled
        - canceled
        flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expiringDateEnd: 2000-01-23T04:56:07.000+00:00
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        flowModelSnapshotIds:
          items:
            format: uuid
            type: string
          type: array
        flowModelId:
          deprecated: true
          format: uuid
          type: string
        flowModelIds:
          items:
            format: uuid
            type: string
          type: array
        jobId:
          format: uuid
          type: string
        startDateStart:
          format: date-time
          type: string
        startDateEnd:
          format: date-time
          type: string
        endDateStart:
          format: date-time
          type: string
        endDateEnd:
          format: date-time
          type: string
        expiringDateStart:
          format: date-time
          type: string
        expiringDateEnd:
          format: date-time
          type: string
        domainId:
          type: string
        externalId:
          maxLength: 400
          minLength: 0
          type: string
        statuses:
          items:
            enum:
            - canceled
            - started
            - complete
            - waiting
            - holding
            - error
            - finishing
            type: string
          type: array
        flowModelTypes:
          items:
            enum:
            - COMMUNICATION
            - ALERT
            - NOTIFICATION
            type: string
          type: array
        executingLongRunningOp:
          type: boolean
      type: object
    FlowInstanceFilterRequest:
      example:
        filter:
          flowModelSnapshotIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flowModelIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endDateEnd: 2000-01-23T04:56:07.000+00:00
          endDateStart: 2000-01-23T04:56:07.000+00:00
          startDateEnd: 2000-01-23T04:56:07.000+00:00
          externalId: externalId
          expiringDateStart: 2000-01-23T04:56:07.000+00:00
          domainId: domainId
          startDateStart: 2000-01-23T04:56:07.000+00:00
          jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flowModelTypes:
          - COMMUNICATION
          - COMMUNICATION
          executingLongRunningOp: true
          ids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          statuses:
          - canceled
          - canceled
          flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expiringDateEnd: 2000-01-23T04:56:07.000+00:00
        offset: 0
        count: 6
        sort: "{}"
      properties:
        offset:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        sort:
          type: object
        filter:
          $ref: '#/components/schemas/FlowInstanceFilter'
      type: object
    DataResponseFlowInstancesAndAssociatedJobs:
      example:
        data:
          flowInstances:
            data:
            - msg: msg
              flowModelSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              endDate: 2000-01-23T04:56:07.000+00:00
              inputRetrievable: true
              externalId: externalId
              domainId: domainId
              jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              executingLongRunningOp: true
              flowModelType: COMMUNICATION
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              startDate: 2000-01-23T04:56:07.000+00:00
              status: canceled
              expirationDate: 2000-01-23T04:56:07.000+00:00
            - msg: msg
              flowModelSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              endDate: 2000-01-23T04:56:07.000+00:00
              inputRetrievable: true
              externalId: externalId
              domainId: domainId
              jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              executingLongRunningOp: true
              flowModelType: COMMUNICATION
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              startDate: 2000-01-23T04:56:07.000+00:00
              status: canceled
              expirationDate: 2000-01-23T04:56:07.000+00:00
            page:
              pageOffset: 6
              totalPages: 5
              currentPageNumber: 5
              pageSize: 0
              totalElements: 1
            status: status
          jobs:
            key:
              msg: msg
              aggregatedFMCSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              endDate: 2000-01-23T04:56:07.000+00:00
              channel: channel
              externalId: externalId
              domainId: domainId
              mode: BATCH
              flowModelType: COMMUNICATION
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              startDate: 2000-01-23T04:56:07.000+00:00
              status: canceled
              triggeredBy: triggeredBy
              expirationDate: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/FlowInstancesAndAssociatedJobs'
      type: object
    FlowInstance:
      example:
        msg: msg
        flowModelSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        endDate: 2000-01-23T04:56:07.000+00:00
        inputRetrievable: true
        externalId: externalId
        domainId: domainId
        jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        executingLongRunningOp: true
        flowModelType: COMMUNICATION
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startDate: 2000-01-23T04:56:07.000+00:00
        status: canceled
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        jobId:
          format: uuid
          type: string
        flowModelId:
          format: uuid
          type: string
        flowModelSnapshotId:
          format: uuid
          type: string
        domainId:
          type: string
        status:
          enum:
          - canceled
          - started
          - complete
          - waiting
          - holding
          - error
          - finishing
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        msg:
          type: string
        externalId:
          type: string
        flowModelType:
          enum:
          - COMMUNICATION
          - ALERT
          - NOTIFICATION
          type: string
        inputRetrievable:
          type: boolean
        executingLongRunningOp:
          type: boolean
      type: object
    FlowInstancesAndAssociatedJobs:
      example:
        flowInstances:
          data:
          - msg: msg
            flowModelSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            endDate: 2000-01-23T04:56:07.000+00:00
            inputRetrievable: true
            externalId: externalId
            domainId: domainId
            jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            executingLongRunningOp: true
            flowModelType: COMMUNICATION
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            startDate: 2000-01-23T04:56:07.000+00:00
            status: canceled
            expirationDate: 2000-01-23T04:56:07.000+00:00
          - msg: msg
            flowModelSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            endDate: 2000-01-23T04:56:07.000+00:00
            inputRetrievable: true
            externalId: externalId
            domainId: domainId
            jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            executingLongRunningOp: true
            flowModelType: COMMUNICATION
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            startDate: 2000-01-23T04:56:07.000+00:00
            status: canceled
            expirationDate: 2000-01-23T04:56:07.000+00:00
          page:
            pageOffset: 6
            totalPages: 5
            currentPageNumber: 5
            pageSize: 0
            totalElements: 1
          status: status
        jobs:
          key:
            msg: msg
            aggregatedFMCSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            endDate: 2000-01-23T04:56:07.000+00:00
            channel: channel
            externalId: externalId
            domainId: domainId
            mode: BATCH
            flowModelType: COMMUNICATION
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            startDate: 2000-01-23T04:56:07.000+00:00
            status: canceled
            triggeredBy: triggeredBy
            expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        flowInstances:
          $ref: '#/components/schemas/PageResponseFlowInstance'
        jobs:
          additionalProperties:
            $ref: '#/components/schemas/Job'
          type: object
      type: object
    Job:
      example:
        msg: msg
        aggregatedFMCSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        endDate: 2000-01-23T04:56:07.000+00:00
        channel: channel
        externalId: externalId
        domainId: domainId
        mode: BATCH
        flowModelType: COMMUNICATION
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startDate: 2000-01-23T04:56:07.000+00:00
        status: canceled
        triggeredBy: triggeredBy
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        domainId:
          type: string
        channel:
          type: string
        mode:
          enum:
          - BATCH
          - ONDEMAND
          type: string
        status:
          enum:
          - canceled
          - complete
          - deleted
          - started
          - waiting
          - holding
          - error
          - uninitialized
          type: string
        flowModelType:
          enum:
          - COMMUNICATION
          - ALERT
          - NOTIFICATION
          type: string
        msg:
          type: string
        externalId:
          type: string
        triggeredBy:
          type: string
        aggregatedFMCSnapshotId:
          format: uuid
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
      type: object
    PageResponseFlowInstance:
      example:
        data:
        - msg: msg
          flowModelSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endDate: 2000-01-23T04:56:07.000+00:00
          inputRetrievable: true
          externalId: externalId
          domainId: domainId
          jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          executingLongRunningOp: true
          flowModelType: COMMUNICATION
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          expirationDate: 2000-01-23T04:56:07.000+00:00
        - msg: msg
          flowModelSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endDate: 2000-01-23T04:56:07.000+00:00
          inputRetrievable: true
          externalId: externalId
          domainId: domainId
          jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          executingLongRunningOp: true
          flowModelType: COMMUNICATION
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          expirationDate: 2000-01-23T04:56:07.000+00:00
        page:
          pageOffset: 6
          totalPages: 5
          currentPageNumber: 5
          pageSize: 0
          totalElements: 1
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/FlowInstance'
          type: array
        page:
          $ref: '#/components/schemas/SimplePage'
      type: object
    SimplePage:
      example:
        pageOffset: 6
        totalPages: 5
        currentPageNumber: 5
        pageSize: 0
        totalElements: 1
      properties:
        pageSize:
          format: int32
          type: integer
        pageOffset:
          format: int32
          type: integer
        totalElements:
          format: int64
          type: integer
        totalPages:
          format: int32
          type: integer
        currentPageNumber:
          format: int32
          type: integer
      type: object
    Condition:
      example:
        datatype: string
        values:
        - values
        - values
        name: name
        type: outcome
        value: value
        operator: EQ
      properties:
        operator:
          enum:
          - EQ
          - NEQ
          - LT
          - LTE
          - GT
          - GTE
          - IN
          - NIN
          - NL
          - NN
          type: string
        datatype:
          enum:
          - string
          - numeric
          type: string
        type:
          enum:
          - outcome
          - variable
          type: string
        name:
          type: string
        value:
          type: string
        values:
          items:
            type: string
          type: array
      type: object
    Connection:
      example:
        condition:
          datatype: string
          values:
          - values
          - values
          name: name
          type: outcome
          value: value
          operator: EQ
        sourceAnchor: sourceAnchor
        targetAnchor: targetAnchor
        displayName: displayName
        defaultConnection: true
        targetNodeId: targetNodeId
        targetNode: targetNode
      properties:
        condition:
          $ref: '#/components/schemas/Condition'
        sourceAnchor:
          type: string
        targetAnchor:
          type: string
        targetNode:
          type: string
        targetNodeId:
          type: string
        displayName:
          type: string
        defaultConnection:
          type: boolean
      type: object
    DataResponseTenantFlowmodel:
      example:
        data:
          sdpermissions:
          - sdpermissions
          - sdpermissions
          nodes:
          - internal: true
            metadata:
            - name: name
              text: text
              type: type
            - name: name
              text: text
              type: type
            instanceId: instanceId
            subtype: directory_channel
            displayName: displayName
            x: 1
            "y": 5
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            id: id
            type: input
            connections:
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
          - internal: true
            metadata:
            - name: name
              text: text
              type: type
            - name: name
              text: text
              type: type
            instanceId: instanceId
            subtype: directory_channel
            displayName: displayName
            x: 1
            "y": 5
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            id: id
            type: input
            connections:
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
          lockedBy: lockedBy
          latestVersion: true
          stateComment: stateComment
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: DRAFT
          type: COMMUNICATION
          version: 6
          revision: 0
        details: details
        message: message
        status: success|failure
      properties:
        status:
          description: General response state
          example: success|failure
          type: string
        message:
          description: Status code as a string representation (optional)
          type: string
        details:
          description: Detailed message (optional)
          type: string
        data:
          $ref: '#/components/schemas/TenantFlowmodel'
      type: object
    Node:
      example:
        internal: true
        metadata:
        - name: name
          text: text
          type: type
        - name: name
          text: text
          type: type
        instanceId: instanceId
        subtype: directory_channel
        displayName: displayName
        x: 1
        "y": 5
        attributes:
        - name: name
          value: value
        - name: name
          value: value
        id: id
        type: input
        connections:
        - condition:
            datatype: string
            values:
            - values
            - values
            name: name
            type: outcome
            value: value
            operator: EQ
          sourceAnchor: sourceAnchor
          targetAnchor: targetAnchor
          displayName: displayName
          defaultConnection: true
          targetNodeId: targetNodeId
          targetNode: targetNode
        - condition:
            datatype: string
            values:
            - values
            - values
            name: name
            type: outcome
            value: value
            operator: EQ
          sourceAnchor: sourceAnchor
          targetAnchor: targetAnchor
          displayName: displayName
          defaultConnection: true
          targetNodeId: targetNodeId
          targetNode: targetNode
      properties:
        displayName:
          type: string
        id:
          type: string
        instanceId:
          type: string
        type:
          enum:
          - input
          - output
          - output_external_response
          - communication
          - communication_response
          - externalsubflow
          - decider
          - delay
          - processor
          - aggregation
          - event
          type: string
        subtype:
          enum:
          - directory_channel
          - https_channel
          - aws_s3_input_channel
          - empower_fulfillment_channel
          - post_sort_event_channel
          - file_channel
          - email_channel
          - documentresponse_channel
          - azure_blob_channel
          - aws_s3_channel
          - gcp_cs_out_channel
          - generic
          - generic_channel
          - unknown
          type: string
        internal:
          type: boolean
        x:
          format: int32
          type: integer
        "y":
          format: int32
          type: integer
        connections:
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        attributes:
          items:
            $ref: '#/components/schemas/NodeAttribute'
          type: array
        metadata:
          items:
            $ref: '#/components/schemas/NodeMetadata'
          type: array
      type: object
    NodeAttribute:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    NodeMetadata:
      example:
        name: name
        text: text
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        text:
          type: string
      type: object
    TenantFlowmodel:
      example:
        sdpermissions:
        - sdpermissions
        - sdpermissions
        nodes:
        - internal: true
          metadata:
          - name: name
            text: text
            type: type
          - name: name
            text: text
            type: type
          instanceId: instanceId
          subtype: directory_channel
          displayName: displayName
          x: 1
          "y": 5
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          id: id
          type: input
          connections:
          - condition:
              datatype: string
              values:
              - values
              - values
              name: name
              type: outcome
              value: value
              operator: EQ
            sourceAnchor: sourceAnchor
            targetAnchor: targetAnchor
            displayName: displayName
            defaultConnection: true
            targetNodeId: targetNodeId
            targetNode: targetNode
          - condition:
              datatype: string
              values:
              - values
              - values
              name: name
              type: outcome
              value: value
              operator: EQ
            sourceAnchor: sourceAnchor
            targetAnchor: targetAnchor
            displayName: displayName
            defaultConnection: true
            targetNodeId: targetNodeId
            targetNode: targetNode
        - internal: true
          metadata:
          - name: name
            text: text
            type: type
          - name: name
            text: text
            type: type
          instanceId: instanceId
          subtype: directory_channel
          displayName: displayName
          x: 1
          "y": 5
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          id: id
          type: input
          connections:
          - condition:
              datatype: string
              values:
              - values
              - values
              name: name
              type: outcome
              value: value
              operator: EQ
            sourceAnchor: sourceAnchor
            targetAnchor: targetAnchor
            displayName: displayName
            defaultConnection: true
            targetNodeId: targetNodeId
            targetNode: targetNode
          - condition:
              datatype: string
              values:
              - values
              - values
              name: name
              type: outcome
              value: value
              operator: EQ
            sourceAnchor: sourceAnchor
            targetAnchor: targetAnchor
            displayName: displayName
            defaultConnection: true
            targetNodeId: targetNodeId
            targetNode: targetNode
        lockedBy: lockedBy
        latestVersion: true
        stateComment: stateComment
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        state: DRAFT
        type: COMMUNICATION
        version: 6
        revision: 0
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        revision:
          format: int32
          type: integer
        version:
          format: int32
          type: integer
        state:
          enum:
          - DRAFT
          - REVIEW
          - APPROVED
          - REJECTED
          type: string
        type:
          enum:
          - COMMUNICATION
          - ALERT
          - NOTIFICATION
          type: string
        stateComment:
          type: string
        lockedBy:
          type: string
        sdpermissions:
          items:
            type: string
          type: array
        nodes:
          items:
            $ref: '#/components/schemas/Node'
          type: array
        latestVersion:
          type: boolean
      type: object
    FlowObjectData:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: version
      properties:
        id:
          format: uuid
          type: string
        version:
          type: string
      type: object
    FlowObjectsRequest:
      example:
        resources:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: version
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: version
      properties:
        resources:
          items:
            $ref: '#/components/schemas/FlowObjectData'
          type: array
      type: object
    DataResponseFlowModelContextSnapshot:
      example:
        data:
          snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          xmlContent: xmlContent
          version: 0
          domainId: domainId
          content: content
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/FlowModelContextSnapshot'
      type: object
    FlowModelContextSnapshot:
      example:
        snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        xmlContent: xmlContent
        version: 0
        domainId: domainId
        content: content
      properties:
        snapshotId:
          format: uuid
          type: string
        id:
          format: uuid
          type: string
        domainId:
          type: string
        name:
          type: string
        xmlContent:
          type: string
        version:
          format: int32
          type: integer
        content:
          type: string
      type: object
    Details:
      example:
        git:
          commits: commits
          tag: tag
          branch: branch
          hash: hash
        appName: appName
        buildNumber: buildNumber
        timestamp: timestamp
      properties:
        appName:
          type: string
        buildNumber:
          type: string
        timestamp:
          type: string
        git:
          $ref: '#/components/schemas/GitConfig'
      type: object
    GitConfig:
      example:
        commits: commits
        tag: tag
        branch: branch
        hash: hash
      properties:
        tag:
          type: string
        hash:
          type: string
        branch:
          type: string
        commits:
          type: string
      type: object
    VersionConfig:
      example:
        patch: patch
        major: major
        minor: minor
        versionString: versionString
        apiIdentifier: apiIdentifier
        details:
          git:
            commits: commits
            tag: tag
            branch: branch
            hash: hash
          appName: appName
          buildNumber: buildNumber
          timestamp: timestamp
      properties:
        apiIdentifier:
          type: string
        details:
          $ref: '#/components/schemas/Details'
        major:
          type: string
        minor:
          type: string
        patch:
          type: string
        versionString:
          type: string
      type: object
    DataResponseTenantsConfiguration:
      example:
        data:
          autoSchemaManagement: true
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/TenantsConfiguration'
      type: object
    TenantsConfiguration:
      example:
        autoSchemaManagement: true
      properties:
        autoSchemaManagement:
          type: boolean
      type: object
    ListResponseHostKey:
      example:
        data:
        - host: host
          type: type
          key: key
        - host: host
          type: type
          key: key
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/HostKey'
          type: array
      type: object
    DataResponseBoolean:
      example:
        data: true
        details: details
        message: message
        status: success|failure
      properties:
        status:
          description: General response state
          example: success|failure
          type: string
        message:
          description: Status code as a string representation (optional)
          type: string
        details:
          description: Detailed message (optional)
          type: string
        data:
          type: boolean
      type: object
    JobFilter:
      example:
        endDateEnd: 2000-01-23T04:56:07.000+00:00
        endDateStart: 2000-01-23T04:56:07.000+00:00
        channel: channel
        startDateEnd: 2000-01-23T04:56:07.000+00:00
        externalId: externalId
        expiringDateStart: 2000-01-23T04:56:07.000+00:00
        domainId: domainId
        startDateStart: 2000-01-23T04:56:07.000+00:00
        mode: BATCH
        flowModelTypes:
        - COMMUNICATION
        - COMMUNICATION
        aggregatedFMCSnapshotIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        statuses:
        - canceled
        - canceled
        expiringDateEnd: 2000-01-23T04:56:07.000+00:00
        triggeredBy: triggeredBy
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        channel:
          maxLength: 255
          minLength: 0
          type: string
        startDateStart:
          format: date-time
          type: string
        startDateEnd:
          format: date-time
          type: string
        endDateStart:
          format: date-time
          type: string
        endDateEnd:
          format: date-time
          type: string
        expiringDateStart:
          format: date-time
          type: string
        expiringDateEnd:
          format: date-time
          type: string
        domainId:
          type: string
        statuses:
          items:
            enum:
            - canceled
            - complete
            - deleted
            - started
            - waiting
            - holding
            - error
            - uninitialized
            type: string
          type: array
        mode:
          enum:
          - BATCH
          - ONDEMAND
          type: string
        externalId:
          maxLength: 400
          minLength: 0
          type: string
        triggeredBy:
          maxLength: 400
          minLength: 0
          type: string
        aggregatedFMCSnapshotIds:
          items:
            format: uuid
            type: string
          type: array
        flowModelTypes:
          items:
            enum:
            - COMMUNICATION
            - ALERT
            - NOTIFICATION
            type: string
          type: array
      type: object
    JobFilterRequest:
      example:
        filter:
          endDateEnd: 2000-01-23T04:56:07.000+00:00
          endDateStart: 2000-01-23T04:56:07.000+00:00
          channel: channel
          startDateEnd: 2000-01-23T04:56:07.000+00:00
          externalId: externalId
          expiringDateStart: 2000-01-23T04:56:07.000+00:00
          domainId: domainId
          startDateStart: 2000-01-23T04:56:07.000+00:00
          mode: BATCH
          flowModelTypes:
          - COMMUNICATION
          - COMMUNICATION
          aggregatedFMCSnapshotIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ids:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          statuses:
          - canceled
          - canceled
          expiringDateEnd: 2000-01-23T04:56:07.000+00:00
          triggeredBy: triggeredBy
        offset: 0
        count: 6
        sort: "{}"
      properties:
        offset:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        sort:
          type: object
        filter:
          $ref: '#/components/schemas/JobFilter'
      type: object
    PageResponseJob:
      example:
        data:
        - msg: msg
          aggregatedFMCSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endDate: 2000-01-23T04:56:07.000+00:00
          channel: channel
          externalId: externalId
          domainId: domainId
          mode: BATCH
          flowModelType: COMMUNICATION
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          triggeredBy: triggeredBy
          expirationDate: 2000-01-23T04:56:07.000+00:00
        - msg: msg
          aggregatedFMCSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endDate: 2000-01-23T04:56:07.000+00:00
          channel: channel
          externalId: externalId
          domainId: domainId
          mode: BATCH
          flowModelType: COMMUNICATION
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          triggeredBy: triggeredBy
          expirationDate: 2000-01-23T04:56:07.000+00:00
        page:
          pageOffset: 6
          totalPages: 5
          currentPageNumber: 5
          pageSize: 0
          totalElements: 1
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/Job'
          type: array
        page:
          $ref: '#/components/schemas/SimplePage'
      type: object
    DataResponseJob:
      example:
        data:
          msg: msg
          aggregatedFMCSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endDate: 2000-01-23T04:56:07.000+00:00
          channel: channel
          externalId: externalId
          domainId: domainId
          mode: BATCH
          flowModelType: COMMUNICATION
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          triggeredBy: triggeredBy
          expirationDate: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/Job'
      type: object
    FlowStepFilter:
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
        flowInstanceId:
          format: uuid
          type: string
        stepName:
          maxLength: 255
          minLength: 0
          type: string
        displayName:
          maxLength: 255
          minLength: 0
          type: string
        startDateStart:
          format: date-time
          type: string
        startDateEnd:
          format: date-time
          type: string
        endDateStart:
          format: date-time
          type: string
        endDateEnd:
          format: date-time
          type: string
        queueDateStart:
          format: date-time
          type: string
        queueDateEnd:
          format: date-time
          type: string
        executeDateStart:
          format: date-time
          type: string
        executeDateEnd:
          format: date-time
          type: string
        expiringDateStart:
          format: date-time
          type: string
        expiringDateEnd:
          format: date-time
          type: string
        externalId:
          maxLength: 400
          minLength: 0
          type: string
        previousStepId:
          format: uuid
          type: string
        caseSensitive:
          type: boolean
        deliveryFileRetrievable:
          type: boolean
        statuses:
          items:
            enum:
            - canceled
            - created
            - waiting
            - holding
            - started
            - executed
            - filtered
            - complete
            - error
            - expired
            type: string
          type: array
        stepTypes:
          items:
            enum:
            - input
            - communication
            - output
            - decider
            - processor
            - aggregator
            - delay
            - hold
            - externalFlow
            type: string
          type: array
      type: object
    FlowStepFilterRequest:
      properties:
        offset:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        sort:
          type: object
        filter:
          $ref: '#/components/schemas/FlowStepFilter'
      type: object
    FlowStep:
      example:
        msg: msg
        stepType: input
        endDate: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        previousStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        externalId: externalId
        flowInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        stepName: stepName
        queueDate: 2000-01-23T04:56:07.000+00:00
        executeDate: 2000-01-23T04:56:07.000+00:00
        deliveryFileRetrievable: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        messageFileRetrievable: true
        startDate: 2000-01-23T04:56:07.000+00:00
        status: canceled
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        previousStepId:
          format: uuid
          type: string
        flowInstanceId:
          format: uuid
          type: string
        stepName:
          type: string
        displayName:
          type: string
        status:
          enum:
          - canceled
          - created
          - waiting
          - holding
          - started
          - executed
          - filtered
          - complete
          - error
          - expired
          type: string
        stepType:
          enum:
          - input
          - communication
          - output
          - decider
          - processor
          - aggregator
          - delay
          - hold
          - externalFlow
          type: string
        queueDate:
          format: date-time
          type: string
        startDate:
          format: date-time
          type: string
        executeDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        msg:
          type: string
        externalId:
          type: string
        deliveryFileRetrievable:
          type: boolean
        messageFileRetrievable:
          type: boolean
      type: object
    PageResponseFlowStep:
      example:
        data:
        - msg: msg
          stepType: input
          endDate: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          previousStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          externalId: externalId
          flowInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          stepName: stepName
          queueDate: 2000-01-23T04:56:07.000+00:00
          executeDate: 2000-01-23T04:56:07.000+00:00
          deliveryFileRetrievable: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          messageFileRetrievable: true
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          expirationDate: 2000-01-23T04:56:07.000+00:00
        - msg: msg
          stepType: input
          endDate: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          previousStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          externalId: externalId
          flowInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          stepName: stepName
          queueDate: 2000-01-23T04:56:07.000+00:00
          executeDate: 2000-01-23T04:56:07.000+00:00
          deliveryFileRetrievable: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          messageFileRetrievable: true
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          expirationDate: 2000-01-23T04:56:07.000+00:00
        page:
          pageOffset: 6
          totalPages: 5
          currentPageNumber: 5
          pageSize: 0
          totalElements: 1
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/FlowStep'
          type: array
        page:
          $ref: '#/components/schemas/SimplePage'
      type: object
    DataResponseFlowStep:
      example:
        data:
          msg: msg
          stepType: input
          endDate: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          previousStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          externalId: externalId
          flowInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          stepName: stepName
          queueDate: 2000-01-23T04:56:07.000+00:00
          executeDate: 2000-01-23T04:56:07.000+00:00
          deliveryFileRetrievable: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          messageFileRetrievable: true
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          expirationDate: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/FlowStep'
      type: object
    StreamingResponseBody:
      type: object
    DataResponseFlowStepFlow:
      example:
        data:
          flowSteps:
          - msg: msg
            stepType: input
            endDate: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            previousStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            externalId: externalId
            flowInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            stepName: stepName
            queueDate: 2000-01-23T04:56:07.000+00:00
            executeDate: 2000-01-23T04:56:07.000+00:00
            deliveryFileRetrievable: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            messageFileRetrievable: true
            startDate: 2000-01-23T04:56:07.000+00:00
            status: canceled
            expirationDate: 2000-01-23T04:56:07.000+00:00
          - msg: msg
            stepType: input
            endDate: 2000-01-23T04:56:07.000+00:00
            displayName: displayName
            previousStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            externalId: externalId
            flowInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            stepName: stepName
            queueDate: 2000-01-23T04:56:07.000+00:00
            executeDate: 2000-01-23T04:56:07.000+00:00
            deliveryFileRetrievable: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            messageFileRetrievable: true
            startDate: 2000-01-23T04:56:07.000+00:00
            status: canceled
            expirationDate: 2000-01-23T04:56:07.000+00:00
          inputChannel: inputChannel
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/FlowStepFlow'
      type: object
    FlowStepFlow:
      example:
        flowSteps:
        - msg: msg
          stepType: input
          endDate: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          previousStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          externalId: externalId
          flowInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          stepName: stepName
          queueDate: 2000-01-23T04:56:07.000+00:00
          executeDate: 2000-01-23T04:56:07.000+00:00
          deliveryFileRetrievable: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          messageFileRetrievable: true
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          expirationDate: 2000-01-23T04:56:07.000+00:00
        - msg: msg
          stepType: input
          endDate: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          previousStepId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          externalId: externalId
          flowInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          stepName: stepName
          queueDate: 2000-01-23T04:56:07.000+00:00
          executeDate: 2000-01-23T04:56:07.000+00:00
          deliveryFileRetrievable: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          messageFileRetrievable: true
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          expirationDate: 2000-01-23T04:56:07.000+00:00
        inputChannel: inputChannel
      properties:
        inputChannel:
          type: string
        flowSteps:
          items:
            $ref: '#/components/schemas/FlowStep'
          type: array
      type: object
    DataResponseJsonNode:
      example:
        data: "{}"
        status: status
      properties:
        status:
          type: string
        data:
          type: object
      type: object
    JsonNode:
      type: object
    SimplePageRequest:
      properties:
        offset:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
      type: object
    PageResponseString:
      example:
        data:
        - data
        - data
        page:
          pageOffset: 6
          totalPages: 5
          currentPageNumber: 5
          pageSize: 0
          totalElements: 1
        status: status
      properties:
        status:
          type: string
        data:
          items:
            type: string
          type: array
        page:
          $ref: '#/components/schemas/SimplePage'
      type: object
    ListResponseString:
      example:
        data:
        - data
        - data
        status: status
      properties:
        status:
          type: string
        data:
          items:
            type: string
          type: array
      type: object
    FlowModelSnapshotFilter:
      properties:
        domain:
          type: string
        ids:
          items:
            format: uuid
            type: string
          type: array
        dasIds:
          items:
            format: uuid
            type: string
          type: array
        dasVersions:
          items:
            format: int32
            type: integer
          type: array
        searchString:
          maxLength: 128
          minLength: 0
          type: string
        caseSensitive:
          type: boolean
        wholeWord:
          type: boolean
        published:
          type: boolean
        publishedBy:
          maxLength: 255
          minLength: 0
          type: string
        publishDateStart:
          format: date-time
          type: string
        publishDateEnd:
          format: date-time
          type: string
        unpublishDateStart:
          format: date-time
          type: string
        unpublishDateEnd:
          format: date-time
          type: string
        effectiveDate:
          format: date-time
          type: string
      type: object
    FlowModelSnapshotFilterRequest:
      properties:
        offset:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        sort:
          type: object
        filter:
          $ref: '#/components/schemas/FlowModelSnapshotFilter'
        includeContent:
          type: boolean
      type: object
    FlowModelSnapshot:
      example:
        dasVersion: 0
        publishedBy: publishedBy
        snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        domain: domain
        name: name
        publishDate: 2000-01-23T04:56:07.000+00:00
        unpublishDate: 2000-01-23T04:56:07.000+00:00
        description: description
        content:
        - content
        - content
        dasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        snapshotId:
          format: uuid
          type: string
        dasId:
          format: uuid
          type: string
        dasVersion:
          format: int32
          type: integer
        domain:
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        description:
          type: string
        publishedBy:
          type: string
        publishDate:
          format: date-time
          type: string
        unpublishDate:
          format: date-time
          type: string
        content:
          items:
            format: byte
            type: string
          type: array
      type: object
    PageResponseFlowModelSnapshot:
      example:
        data:
        - dasVersion: 0
          publishedBy: publishedBy
          snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain: domain
          name: name
          publishDate: 2000-01-23T04:56:07.000+00:00
          unpublishDate: 2000-01-23T04:56:07.000+00:00
          description: description
          content:
          - content
          - content
          dasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - dasVersion: 0
          publishedBy: publishedBy
          snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain: domain
          name: name
          publishDate: 2000-01-23T04:56:07.000+00:00
          unpublishDate: 2000-01-23T04:56:07.000+00:00
          description: description
          content:
          - content
          - content
          dasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        page:
          pageOffset: 6
          totalPages: 5
          currentPageNumber: 5
          pageSize: 0
          totalElements: 1
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/FlowModelSnapshot'
          type: array
        page:
          $ref: '#/components/schemas/SimplePage'
      type: object
    DataResponseFlowModelSnapshot:
      example:
        data:
          dasVersion: 0
          publishedBy: publishedBy
          snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain: domain
          name: name
          publishDate: 2000-01-23T04:56:07.000+00:00
          unpublishDate: 2000-01-23T04:56:07.000+00:00
          description: description
          content:
          - content
          - content
          dasId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/FlowModelSnapshot'
      type: object
    DataResponseFlowInstance:
      example:
        data:
          msg: msg
          flowModelSnapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endDate: 2000-01-23T04:56:07.000+00:00
          inputRetrievable: true
          externalId: externalId
          domainId: domainId
          jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          executingLongRunningOp: true
          flowModelType: COMMUNICATION
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDate: 2000-01-23T04:56:07.000+00:00
          status: canceled
          expirationDate: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/FlowInstance'
      type: object
    DataResponseMapStringPlugin:
      example:
        data:
          key:
            iconType: iconType
            custom: true
            icon: icon
            description: description
            id: id
            label: label
            locale: locale
            version: version
            config:
              secureChannelHostVerificationRequired:
              - secureChannelHostVerificationRequired
              - secureChannelHostVerificationRequired
              authenticationProvided: true
              analyticsSupported: true
              outcomeMappingSupported: true
              additionalFilesInputHandlingOnly: true
              validators: "{}"
              restrictedUseDefault: true
              outcomeMappingRequired: true
              assuredDeliverySupported: true
              jobExpirationSupported: true
              steps:
              - visible: visible
                id: id
                title: title
                properties:
                - headers: true
                  visible: visible
                  defaultValue: defaultValue
                  validators:
                  - validators
                  - validators
                  validator: validator
                  dynamicOptions:
                    filter: filter
                    type: type
                  label: label
                  type: type
                  rows: 5
                  maxListRows: 1
                  required: true
                  instruction: instruction
                  options:
                  - id: id
                    label: label
                  - id: id
                    label: label
                  migration:
                    format: format
                    source: source
                  disabled: true
                  id: id
                  placeholder: placeholder
                  minListRows: 6
                  maxLength: 0
                - headers: true
                  visible: visible
                  defaultValue: defaultValue
                  validators:
                  - validators
                  - validators
                  validator: validator
                  dynamicOptions:
                    filter: filter
                    type: type
                  label: label
                  type: type
                  rows: 5
                  maxListRows: 1
                  required: true
                  instruction: instruction
                  options:
                  - id: id
                    label: label
                  - id: id
                    label: label
                  migration:
                    format: format
                    source: source
                  disabled: true
                  id: id
                  placeholder: placeholder
                  minListRows: 6
                  maxLength: 0
              - visible: visible
                id: id
                title: title
                properties:
                - headers: true
                  visible: visible
                  defaultValue: defaultValue
                  validators:
                  - validators
                  - validators
                  validator: validator
                  dynamicOptions:
                    filter: filter
                    type: type
                  label: label
                  type: type
                  rows: 5
                  maxListRows: 1
                  required: true
                  instruction: instruction
                  options:
                  - id: id
                    label: label
                  - id: id
                    label: label
                  migration:
                    format: format
                    source: source
                  disabled: true
                  id: id
                  placeholder: placeholder
                  minListRows: 6
                  maxLength: 0
                - headers: true
                  visible: visible
                  defaultValue: defaultValue
                  validators:
                  - validators
                  - validators
                  validator: validator
                  dynamicOptions:
                    filter: filter
                    type: type
                  label: label
                  type: type
                  rows: 5
                  maxListRows: 1
                  required: true
                  instruction: instruction
                  options:
                  - id: id
                    label: label
                  - id: id
                    label: label
                  migration:
                    format: format
                    source: source
                  disabled: true
                  id: id
                  placeholder: placeholder
                  minListRows: 6
                  maxLength: 0
              additionalFilesInputHandlingSupported: true
            group: group
            uiComponent: uiComponent
        details: details
        message: message
        status: success|failure
      properties:
        status:
          description: General response state
          example: success|failure
          type: string
        message:
          description: Status code as a string representation (optional)
          type: string
        details:
          description: Detailed message (optional)
          type: string
        data:
          additionalProperties:
            $ref: '#/components/schemas/Plugin'
          type: object
      type: object
    OptionValue:
      example:
        id: id
        label: label
      properties:
        id:
          type: string
        label:
          type: string
      required:
      - id
      - label
      type: object
    Plugin:
      example:
        iconType: iconType
        custom: true
        icon: icon
        description: description
        id: id
        label: label
        locale: locale
        version: version
        config:
          secureChannelHostVerificationRequired:
          - secureChannelHostVerificationRequired
          - secureChannelHostVerificationRequired
          authenticationProvided: true
          analyticsSupported: true
          outcomeMappingSupported: true
          additionalFilesInputHandlingOnly: true
          validators: "{}"
          restrictedUseDefault: true
          outcomeMappingRequired: true
          assuredDeliverySupported: true
          jobExpirationSupported: true
          steps:
          - visible: visible
            id: id
            title: title
            properties:
            - headers: true
              visible: visible
              defaultValue: defaultValue
              validators:
              - validators
              - validators
              validator: validator
              dynamicOptions:
                filter: filter
                type: type
              label: label
              type: type
              rows: 5
              maxListRows: 1
              required: true
              instruction: instruction
              options:
              - id: id
                label: label
              - id: id
                label: label
              migration:
                format: format
                source: source
              disabled: true
              id: id
              placeholder: placeholder
              minListRows: 6
              maxLength: 0
            - headers: true
              visible: visible
              defaultValue: defaultValue
              validators:
              - validators
              - validators
              validator: validator
              dynamicOptions:
                filter: filter
                type: type
              label: label
              type: type
              rows: 5
              maxListRows: 1
              required: true
              instruction: instruction
              options:
              - id: id
                label: label
              - id: id
                label: label
              migration:
                format: format
                source: source
              disabled: true
              id: id
              placeholder: placeholder
              minListRows: 6
              maxLength: 0
          - visible: visible
            id: id
            title: title
            properties:
            - headers: true
              visible: visible
              defaultValue: defaultValue
              validators:
              - validators
              - validators
              validator: validator
              dynamicOptions:
                filter: filter
                type: type
              label: label
              type: type
              rows: 5
              maxListRows: 1
              required: true
              instruction: instruction
              options:
              - id: id
                label: label
              - id: id
                label: label
              migration:
                format: format
                source: source
              disabled: true
              id: id
              placeholder: placeholder
              minListRows: 6
              maxLength: 0
            - headers: true
              visible: visible
              defaultValue: defaultValue
              validators:
              - validators
              - validators
              validator: validator
              dynamicOptions:
                filter: filter
                type: type
              label: label
              type: type
              rows: 5
              maxListRows: 1
              required: true
              instruction: instruction
              options:
              - id: id
                label: label
              - id: id
                label: label
              migration:
                format: format
                source: source
              disabled: true
              id: id
              placeholder: placeholder
              minListRows: 6
              maxLength: 0
          additionalFilesInputHandlingSupported: true
        group: group
        uiComponent: uiComponent
      properties:
        id:
          type: string
        description:
          type: string
        group:
          type: string
        icon:
          type: string
        iconType:
          type: string
        label:
          type: string
        version:
          type: string
        locale:
          type: string
        config:
          $ref: '#/components/schemas/PluginWizardConfig'
        uiComponent:
          type: string
        custom:
          type: boolean
      required:
      - id
      type: object
    PluginDynamicOptions:
      example:
        filter: filter
        type: type
      properties:
        type:
          type: string
        filter:
          type: string
      type: object
    PluginMigrationConfig:
      example:
        format: format
        source: source
      properties:
        source:
          type: string
        format:
          type: string
      type: object
    PluginProperty:
      example:
        headers: true
        visible: visible
        defaultValue: defaultValue
        validators:
        - validators
        - validators
        validator: validator
        dynamicOptions:
          filter: filter
          type: type
        label: label
        type: type
        rows: 5
        maxListRows: 1
        required: true
        instruction: instruction
        options:
        - id: id
          label: label
        - id: id
          label: label
        migration:
          format: format
          source: source
        disabled: true
        id: id
        placeholder: placeholder
        minListRows: 6
        maxLength: 0
      properties:
        id:
          type: string
        label:
          type: string
        defaultValue:
          type: string
        type:
          type: string
        required:
          type: boolean
        disabled:
          type: boolean
        placeholder:
          type: string
        maxLength:
          format: int32
          type: integer
        validator:
          deprecated: true
          type: string
        validators:
          items:
            type: string
          type: array
        visible:
          type: string
        options:
          items:
            $ref: '#/components/schemas/OptionValue'
          type: array
        minListRows:
          format: int32
          type: integer
        maxListRows:
          format: int32
          type: integer
        instruction:
          type: string
        rows:
          format: int32
          type: integer
        migration:
          $ref: '#/components/schemas/PluginMigrationConfig'
        headers:
          type: boolean
        dynamicOptions:
          $ref: '#/components/schemas/PluginDynamicOptions'
      required:
      - id
      type: object
    PluginValidators:
      type: object
    PluginWizardConfig:
      example:
        secureChannelHostVerificationRequired:
        - secureChannelHostVerificationRequired
        - secureChannelHostVerificationRequired
        authenticationProvided: true
        analyticsSupported: true
        outcomeMappingSupported: true
        additionalFilesInputHandlingOnly: true
        validators: "{}"
        restrictedUseDefault: true
        outcomeMappingRequired: true
        assuredDeliverySupported: true
        jobExpirationSupported: true
        steps:
        - visible: visible
          id: id
          title: title
          properties:
          - headers: true
            visible: visible
            defaultValue: defaultValue
            validators:
            - validators
            - validators
            validator: validator
            dynamicOptions:
              filter: filter
              type: type
            label: label
            type: type
            rows: 5
            maxListRows: 1
            required: true
            instruction: instruction
            options:
            - id: id
              label: label
            - id: id
              label: label
            migration:
              format: format
              source: source
            disabled: true
            id: id
            placeholder: placeholder
            minListRows: 6
            maxLength: 0
          - headers: true
            visible: visible
            defaultValue: defaultValue
            validators:
            - validators
            - validators
            validator: validator
            dynamicOptions:
              filter: filter
              type: type
            label: label
            type: type
            rows: 5
            maxListRows: 1
            required: true
            instruction: instruction
            options:
            - id: id
              label: label
            - id: id
              label: label
            migration:
              format: format
              source: source
            disabled: true
            id: id
            placeholder: placeholder
            minListRows: 6
            maxLength: 0
        - visible: visible
          id: id
          title: title
          properties:
          - headers: true
            visible: visible
            defaultValue: defaultValue
            validators:
            - validators
            - validators
            validator: validator
            dynamicOptions:
              filter: filter
              type: type
            label: label
            type: type
            rows: 5
            maxListRows: 1
            required: true
            instruction: instruction
            options:
            - id: id
              label: label
            - id: id
              label: label
            migration:
              format: format
              source: source
            disabled: true
            id: id
            placeholder: placeholder
            minListRows: 6
            maxLength: 0
          - headers: true
            visible: visible
            defaultValue: defaultValue
            validators:
            - validators
            - validators
            validator: validator
            dynamicOptions:
              filter: filter
              type: type
            label: label
            type: type
            rows: 5
            maxListRows: 1
            required: true
            instruction: instruction
            options:
            - id: id
              label: label
            - id: id
              label: label
            migration:
              format: format
              source: source
            disabled: true
            id: id
            placeholder: placeholder
            minListRows: 6
            maxLength: 0
        additionalFilesInputHandlingSupported: true
      properties:
        outcomeMappingSupported:
          type: boolean
        assuredDeliverySupported:
          type: boolean
        outcomeMappingRequired:
          type: boolean
        analyticsSupported:
          type: boolean
        additionalFilesInputHandlingSupported:
          type: boolean
        additionalFilesInputHandlingOnly:
          type: boolean
        restrictedUseDefault:
          type: boolean
        validators:
          type: object
        secureChannelHostVerificationRequired:
          items:
            type: string
          type: array
        authenticationProvided:
          type: boolean
        jobExpirationSupported:
          type: boolean
        steps:
          items:
            $ref: '#/components/schemas/PluginWizardStep'
          type: array
      type: object
    PluginWizardStep:
      example:
        visible: visible
        id: id
        title: title
        properties:
        - headers: true
          visible: visible
          defaultValue: defaultValue
          validators:
          - validators
          - validators
          validator: validator
          dynamicOptions:
            filter: filter
            type: type
          label: label
          type: type
          rows: 5
          maxListRows: 1
          required: true
          instruction: instruction
          options:
          - id: id
            label: label
          - id: id
            label: label
          migration:
            format: format
            source: source
          disabled: true
          id: id
          placeholder: placeholder
          minListRows: 6
          maxLength: 0
        - headers: true
          visible: visible
          defaultValue: defaultValue
          validators:
          - validators
          - validators
          validator: validator
          dynamicOptions:
            filter: filter
            type: type
          label: label
          type: type
          rows: 5
          maxListRows: 1
          required: true
          instruction: instruction
          options:
          - id: id
            label: label
          - id: id
            label: label
          migration:
            format: format
            source: source
          disabled: true
          id: id
          placeholder: placeholder
          minListRows: 6
          maxLength: 0
      properties:
        id:
          type: string
        title:
          type: string
        visible:
          type: string
        properties:
          items:
            $ref: '#/components/schemas/PluginProperty'
          type: array
      required:
      - id
      type: object
    DataResponseDeletableResource:
      example:
        data:
          deletable: true
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/DeletableResource'
      type: object
    DeletableResource:
      example:
        deletable: true
      properties:
        deletable:
          type: boolean
      type: object
    ListResponseTenantFlowmodel:
      example:
        data:
        - sdpermissions:
          - sdpermissions
          - sdpermissions
          nodes:
          - internal: true
            metadata:
            - name: name
              text: text
              type: type
            - name: name
              text: text
              type: type
            instanceId: instanceId
            subtype: directory_channel
            displayName: displayName
            x: 1
            "y": 5
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            id: id
            type: input
            connections:
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
          - internal: true
            metadata:
            - name: name
              text: text
              type: type
            - name: name
              text: text
              type: type
            instanceId: instanceId
            subtype: directory_channel
            displayName: displayName
            x: 1
            "y": 5
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            id: id
            type: input
            connections:
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
          lockedBy: lockedBy
          latestVersion: true
          stateComment: stateComment
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: DRAFT
          type: COMMUNICATION
          version: 6
          revision: 0
        - sdpermissions:
          - sdpermissions
          - sdpermissions
          nodes:
          - internal: true
            metadata:
            - name: name
              text: text
              type: type
            - name: name
              text: text
              type: type
            instanceId: instanceId
            subtype: directory_channel
            displayName: displayName
            x: 1
            "y": 5
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            id: id
            type: input
            connections:
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
          - internal: true
            metadata:
            - name: name
              text: text
              type: type
            - name: name
              text: text
              type: type
            instanceId: instanceId
            subtype: directory_channel
            displayName: displayName
            x: 1
            "y": 5
            attributes:
            - name: name
              value: value
            - name: name
              value: value
            id: id
            type: input
            connections:
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
            - condition:
                datatype: string
                values:
                - values
                - values
                name: name
                type: outcome
                value: value
                operator: EQ
              sourceAnchor: sourceAnchor
              targetAnchor: targetAnchor
              displayName: displayName
              defaultConnection: true
              targetNodeId: targetNodeId
              targetNode: targetNode
          lockedBy: lockedBy
          latestVersion: true
          stateComment: stateComment
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          state: DRAFT
          type: COMMUNICATION
          version: 6
          revision: 0
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/TenantFlowmodel'
          type: array
      type: object
    FlowModelContextFilter:
      properties:
        snapshotIds:
          items:
            format: uuid
            type: string
          type: array
        dasIds:
          items:
            format: uuid
            type: string
          type: array
        dasVersions:
          items:
            format: int32
            type: integer
          type: array
        domain:
          type: string
        searchString:
          maxLength: 255
          minLength: 0
          type: string
        caseSensitive:
          type: boolean
        wholeWord:
          type: boolean
      type: object
    FlowModelContextFilterRequest:
      properties:
        offset:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        sort:
          type: object
        filter:
          $ref: '#/components/schemas/FlowModelContextFilter'
      type: object
    PageResponseFlowModelContextSnapshot:
      example:
        data:
        - snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          xmlContent: xmlContent
          version: 0
          domainId: domainId
          content: content
        - snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          xmlContent: xmlContent
          version: 0
          domainId: domainId
          content: content
        page:
          pageOffset: 6
          totalPages: 5
          currentPageNumber: 5
          pageSize: 0
          totalElements: 1
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/FlowModelContextSnapshot'
          type: array
        page:
          $ref: '#/components/schemas/SimplePage'
      type: object
    ListResponseFlowModelContextSnapshot:
      example:
        data:
        - snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          xmlContent: xmlContent
          version: 0
          domainId: domainId
          content: content
        - snapshotId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          xmlContent: xmlContent
          version: 0
          domainId: domainId
          content: content
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/FlowModelContextSnapshot'
          type: array
      type: object
    ListResponseCronJob:
      example:
        data:
        - dryRun: true
          jobAvailable: true
          endDateStart: endDateStart
          startDateEnd: startDateEnd
          enabled: true
          mode: BATCH
          cronType: markDeleted
          sortingAssetStatuses:
          - processed
          - processed
          flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          appConsolidation: true
          headers:
            key: headers
          endDateEnd: endDateEnd
          serviceName: serviceName
          domainId: domainId
          communicationIdList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cronExpression: cronExpression
          startDateStart: startDateStart
          jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cacheTimeout: 0.8008282
          inputPath: inputPath
          preSortQueueName: preSortQueueName
          name: name
          statuses:
          - canceled
          - canceled
          channelName: channelName
          postSortQueueName: postSortQueueName
        - dryRun: true
          jobAvailable: true
          endDateStart: endDateStart
          startDateEnd: startDateEnd
          enabled: true
          mode: BATCH
          cronType: markDeleted
          sortingAssetStatuses:
          - processed
          - processed
          flowModelId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          appConsolidation: true
          headers:
            key: headers
          endDateEnd: endDateEnd
          serviceName: serviceName
          domainId: domainId
          communicationIdList:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cronExpression: cronExpression
          startDateStart: startDateStart
          jobId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cacheTimeout: 0.8008282
          inputPath: inputPath
          preSortQueueName: preSortQueueName
          name: name
          statuses:
          - canceled
          - canceled
          channelName: channelName
          postSortQueueName: postSortQueueName
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/CronJob'
          type: array
      type: object
    ConfigurationFilter:
      properties:
        domainId:
          type: string
        configType:
          type: string
        configName:
          type: string
      type: object
    ConfigurationFilterRequest:
      properties:
        offset:
          format: int32
          type: integer
        count:
          format: int32
          type: integer
        sort:
          type: object
        filter:
          $ref: '#/components/schemas/ConfigurationFilter'
      type: object
    PageResponseConfiguration:
      example:
        data:
        - configName: configName
          configDetails:
            key:
              values:
              - key: null
              - key: null
              secretId: secretId
              value: value
          active: true
          configType: configType
          domainId: domainId
        - configName: configName
          configDetails:
            key:
              values:
              - key: null
              - key: null
              secretId: secretId
              value: value
          active: true
          configType: configType
          domainId: domainId
        page:
          pageOffset: 6
          totalPages: 5
          currentPageNumber: 5
          pageSize: 0
          totalElements: 1
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
        page:
          $ref: '#/components/schemas/SimplePage'
      type: object
    PublicOrcConfiguration:
      example:
        baseSubscription: true
        subscriptionEnabled: true
        assuredDeliveryEnabled: true
        flowScriptDebuggingEnabled: true
      properties:
        assuredDeliveryEnabled:
          type: boolean
        flowScriptDebuggingEnabled:
          type: boolean
        baseSubscription:
          type: boolean
        subscriptionEnabled:
          type: boolean
      type: object
    DataResponseJobDeleteStatus:
      example:
        data:
          failedDeleteJobs:
            key: failedDeleteJobs
          successDeleteJobs: 0
        status: status
      properties:
        status:
          type: string
        data:
          $ref: '#/components/schemas/JobDeleteStatus'
      type: object
    JobDeleteStatus:
      example:
        failedDeleteJobs:
          key: failedDeleteJobs
        successDeleteJobs: 0
      properties:
        failedDeleteJobs:
          additionalProperties:
            type: string
          type: object
        successDeleteJobs:
          format: int64
          type: integer
      type: object
    updateState_request:
      properties:
        body:
          $ref: '#/components/schemas/RequestBodyPut'
        state:
          description: State
          enum:
          - processed
          - waiting
          - expired
          - canceled
          - all
          type: string
        filterRequest:
          $ref: '#/components/schemas/SortingDataFilterRequest'
      type: object
    updateState_1_request:
      properties:
        body:
          $ref: '#/components/schemas/RequestBodyPut'
        state:
          description: State
          enum:
          - processed
          - waiting
          - expired
          - canceled
          - all
          type: string
      type: object
