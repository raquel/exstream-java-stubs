{"openapi":"3.0.1","info":{"title":"Exstream Orchestration","version":"v1"},"servers":[{"url":"https://vm-exstreamna1.eimdemo.com/orchestration","description":"service frontend url"}],"paths":{"/api/v1/tenants/{tenantId}/schema":{"put":{"tags":["tenant-admin-controller"],"operationId":"updateTenantSchema","parameters":[{"name":"tenantId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataResponseTenant"}}}}}}},"/api/v1/tenants/updateTenant":{"put":{"tags":["tenant-admin-controller"],"operationId":"updateTenant","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTenantBody"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataResponseTenant"}}}}}}},"/api/v1/tenants/all/schema":{"put":{"tags":["tenant-admin-controller"],"operationId":"updateTenantSchemas","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListResponseTenant"}}}}}}},"/api/v1/sortdata/{domain}":{"get":{"tags":["sort-data-controller"],"summary":"List sorting assets. Possible parameters are domain (in the URL) and the optional parameters filter,count,offset and sort","description":"Sorting assets using synchronous mode is not included.\n\nThe filter value is a semicolon delimited list of key value pairs.\n\nList values separate possible values with commas. These are the only keys possible, please ignore the parameters below this list:\n| Filter name                    | Filter value description                                                         |\n|--------------------------------|----------------------------------------------------------------------------------|\n| flowModelIds                   | Match sorting assets with these flow model ids.                                  |\n| communicationIds               | Match sorting assets with these communication ids.                               |\n| queueNames                     | Match sorting assets with these queue names.                                     |\n| externalIds                    | Match sorting assets with these external ids.                                    |\n| flowStepIds                    | Match sorting assets with these flow step ids.                                   |\n| ids                            | Match sorting assets with these sorting asset ids.                               |\n| jobIds                         | Match sorting assets with these job ids.                                         |\n| referenceIds                   | Match sorting assets with these reference ids.                                   |\n| sortSubflows                   | Match sorting assets with these sort sub flows.                                  |\n| metadata                       | Match sorting assets with these metadata values.                                 |\n| states                         | Match sorting assets with any of these states. Possible values: processed,waiting,expired,canceled,all|\n| customersCountFrom             | Match sorting assets having customer count from this number.                     |\n| customersCountTo               | Match sorting assets having customer count to this number.                       |\n| creationDateStart              | Match sorting assets created after this date. (yyyy-MM-dd format)                |\n| creationDateEnd                | Match sorting assets created before this date. (yyyy-MM-dd format)               |\n| lastModificationDateStart      | Match sorting assets modified after this date. (yyyy-MM-dd format)               |\n| lastModificationDateEnd        | Match sorting assets modified before this date. (yyyy-MM-dd format)              |\nNote: For following special characters in strings (applicable for queueNames, externalIds, sortSubflows, metadata) use:\n\n: &rarr; /colon/\n\n; &rarr; /semi/\n\n\\ &rarr; /bsol/\n\nExample - filter=queueNames:SortPrep&count=10&offset=0","operationId":"listSortingAssets","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"filterRequest","in":"query","description":"Use the optional filter parameter to decide which sorting assets should be listed (ALL of them if no filter specified)","required":true,"schema":{"$ref":"#/components/schemas/SortingDataFilterRequest"}}],"responses":{"200":{"description":"Success","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}},"put":{"tags":["sort-data-controller"],"summary":"Update state for all sort assets matching filter criteria. Possible parameters are domain (in the URL), state and the mandatory filter","description":"Sorting assets using synchronous mode is not included.\n\nThe filter value is a semicolon delimited list of key value pairs.\n\nList values separate possible values with commas. These are the only keys possible, please ignore the parameters below this list:\n| Filter name                    | Filter value description                                                         |\n|--------------------------------|----------------------------------------------------------------------------------|\n| flowModelIds                   | Match sorting assets with these flow model ids.                                  |\n| communicationIds               | Match sorting assets with these communication ids.                               |\n| queueNames                     | Match sorting assets with these queue names.                                     |\n| externalIds                    | Match sorting assets with these external ids.                                    |\n| flowStepIds                    | Match sorting assets with these flow step ids.                                   |\n| ids                            | Match sorting assets with these sorting asset ids.                               |\n| jobIds                         | Match sorting assets with these job ids.                                         |\n| referenceIds                   | Match sorting assets with these reference ids.                                   |\n| sortSubflows                   | Match sorting assets with these sort sub flows.                                  |\n| metadata                       | Match sorting assets with these metadata values.                                 |\n| states                         | Match sorting assets with any of these states. Possible values: processed,waiting,expired,canceled,all|\n| customersCountFrom             | Match sorting assets having customer count from this number.                     |\n| customersCountTo               | Match sorting assets having customer count to this number.                       |\n| creationDateStart              | Match sorting assets created after this date. (yyyy-MM-dd format)                |\n| creationDateEnd                | Match sorting assets created before this date. (yyyy-MM-dd format)               |\n| lastModificationDateStart      | Match sorting assets modified after this date. (yyyy-MM-dd format)               |\n| lastModificationDateEnd        | Match sorting assets modified before this date. (yyyy-MM-dd format)              |\nNote: For following special characters in strings (applicable for queueNames, externalIds, sortSubflows, metadata) use:\n\n: &rarr; /colon/\n\n; &rarr; /semi/\n\n\\ &rarr; /bsol/\n\nExample - state=waiting&filter=externalIds:Ext001;states:processed","operationId":"updateState","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"body":{"$ref":"#/components/schemas/RequestBodyPut"},"state":{"type":"string","description":"State","enum":["processed","waiting","expired","canceled","all"]},"filterRequest":{"$ref":"#/components/schemas/SortingDataFilterRequest"}}}}}},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}},"delete":{"tags":["sort-data-controller"],"summary":"Delete sorting assets and set the jobs, instances and queued flow steps using those assets to error. The only possible parameters are domain (in the URL) and the mandatory filter","description":"Sorting assets using synchronous mode is not included.\n\nThe filter value is a semicolon delimited list of key value pairs.\n\nList values separate possible values with commas. These are the only keys possible, please ignore the parameters below this list:\n| Filter name                    | Filter value description                                                         |\n|--------------------------------|----------------------------------------------------------------------------------|\n| flowModelIds                   | Match sorting assets with these flow model ids.                                  |\n| communicationIds               | Match sorting assets with these communication ids.                               |\n| queueNames                     | Match sorting assets with these queue names.                                     |\n| externalIds                    | Match sorting assets with these external ids.                                    |\n| flowStepIds                    | Match sorting assets with these flow step ids.                                   |\n| ids                            | Match sorting assets with these sorting asset ids.                               |\n| jobIds                         | Match sorting assets with these job ids.                                         |\n| referenceIds                   | Match sorting assets with these reference ids.                                   |\n| sortSubflows                   | Match sorting assets with these sort sub flows.                                  |\n| metadata                       | Match sorting assets with these metadata values.                                 |\n| states                         | Match sorting assets with any of these states. Possible values: processed,waiting,expired,canceled,all|\n| customersCountFrom             | Match sorting assets having customer count from this number.                     |\n| customersCountTo               | Match sorting assets having customer count to this number.                       |\n| creationDateStart              | Match sorting assets created after this date. (yyyy-MM-dd format)                |\n| creationDateEnd                | Match sorting assets created before this date. (yyyy-MM-dd format)               |\n| lastModificationDateStart      | Match sorting assets modified after this date. (yyyy-MM-dd format)               |\n| lastModificationDateEnd        | Match sorting assets modified before this date. (yyyy-MM-dd format)              |\nNote: For following special characters in strings (applicable for queueNames, externalIds, sortSubflows, metadata) use:\n\n: &rarr; /colon/\n\n; &rarr; /semi/\n\n\\ &rarr; /bsol/\n\nExample - filter=states:expired;queueNames:SortPrep","operationId":"deleteSortData","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SortingDataFilterRequest"}}}},"responses":{"200":{"description":"Success","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/sortdata/{domain}/{id}":{"get":{"tags":["sort-data-controller"],"summary":"Get sorting asset. The only possible parameters are domain (in the URL) and the id (in the URL)","description":"Sorting assets using synchronous mode is not included.","operationId":"getSortingAsset","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseSortingAsset"}}}}}},"put":{"tags":["sort-data-controller"],"summary":"Update state for all sort assets referenced by given id. Possible parameters are domain (in the URL), id (in the URL) and state.","description":"Sorting assets using synchronous mode is not included.\n\nExample - state=expired","operationId":"updateState_1","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Id","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"body":{"$ref":"#/components/schemas/RequestBodyPut"},"state":{"type":"string","description":"State","enum":["processed","waiting","expired","canceled","all"]}}}}}},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseSortingAsset"}}}}}},"delete":{"tags":["sort-data-controller"],"summary":"Delete sorting asset and set the jobs, instances and queued flow steps using those assets to error. The only possible parameters are domain (in the URL) and the sorting asset id (in the URL)","description":"Sorting assets using synchronous mode is not included.","operationId":"deleteSortData_1","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Success","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/secrets/{domain}/{secretId}":{"put":{"tags":["secret-controller"],"operationId":"setSecret","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"secretId","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SecretInfo"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/api/v1/cron-jobs/{domain}/{cronJobId}":{"get":{"tags":["cron-jobs-controller"],"summary":"Gets a cron job","operationId":"readSchedule","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"cronJobId","in":"path","description":"CronJobId","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"default":{"description":"default response","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseCronJob"}}}}}},"put":{"tags":["cron-jobs-controller"],"summary":"Updates a cron job","operationId":"updateSchedule","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"cronJobId","in":"path","description":"CronJobId","required":true,"schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Cron job. It can apply to jobs or sort assets.<br/>name: Name of the cron job<br/>cronExpression: Cron expression in UNIX format that reflects when the cron job should be executed (the main cron orchestration cleanup job is executed hourly by default)<br/>cronType: Cron job type. Available values: markDeleted,wipe,startJob,updateExpirationTime,wipeSortingAssets,expireSortingAssets,sortingAndBundling. When wipe is selected the filter parameters are not used.<br/>startDateStart: Filter jobs matching started date after this date or sort assets created after this date. Date is a (yyyy-MM-dd format) String. It's also possible to use a negative number, representing the number of days before today.<br/>startDateEnd: Filter jobs matching started date before this date or sort assets created before this date. Date is a (yyyy-MM-dd format) String. It's also possible to use a negative number, representing the number of days before today.<br/>endDateStart: Filter jobs matching ended date after this date or sort assets modified after this date. Date is a (yyyy-MM-dd format) String. It's also possible to use a negative number, representing the number of days before today<br/>endDateEnd: Filter jobs matching ended date before this date or sort assets modified before this date. Date is a (yyyy-MM-dd format) String. It's also possible to use a negative number, representing the number of days before today<br/>statuses: Match jobs with any of these statuses. Possible values for jobs: complete,error,canceled,deleted<br/>sortingAssetStatuses: Match sorting assets with any of these statuses, possible values for sort assets: processed,waiting,expired,canceled<br/>serviceName: service to trigger for job<br/>channelName: input channel for pulling data<br/>inputPath: path parameter for the input channel<br/>headers: map of headers for starting job<br/>cacheTimeout: optional duration of file cache<br/>mode: Filter jobs matching this mode (ONDEMAND|BATCH)<br/>flowModelId: Filter sorting assets matching flow model id<br/>communicationIdList: Filter sorting assets matching the communication id (only one) or when running sorting&bundling with appConsolidation equal to true, use the specified communications,<br/>when appConsolidation is false, only one communication id should be present<br/>preSortQueueName: Filter sorting assets matching pre sort queue name<br/>jobId: Filter sorting assets matching jobId<br/>postSortQueueName: queue name used in the post sort queue name<br/>appConsolidation: says whether multiple communications should be consolidated when running sorting&bundling<br/>enabled: Determines whether the cron job should be triggered or not. Default value: true","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CronJob"}}},"required":true},"responses":{"default":{"description":"default response","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseCronJob"}}}}}},"delete":{"tags":["cron-jobs-controller"],"summary":"Deletes a cron job","operationId":"deleteSchedule","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"cronJobId","in":"path","description":"CronJobId","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"default":{"description":"default response","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/configuration/{domainId}":{"get":{"tags":["configuration-controller"],"summary":"Get all matching configurations","description":"Get all configurations (no filter) or all the configurations matching the filter. <br/>Filter example: filter=configType:myConfigType (domain is taken from the URL)","operationId":"getConfigurations","parameters":[{"name":"filterRequest","in":"query","description":"The filter value is a semicolon delimited list of key value pairs.\nList values separate possible values with commas. Keys include:\n| filter name          | Filter value description                                                                                       |\n|----------------------|----------------------------------------------------------------------------------------------------------------|\n| configType           | Match configurations with this configType.                                                                     |\n| configName           | Match configurations with this configName.                                                                     |","required":true,"schema":{"$ref":"#/components/schemas/ConfigurationFilterRequest"}},{"name":"domainId","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageResponseConfiguration"}}}}}},"put":{"tags":["configuration-controller"],"operationId":"updateConfiguration","parameters":[{"name":"domainId","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Configuration"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseConfiguration"}}}}}},"post":{"tags":["configuration-controller"],"operationId":"addConfiguration","parameters":[{"name":"domainId","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Configuration"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseConfiguration"}}}}}}},"/api/v1/tenants/{tenantId}":{"get":{"tags":["tenant-admin-controller"],"operationId":"getTenant","parameters":[{"name":"tenantId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataResponseTenant"}}}}}},"post":{"tags":["tenant-admin-controller"],"operationId":"createTenantSchema","parameters":[{"name":"tenantId","in":"path","required":true,"schema":{"maxLength":40,"minLength":1,"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataResponseTenant"}}}}}}},"/api/v1/tenants/addTenant":{"post":{"tags":["tenant-admin-controller"],"operationId":"createTenantWithExistingSchema","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTenantBody"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataResponseTenant"}}}}}}},"/api/v1/ssh/known-hosts/hostkey":{"get":{"tags":["ssh-connection-controller"],"summary":"Get key for host","description":"Requests a fresh key for specified host.","operationId":"getKeyForHost","parameters":[{"name":"host","in":"query","description":"Specifies host name","required":true,"schema":{"type":"string"}},{"name":"port","in":"query","description":"Specifies port","required":false,"schema":{"type":"integer","format":"int32","default":22}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}},"post":{"tags":["ssh-connection-controller"],"summary":"Add key for host","description":"Add key of provided host to known hosts.","operationId":"addKeyForHost","requestBody":{"description":"hostkey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HostKey"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/secrets/{domain}/rollover":{"post":{"tags":["secret-controller"],"operationId":"rolloverKeys","parameters":[{"name":"oldKeyId","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"integer","format":"int32"}}}}}}},"/api/v1/secrets/{domain}/migrateVault":{"post":{"tags":["secret-controller"],"summary":"Migrate secrets to vault.","operationId":"migrateVault","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"boolean"}}}}}}},"/api/v1/runtime/{domain}/jobs/{id}/stop":{"post":{"tags":["runtime-controller"],"summary":"Cancel job","description":"Stop a running job entry (including all flow instances) in runtime database.","operationId":"stopJob","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Job id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/api/v1/runtime/{domain}/jobs/{id}/reprocessing":{"post":{"tags":["runtime-controller"],"summary":"Reprocess job","description":"Reprocess the job with the specified id, optionally using the current flow model and/or the current flow context","operationId":"reprocessJob","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Job id","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"useCurrentFlowModel","in":"query","description":"Use current flow model (instead of the one stored in the job)","required":false,"schema":{"type":"boolean","default":false}},{"name":"useCurrentFlowContext","in":"query","description":"Use current flow context (instead of the one stored in the job","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/api/v1/runtime/{domain}/jobs/post-sort":{"post":{"tags":["runtime-controller"],"summary":"Trigger post-sort run","description":"Trigger a post-sort related job","operationId":"startPostSortJob","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"description":"\n\n\n| Run setting            | description                                                                                           |\n|------------------------|-------------------------------------------------------------------------------------------------------|\n| flowModelId            | Select sorting assets matching flow model id.                                                         |\n| appConsolidation       | Consolidate multiple communications.                                                                  |\n| dryRun                 | Dry run                                                                                               |\n| externalId             | Set externalID on the job for this post-sort run.                                                     |\n| customerList           | Select individual list of customer numbers or ranges of numbers to be processed in post-sort run.     |\n| postSortQueueName      | Set post-sort queue to use in this post-sort run. If not specified, all post-sort queues will be included in the run.|\n\n\n| Sort asset filter name |Filter value description                                                                               |\n|------------------------|-------------------------------------------------------------------------------------------------------|\n| ids                    | Filter sorting assets matching sorting index ids.                                                     |\n| jobIds                 | Filter sorting assets matching job ids.                                                               |\n| flowStepIds            | Filter sorting assets matching flow step ids.                                                         |\n| communicationIds       | Filter sorting assets matching communication ids.                                                     |\n| queueNames             | Filter sorting assets matching pre-sort queue name                                                     (Note: Only first entry of list is currently supported for post-sort run).       |\n| externalIds            | Filter sorting assets matching external ids.                                                          |\n| creationDateStart      | Filter sorting assets created after this date (yyyy-MM-dd format or elapsed period in negative days). |\n| creationDateEnd        | Filter sorting assets created before this date (yyyy-MM-dd format or elapsed period in negative days).|","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostSortRunOption"}}},"required":true},"responses":{"201":{"description":"Post sort run(s) triggered.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"400":{"description":"Bad request. Validation failure.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"404":{"description":"Domain not found or flow model not found in domain.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/stop":{"post":{"tags":["runtime-controller"],"summary":"Cancel flow step","description":"Stop a running flow step in runtime database.","operationId":"stopFlowStep","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Flow step id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/release":{"post":{"tags":["runtime-controller"],"summary":"Continue a held flow step","description":"Release a flow step in holding state.","operationId":"releaseHoldingFlowStep","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Flow step id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/api/v1/runtime/{domain}/flow-instances/{id}/stop":{"post":{"tags":["runtime-controller"],"summary":"Cancel flow instance","description":"Stop a running flow instance entry (including all flow steps) in runtime database.","operationId":"stopFlowInstance","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Flow instance id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/api/v1/runtime/{domain}/flow-instances/{id}/release":{"post":{"tags":["runtime-controller"],"summary":"Continue a held flow instance","description":"Release a flow instance in holding state.","operationId":"releaseHoldingFlowInstances","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Flow instance id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/api/v1/runtime/{domain}/flow-instances/counts":{"post":{"tags":["runtime-controller"],"summary":"Get flow instances counts","description":"Get counts of flow instances grouped by start date and status. The counts will be automatically grouped by DAY/MONTH/YEAR based on available data.","operationId":"getFlowInstancesCounts","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"description":"The filter value is a semicolon delimited list of key value pairs.\nList values separate possible values with commas. Keys include:\n| Filter name          | Filter value description                                                                                             |\n|----------------------|----------------------------------------------------------------------------------------------------------------------|\n| flowModelIds         | Match flow instances spawned from these flow model ids.                                                              |\n| startDateStart       | Match flow instances started after this date. (yyyy-MM-ddThh:mm:ss.SSSZ format)                                      |\n| startDateEnd         | Match flow instances started before this date. (yyyy-MM-ddThh:mm:ss.SSSZ format)                                     |\n| fillMissingData      | Populate any missing data between grouped data ranges. If data is not found, counts would be returned as 0           |","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FlowInstanceCountsFilterRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseMapObjectObject"}}}}}}},"/api/v1/runtime/{domain}/flow-instances/associated-jobs":{"post":{"tags":["runtime-controller"],"operationId":"getFlowInstancesAndAssociatedJobs","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"description":"The filter value is a semicolon delimited list of key value pairs.\nList values separate possible values with commas. Keys include:\n| filter name            | Filter value description                                                                               |\n|------------------------|--------------------------------------------------------------------------------------------------------|\n| ids                    | Match flow instances with ids in this comma-separated list.                                            |\n| flowModelId            | Match flow instances spawned from this flow model id (deprecated).                                     |\n| flowModelIds           | Match flow instances spawned from these flow model ids.(Note: When used along with flowModelId filter, ids from both filters are applied.)|\n| flowModelSnapshotIds   | Match flow instances spawned from any of these flow model snapshot ids.                                |\n| jobId                  | Match flow instances that ran as part of this job.                                                     |\n| externalId             | Match flow instances associated to this external id.                                                   |\n| statuses               | Match flow instances with any of these statuses. Possible values: canceled,started,complete,error,waiting,holding|\n| expiringDateStart      | Match flow instances expiring after this date. (yyyy-MM-dd format)                                     |\n| expiringDateEnd        | Match flow instances expiring before this date. (yyyy-MM-dd format)                                    |\n| flowModelTypes         | Match flow instances with any of these flow model types. Possible values: COMMUNICATION,ALERT,NOTIFICATION|\n| startDateStart         | Match flow instances started after this date. (yyyy-MM-dd format)                                      |\n| startDateEnd           | Match flow instances started before this date. (yyyy-MM-dd format)                                     |\n| endDateStart           | Match flow instances ended after this date. (yyyy-MM-dd format)                                        |\n| endDateEnd             | Match flow instances ended before this date. (yyyy-MM-dd format)                                       |\n| executingLongRunningOp | Match flow instances which are executing a long-running operation                                      |","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FlowInstanceFilterRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseFlowInstancesAndAssociatedJobs"}}}}}}},"/api/v1/runtime/cache/update":{"post":{"tags":["cache-controller"],"summary":"Updates input file cache","description":"Checks if files in the cache should be updated.","operationId":"updateCache","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"string"}}}}}}},"/api/v1/flow-models/{domain}/{flowModelId}/unpublish":{"post":{"tags":["flow-model-controller"],"summary":"Unpublish flow model","description":"Unpublish specified flow model version from orchestration runtime environment. ","operationId":"unpublish","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"flowModelId","in":"path","description":"Flow model id","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"version","in":"query","description":"Specify version (optional). If omitted, latest version will be unpublished.","required":false,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Flow model published successfully","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"400":{"description":"Bad request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"404":{"description":"Flow model not found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/flow-models/{domain}/{flowModelId}/publish":{"post":{"tags":["flow-model-controller"],"summary":"Publish flow model","description":"Publish specified flow model version to orchestration runtime environment. <br /><b>Version 20.4.0:</b> Flow model '<i>version</i>' property changed from datatype string to integer in response body.","operationId":"publish","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"flowModelId","in":"path","description":"Flow model id","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"version","in":"query","description":"Specify version (optional). If omitted, latest version will be published.","required":false,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Flow model published successfully","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseTenantFlowmodel"}}}},"400":{"description":"Bad request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"404":{"description":"Flow model not found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/flow-models/{domain}/unpublish":{"post":{"tags":["flow-model-controller"],"summary":"Unpublish list of flow models","description":"Unpublish specified flow models version from orchestration runtime environment. ","operationId":"unpublish_1","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FlowObjectsRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/flow-model-contexts/{domain}/{flowModelContextId}/unpublish":{"post":{"tags":["flow-model-context-controller"],"summary":"Unpublish flow context","description":"Unpublish specified flow context version from orchestration runtime environment. ","operationId":"unpublish_2","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"flowModelContextId","in":"path","description":"Flow context id","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"version","in":"query","description":"Specify version (optional). If omitted, latest version will be unpublished.","required":false,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Flow model context unpublished successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"404":{"description":"Flow model context not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/flow-model-contexts/{domain}/{flowModelContextId}/publish":{"post":{"tags":["flow-model-context-controller"],"summary":"Publish flow context","description":"Publish specified flow context version to orchestration runtime environment.","operationId":"publish_1","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"flowModelContextId","in":"path","description":"Flow context id","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"version","in":"query","description":"Specify version (optional). If omitted, latest version will be published.","required":false,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Flow model context published successfully.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseFlowModelContextSnapshot"}}}},"400":{"description":"Bad request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"404":{"description":"Flow model context not found.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/flow-model-contexts/{domain}/unpublish":{"post":{"tags":["flow-model-context-controller"],"summary":"Unpublish list of flow contexts","description":"Unpublish specified flow contexts from orchestration runtime environment. ","operationId":"unpublish_3","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FlowObjectsRequest"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/cron-jobs/{domain}":{"get":{"tags":["cron-jobs-controller"],"summary":"List all cron jobs","operationId":"listSchedules","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"responses":{"default":{"description":"default response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListResponseCronJob"}}}}}},"post":{"tags":["cron-jobs-controller"],"summary":"Adds a new cron job","description":"Adds a new Cron job ","operationId":"addSchedule","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"requestBody":{"description":"Cron job. It can apply to jobs or sort assets.<br/>name: Name of the cron job<br/>cronExpression: Cron expression in UNIX format that reflects when the cron job should be executed (the main cron orchestration cleanup job is executed hourly by default)<br/>cronType: Cron job type. Available values: markDeleted,wipe,startJob,updateExpirationTime,wipeSortingAssets,expireSortingAssets,sortingAndBundling. When wipe is selected the filter parameters are not used.<br/>startDateStart: Filter jobs matching started date after this date or sort assets created after this date. Date is a (yyyy-MM-dd format) String. It's also possible to use a negative number, representing the number of days before today.<br/>startDateEnd: Filter jobs matching started date before this date or sort assets created before this date. Date is a (yyyy-MM-dd format) String. It's also possible to use a negative number, representing the number of days before today.<br/>endDateStart: Filter jobs matching ended date after this date or sort assets modified after this date. Date is a (yyyy-MM-dd format) String. It's also possible to use a negative number, representing the number of days before today<br/>endDateEnd: Filter jobs matching ended date before this date or sort assets modified before this date. Date is a (yyyy-MM-dd format) String. It's also possible to use a negative number, representing the number of days before today<br/>statuses: Match jobs with any of these statuses. Possible values for jobs: complete,error,canceled,deleted<br/>sortingAssetStatuses: Match sorting assets with any of these statuses, possible values for sort assets: processed,waiting,expired,canceled<br/>serviceName: service to trigger for job<br/>channelName: input channel for pulling data<br/>inputPath: path parameter for the input channel<br/>headers: map of headers for starting job<br/>cacheTimeout: optional duration of file cache<br/>mode: Filter jobs matching this mode (ONDEMAND|BATCH)<br/>flowModelId: Filter sorting assets matching flow model id<br/>communicationIdList: Filter sorting assets matching the communication id (only one) or when running sorting&bundling with appConsolidation equal to true, use the specified communications,<br/>when appConsolidation is false, only one communication id should be present<br/>preSortQueueName: Filter sorting assets matching pre sort queue name<br/>jobId: Filter sorting assets matching jobId<br/>postSortQueueName: queue name used in the post sort queue name<br/>appConsolidation: says whether multiple communications should be consolidated when running sorting&bundling<br/>enabled: Determines whether the cron job should be triggered or not. Default value: true","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CronJob"}}},"required":true},"responses":{"default":{"description":"default response","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseCronJob"}}}}}}},"/api/v1/cron-jobs/{domain}/{cronJobId}/trigger":{"post":{"tags":["cron-jobs-controller"],"summary":"Trigger a cron job","operationId":"triggerSchedule","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"cronJobId","in":"path","description":"CronJobId","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"string"}}}}}}},"/api/v1/version/api":{"get":{"tags":["version-controller"],"operationId":"getApiVersion","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"string"}}}}}}},"/version/api":{"get":{"tags":["version-controller"],"operationId":"getApiVersion_1","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"string"}}}}}}},"/version":{"get":{"tags":["version-controller"],"operationId":"getVersion","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionConfig"}}}}}}},"/api/v1/version":{"get":{"tags":["version-controller"],"operationId":"getVersion_1","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionConfig"}}}}}}},"/api/v1/tenants":{"get":{"tags":["tenant-admin-controller"],"operationId":"getTenants","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListResponseTenant"}}}}}}},"/api/v1/tenants/configuration":{"get":{"tags":["tenant-admin-controller"],"operationId":"getTenantConfiguration","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataResponseTenantsConfiguration"}}}}}}},"/api/v1/ssh/known-hosts":{"get":{"tags":["ssh-connection-controller"],"summary":"Get a list of known hosts","description":"Returns a list of all currently known hosts and their keys in this tenant context.","operationId":"listKnownHosts","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ListResponseHostKey"}}}}}},"delete":{"tags":["ssh-connection-controller"],"summary":"Clear list of known hosts","description":"Deletes all currently known hosts and their keys in this tenant context.","operationId":"clearKnownHosts","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/sortdata/{domain}/{id}/content":{"get":{"tags":["sort-data-controller"],"summary":"Get content of sorting assets. Possible parameters are domain (in the URL) and the id (in the URL) of the sorting asset.","description":"Sorting assets using synchronous mode is not included.","operationId":"getSortingAssetContent","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"application/exstream-sort-index":{"examples":{"sortingIndex":{"description":"sortingIndex","value":"0mwrzCN0000006u     ad7f42e3-d747-4f72-885f-cfa7c1901c6d              83575                    Iran                                                                     \n0mwrzCN000001o1     79f4ce52-2f7a-46d1-9923-d25ae21fc075              22776                    Finland                                                                  \n0mwrzCN000003VC     ebc5b694-fad6-4fbf-bb18-238a547262be              39657                    France                                                                   \n0mwrzCN000005Cv     72a6690a-3b43-4f8c-af26-d1ca4f78e838              801                      Australia                                                                \n0mwrzCN000006uE     094fc861-0320-45a0-82f3-31842defaff9              1960                     Switzerland "}}}}}}}},"/api/v1/secrets/{domain}/{secretId}/exists":{"get":{"tags":["secret-controller"],"operationId":"secretExists","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"secretId","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseBoolean"}}}}}}},"/api/v1/runtime/{domain}/jobs":{"get":{"tags":["runtime-controller"],"summary":"Get jobs","description":"Get all jobs (no filter) or all the jobs matching the filter. <br/>Filter example: filter=mode:BATCH;statuses:complete,error ","operationId":"getJobs","parameters":[{"name":"filterRequest","in":"query","description":"The filter value is a semicolon delimited list of key value pairs.\nList values separate possible values with commas. In deletion, if ids are used as key, the other keys are ignored. Keys include:\n| filter name             | Filter value description                                                                           |\n|-------------------------|----------------------------------------------------------------------------------------------------|\n| ids                     | Match jobs with ids in this comma-separated list. For deletion, the maximum number of ids is 100   |\n| channel                 | Match jobs using this channel                                                                      |\n| externalId              | Match jobs associated to this external id.                                                         |\n| triggeredBy             | Match jobs triggered by this user                                                                  |\n| statuses                | Match jobs with any of these statuses. Possible values: started,complete,error,waiting,holding,canceled,deleted|\n| startDateStart          | Match jobs started after this date. (yyyy-MM-dd format)                                            |\n| startDateEnd            | Match jobs started before this date. (yyyy-MM-dd format)                                           |\n| endDateStart            | Match jobs ended after this date. (yyyy-MM-dd format)                                              |\n| endDateEnd              | Match jobs ended before this date. (yyyy-MM-dd format)                                             |\n| expiringDateStart       | Match jobs expiring after this date. (yyyy-MM-dd format)                                           |\n| expiringDateEnd         | Match jobs expiring before this date. (yyyy-MM-dd format)                                          |\n| mode                    | Match jobs with modes in this list. Modes include: BATCH,ONDEMAND                      |\n| aggregatedFMCSnapshotIds| Match jobs with any of these aggregated flow context snapshot ids.                                 |\n| flowModelTypes          | Match jobs with any of these flowModelTypes. Possible values:COMMUNICATION,ALERT      |","required":true,"schema":{"$ref":"#/components/schemas/JobFilterRequest"}},{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"fetchDeleted","in":"query","description":"Show deleted jobs. If set to true, other states are ignored and only deleted jobs are returned.","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageResponseJob"}}}}}},"delete":{"tags":["runtime-controller"],"summary":"Delete completed, canceled or failed jobs","description":"Delete completed, canceled or failed job entries (including all flow instances) in runtime database and correspondent job working directories. <br/> Filter example: filter=mode:BATCH;statuses:complete,error ","operationId":"deleteJobs","parameters":[{"name":"filterRequest","description":"Use filter parameter to decide which jobs should be deleted.The filter value is a semicolon delimited list of key value pairs.\nList values separate possible values with commas. In deletion, if ids are used as key, the other keys are ignored. Keys include:\n| filter name             | Filter value description                                                                           |\n|-------------------------|----------------------------------------------------------------------------------------------------|\n| ids                     | Match jobs with ids in this comma-separated list. For deletion, the maximum number of ids is 100   |\n| channel                 | Match jobs using this channel                                                                      |\n| externalId              | Match jobs associated to this external id.                                                         |\n| triggeredBy             | Match jobs triggered by this user                                                                  |\n| statuses                | Match jobs with any of these statuses. Possible values: started,complete,error,waiting,holding,canceled,deleted|\n| startDateStart          | Match jobs started after this date. (yyyy-MM-dd format)                                            |\n| startDateEnd            | Match jobs started before this date. (yyyy-MM-dd format)                                           |\n| endDateStart            | Match jobs ended after this date. (yyyy-MM-dd format)                                              |\n| endDateEnd              | Match jobs ended before this date. (yyyy-MM-dd format)                                             |\n| expiringDateStart       | Match jobs expiring after this date. (yyyy-MM-dd format)                                           |\n| expiringDateEnd         | Match jobs expiring before this date. (yyyy-MM-dd format)                                          |\n| mode                    | Match jobs with modes in this list. Modes include: BATCH,ONDEMAND                      |\n| aggregatedFMCSnapshotIds| Match jobs with any of these aggregated flow context snapshot ids.                                 |\n| flowModelTypes          | Match jobs with any of these flowModelTypes. Possible values:COMMUNICATION,ALERT      |"},{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"force","in":"query","description":"Force deletion of job entry in the database repository in case deletion of one or more files in the job working directory failed.","required":false,"schema":{"type":"boolean","default":false}},{"name":"syncDelete","in":"query","description":"Delete jobs and all job files synchronously. In case we run it asynchronously, the jobs will be marked as deleted and will be deleted asynchronously by an external job. This parameter only is available when using the key 'ids' in the filter.","required":false,"schema":{"type":"boolean","default":false}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobFilterRequest"}}}},"responses":{"200":{"description":"Deleted jobs successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseJobDeleteStatus"}}}},"400":{"description":"Bad request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}},"409":{"description":"Deletion of one or more files failed.","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseJobDeleteStatus"}}}}}}},"/api/v1/runtime/{domain}/jobs/{id}":{"get":{"tags":["runtime-controller"],"operationId":"getJob","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseJob"}}}}}},"delete":{"tags":["runtime-controller"],"summary":"Delete completed job","description":"Delete completed job entry (including all flow instances) in runtime database and correspondent job working directory.","operationId":"deleteJob","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","description":"Job id","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"force","in":"query","description":"Force deletion of job entry in the database repository in case deletion of one or more files in the job working directory failed.","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"409":{"description":"Deletion of one or more files failed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/runtime/{domain}/flow-steps":{"get":{"tags":["runtime-controller"],"summary":"Get flow steps","description":"Get all flow steps in the domain (no filter) or all the flow steps matching the filter. <br/>Filter example: name:FileInput;statuses:complete,error","operationId":"getFlowSteps","parameters":[{"name":"filterRequest","in":"query","description":"The filter value is a semicolon delimited list of key value pairs.\nList values separate possible values with commas. Keys include:\n| filter name             | Filter value description                                                                       |\n|-------------------------|------------------------------------------------------------------------------------------------|\n| ids                     | Match flow steps with ids in this comma-separated list.                                        |\n| stepName                | Match resources with this stepName                                                             |\n| externalId              | Match flow steps associated to this external id.                                               |\n| previousStepId          | Match flow steps having this flow step as previous step id                                     |\n| flowInstanceId          | Match flow steps belonging to this flow instance                                               |\n| caseSensitive           | Specify if searches (stepName, displayName, externalId) are case sensitive or not.             |\n| statuses                | Match flow steps with any of these statuses. Possible values: canceled,created,waiting,holding,started,executed,complete,error|\n| stepTypes               | Match flow steps with any of these types. Possible values: input,communication,output,decider,processor,delay,hold,externalFlow,aggregator|\n| startDateStart          | Match flow steps started after this date. (yyyy-MM-dd format)                                  |\n| startDateEnd            | Match flow steps started before this date. (yyyy-MM-dd format)                                 |\n| endDateStart            | Match flow steps ended after this date. (yyyy-MM-dd format)                                    |\n| endDateEnd              | Match flow steps ended before this date. (yyyy-MM-dd format)                                   |\n| expiringDateStart       | Match flow steps expiring after this date. (yyyy-MM-dd format)                                 |\n| expiringDateEnd         | Match flow steps expiring before this date. (yyyy-MM-dd format)                                |\n| queueDateStart          | Match flow steps started after this date. (yyyy-MM-dd format)                                  |\n| queueDateEnd            | Match flow steps started before this date. (yyyy-MM-dd format)                                 |\n| executeDateStart        | Match flow steps ended after this date. (yyyy-MM-dd format)                                    |\n| executeDateEnd          | Match flow steps ended before this date. (yyyy-MM-dd format)                                   |\n| deliveryFileRetrievable | Match flow steps that have retrievable delivery files                                          |\n| displayName             | Match flow steps with this display name                                                        |","required":true,"schema":{"$ref":"#/components/schemas/FlowStepFilterRequest"}},{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"checkArtifacts","in":"query","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageResponseFlowStep"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}":{"get":{"tags":["runtime-controller"],"operationId":"getFlowStep","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"checkArtifacts","in":"query","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseFlowStep"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/message-file":{"get":{"tags":["runtime-controller"],"operationId":"getFlowStepMessageFile","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"download","in":"query","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/StreamingResponseBody"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/flow":{"get":{"tags":["runtime-controller"],"operationId":"getFlowStepFlow","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseFlowStepFlow"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/delivery-file":{"get":{"tags":["runtime-controller"],"operationId":"getFlowStepDeliveryFile","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"download","in":"query","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/StreamingResponseBody"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/delivery-file/outputs":{"get":{"tags":["runtime-controller"],"operationId":"getDeliveryFileOutputs","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseJsonNode"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/delivery-file/output-files":{"get":{"tags":["runtime-controller"],"operationId":"getDeliveryFileOutputFiles","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"pageRequest","in":"query","required":true,"schema":{"$ref":"#/components/schemas/SimplePageRequest"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageResponseString"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/customer-artifacts/{customerId}":{"get":{"tags":["runtime-controller"],"summary":"Get the customer artifacts in a zip file","description":"Get the customer artifacts (1 or more) in a zip file, for the specified customer number (e.g. 1)","operationId":"getCustomerOutputArtifacts","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"customerId","in":"path","required":true,"schema":{"maxLength":512,"minLength":1,"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/collection-resources":{"get":{"tags":["runtime-controller"],"description":"Returns all collection resource ids used by the specified flow step","operationId":"getFlowStepCollectionResources","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ListResponseString"}}}}}}},"/api/v1/runtime/{domain}/flow-steps/{id}/artifact/{artifactName}":{"get":{"tags":["runtime-controller"],"operationId":"getDeliveryFileOutputs_1","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"artifactName","in":"path","required":true,"schema":{"maxLength":512,"minLength":1,"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/StreamingResponseBody"}}}}}}},"/api/v1/runtime/{domain}/flow-model-snapshots":{"get":{"tags":["runtime-controller"],"operationId":"getFlowModelSnapshots","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"filterRequest","in":"query","required":true,"schema":{"$ref":"#/components/schemas/FlowModelSnapshotFilterRequest"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageResponseFlowModelSnapshot"}}}}}}},"/api/v1/runtime/{domain}/flow-model-snapshots/{snapshotId}":{"get":{"tags":["runtime-controller"],"operationId":"getFlowModelSnapshot","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"snapshotId","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseFlowModelSnapshot"}}}}}}},"/api/v1/runtime/{domain}/flow-instances":{"get":{"tags":["runtime-controller"],"summary":"Get flow instances","description":"Get all flow instances (no filter) or all the flow instances matching the filter. <br/>Filter example: filter=statuses:complete,error;externalId:specialJob ","operationId":"getFlowInstances","parameters":[{"name":"filterRequest","in":"query","description":"The filter value is a semicolon delimited list of key value pairs.\nList values separate possible values with commas. Keys include:\n| filter name            | Filter value description                                                                               |\n|------------------------|--------------------------------------------------------------------------------------------------------|\n| ids                    | Match flow instances with ids in this comma-separated list.                                            |\n| flowModelId            | Match flow instances spawned from this flow model id (deprecated).                                     |\n| flowModelIds           | Match flow instances spawned from these flow model ids.(Note: When used along with flowModelId filter, ids from both filters are applied.)|\n| flowModelSnapshotIds   | Match flow instances spawned from any of these flow model snapshot ids.                                |\n| jobId                  | Match flow instances that ran as part of this job.                                                     |\n| externalId             | Match flow instances associated to this external id.                                                   |\n| statuses               | Match flow instances with any of these statuses. Possible values: canceled,started,complete,error,waiting,holding|\n| expiringDateStart      | Match flow instances expiring after this date. (yyyy-MM-dd format)                                     |\n| expiringDateEnd        | Match flow instances expiring before this date. (yyyy-MM-dd format)                                    |\n| flowModelTypes         | Match flow instances with any of these flow model types. Possible values: COMMUNICATION,ALERT,NOTIFICATION|\n| startDateStart         | Match flow instances started after this date. (yyyy-MM-dd format)                                      |\n| startDateEnd           | Match flow instances started before this date. (yyyy-MM-dd format)                                     |\n| endDateStart           | Match flow instances ended after this date. (yyyy-MM-dd format)                                        |\n| endDateEnd             | Match flow instances ended before this date. (yyyy-MM-dd format)                                       |\n| executingLongRunningOp | Match flow instances which are executing a long-running operation                                      |","required":true,"schema":{"$ref":"#/components/schemas/FlowInstanceFilterRequest"}},{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageResponseFlowInstance"}}}}}}},"/api/v1/runtime/{domain}/flow-instances/{id}":{"get":{"tags":["runtime-controller"],"operationId":"getFlowInstance","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"checkArtifacts","in":"query","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseFlowInstance"}}}}}},"delete":{"tags":["runtime-controller"],"operationId":"deleteFlowInstance","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/runtime/{domain}/flow-instances/{id}/input":{"get":{"tags":["runtime-controller"],"operationId":"getFlowInstanceInput","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"download","in":"query","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/StreamingResponseBody"}}}}}}},"/api/v1/runtime/{domain}/flow-instances/{id}/collection-resources":{"get":{"tags":["runtime-controller"],"description":"Returns all collection resource ids used by any flow step for a flow instance","operationId":"getFlowInstanceCollectionResources","parameters":[{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"id","in":"path","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ListResponseString"}}}}}}},"/api/v1/plugins":{"get":{"tags":["custom-plugins-controller"],"summary":"Get a list of plugins","description":"Returns a list of descriptions for all currently deployed custom plugins","operationId":"getPlugins","parameters":[{"name":"locale","in":"query","description":"Requested localization for plugins if available. Will return base localization otherwise.","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataResponseMapStringPlugin"}}}}}}},"/api/v1/flow-models/{domain}/{flowModelId}/deletable":{"get":{"tags":["flow-model-controller"],"summary":"Says whether this flow model can be safely deleted","description":"It will not be deletable if it is published in at least one domain, maybe one to which the user has no access","operationId":"isDeletable","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"flowModelId","in":"path","description":"Flow model id","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"version","in":"query","description":"Specify version (optional). If omitted, any version will match.","required":false,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Says whether the flow model can be safely deleted or not","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseDeletableResource"}}}}}}},"/api/v1/flow-models/{domain}/published":{"get":{"tags":["flow-model-controller"],"summary":"List published flow models","description":"Get a list of current published flow models in this orchestration runtime environment context.<br /><b>Version 20.4.0:</b> Flow model '<i>version</i>' property changed from datatype string to integer in response body.","operationId":"listPublished","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"responses":{"200":{"description":"List of published flow models, the list may be empty","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ListResponseTenantFlowmodel"}}}}}}},"/api/v1/flow-model-contexts/{domain}":{"get":{"tags":["flow-model-context-controller"],"summary":"Filter published flow contexts","description":"Get a filtered list of current published flow contexts in this orchestration runtime environment context.<br/>Filter example: searchString:fulfillment","operationId":"getFilteredContexts","parameters":[{"name":"filterRequest","in":"query","description":"The filter value is a semicolon delimited list of key value pairs.\nList values separate possible values with commas. Keys include:\n| filter name          | Filter value description                                                                                       |\n|----------------------|----------------------------------------------------------------------------------------------------------------|\n| snapshotIds          | Match contexts with snapshotIds in this comma-separated list.                                                  |\n| dasIds               | Match snapshots created from any of these das ids.                                                             |\n| dasVersions          | Match snapshots where das version of original flow model is in this list. Useful with a singular id in dasIds. |\n| searchString         | Match snapshots with names matching this string.                                                               |\n| caseSensitive        | Specify if searches are case sensitive or not.                                                                 |\n| wholeWord            | Specify if searches match whole word or not.                                                                   |","required":true,"schema":{"$ref":"#/components/schemas/FlowModelContextFilterRequest"}},{"name":"domain","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/PageResponseFlowModelContextSnapshot"}}}}}}},"/api/v1/flow-model-contexts/{domain}/{flowContextId}/deletable":{"get":{"tags":["flow-model-context-controller"],"summary":"Says whether this flow context can be safely deleted","description":"It will not be deletable if it is published in at least one domain, maybe one to which the user has no access","operationId":"isDeletable_1","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"flowContextId","in":"path","description":"Flow context id","required":true,"schema":{"type":"string","format":"uuid"}},{"name":"version","in":"query","description":"Specify version (optional). If omitted, any version will match.","required":false,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"Says whether the flow context can be safely deleted or not","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseDeletableResource"}}}}}}},"/api/v1/flow-model-contexts/{domain}/published":{"get":{"tags":["flow-model-context-controller"],"summary":"List published flow contexts","description":"Get a list of current published flow contexts in this orchestration runtime environment context.","operationId":"listPublished_1","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}}],"responses":{"200":{"description":"List of published flow model contexts, the list may be empty","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ListResponseFlowModelContextSnapshot"}}}}}}},"/api/v1/flow-model-contexts/{domain}/published/{flowModelContextId}":{"get":{"tags":["flow-model-context-controller"],"summary":"Get published flow context content","description":"Get content of specified published flow context version from orchestration runtime environment.","operationId":"getPublished","parameters":[{"name":"domain","in":"path","description":"Domain id","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"flowModelContextId","in":"path","description":"Flow context id","required":true,"schema":{"type":"string","format":"uuid"}}],"responses":{"200":{"description":"Content of flow model context returned successfully","content":{"*/*":{"schema":{"$ref":"#/components/schemas/DataResponseFlowModelContextSnapshot"}}}},"404":{"description":"Flow model context not found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/api/v1/configuration/{domainId}/{configType}/{configName}":{"get":{"tags":["configuration-controller"],"operationId":"getConfiguration","parameters":[{"name":"domainId","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"configType","in":"path","description":"Specify the configuration type.","required":true,"schema":{"type":"string"}},{"name":"configName","in":"path","description":"Specify the configuration name.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Configuration"}}}}}},"delete":{"tags":["configuration-controller"],"operationId":"deleteConfiguration","parameters":[{"name":"domainId","in":"path","required":true,"schema":{"maxLength":255,"minLength":1,"type":"string"}},{"name":"configType","in":"path","description":"Specify the configuration type.","required":true,"schema":{"type":"string"}},{"name":"configName","in":"path","description":"Specify the configuration name.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/config":{"get":{"tags":["config-controller"],"operationId":"getConfig","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PublicOrcConfiguration"}}}}}}},"/api/v1/config":{"get":{"tags":["config-controller"],"operationId":"getConfig_1","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PublicOrcConfiguration"}}}}}}},"/api/v1/runtime/cache":{"delete":{"tags":["cache-controller"],"summary":"Clean input file cache","description":"Delete all input file cache entries for files which are currently not in use.","operationId":"cleanCache","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"string"}}}}}}}},"components":{"schemas":{"DataResponseTenant":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/Tenant"}}},"Schema":{"type":"object","properties":{"schemaId":{"type":"string"},"latestSchemaChangeLogEntry":{"$ref":"#/components/schemas/SchemaChangeLogEntry"},"schemaMissingFromDatabase":{"type":"boolean"}}},"SchemaChangeLogEntry":{"type":"object","properties":{"id":{"type":"string"},"dateExecuted":{"type":"string","format":"date-time"},"orderExecuted":{"type":"integer","format":"int32"},"liquiBaseVersion":{"type":"string"}}},"Tenant":{"type":"object","properties":{"tenantId":{"type":"string"},"schema":{"$ref":"#/components/schemas/Schema"}}},"CreateTenantBody":{"required":["dbPassword"],"type":"object","properties":{"tenantId":{"maxLength":40,"minLength":1,"type":"string"},"schemaName":{"type":"string"},"dbUserId":{"type":"string"},"dbPassword":{"type":"string"}}},"ListResponseTenant":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/Tenant"}}}},"RequestBodyPut":{"type":"object","properties":{"state":{"type":"string","enum":["processed","waiting","expired","canceled","all"]}},"description":"Request body"},"SortInfo":{"type":"object"},"SortingDataFilter":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"string","format":"uuid"}},"jobIds":{"type":"array","items":{"type":"string","format":"uuid"}},"flowStepIds":{"type":"array","items":{"type":"string","format":"uuid"}},"communicationIds":{"type":"array","items":{"type":"string","format":"uuid"}},"queueNames":{"type":"array","example":["Pre-Sort Output Queue"],"items":{"type":"string","example":"[\"Pre-Sort Output Queue\"]"}},"creationDateStart":{"pattern":"yyyy-MM-dd","type":"string","example":"2023-02-17"},"creationDateEnd":{"pattern":"yyyy-MM-dd","type":"string","example":"2023-02-20"},"externalIds":{"type":"array","example":["ExternalID1","ExternalID2"],"items":{"type":"string","example":"[\"ExternalID1\",\"ExternalID2\"]"}},"flowModelIds":{"type":"array","items":{"type":"string","format":"uuid"}},"lastModificationDateStart":{"type":"string","format":"date-time"},"lastModificationDateEnd":{"type":"string","format":"date-time"},"states":{"type":"array","items":{"type":"string","enum":["processed","waiting","expired","canceled","all"]}},"assetTypes":{"type":"array","items":{"type":"string","enum":["sortingIndex","sortingDataReference"]}},"metadata":{"type":"array","items":{"type":"string"}},"sortSubflows":{"type":"array","items":{"type":"string"}},"referenceIds":{"type":"array","items":{"type":"string","format":"uuid"}},"customersCountFrom":{"type":"integer","format":"int32"},"customersCountTo":{"type":"integer","format":"int32"}}},"SortingDataFilterRequest":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"count":{"type":"integer","format":"int32"},"sort":{"$ref":"#/components/schemas/SortInfo"},"filter":{"$ref":"#/components/schemas/SortingDataFilter"}},"description":"Use the filter parameter to decide which sorting assets should be deleted"},"GenericResponse":{"type":"object","properties":{"status":{"type":"string","description":"General response state","example":"success|failure"},"message":{"type":"string","description":"Status code as a string representation (optional)"},"details":{"type":"string","description":"Detailed message (optional)"}}},"DataResponseSortingAsset":{"type":"object","properties":{"status":{"type":"string","description":"General response state","example":"success|failure"},"message":{"type":"string","description":"Status code as a string representation (optional)"},"details":{"type":"string","description":"Detailed message (optional)"},"data":{"$ref":"#/components/schemas/SortingAsset"}}},"SortingAsset":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"jobId":{"type":"string","format":"uuid"},"flowStepId":{"type":"string","format":"uuid"},"flowModelId":{"type":"string","format":"uuid"},"communicationId":{"type":"string","format":"uuid"},"subpackageIds":{"type":"string"},"state":{"type":"string","enum":["processed","waiting","expired","canceled","all"]},"creationDate":{"type":"string","format":"date-time"},"lastModificationDate":{"type":"string","format":"date-time"},"queueName":{"type":"string"},"metadata":{"type":"string"},"engineInfo":{"type":"string"},"sortSubflow":{"type":"string"},"externalId":{"type":"string"},"referenceId":{"type":"string","format":"uuid"},"customersCount":{"type":"integer","format":"int32"},"subPackageIds":{"type":"string","writeOnly":true}}},"SecretInfo":{"type":"object","properties":{"b64Content":{"type":"string"},"decodedContent":{"type":"string"}}},"CronJob":{"type":"object","properties":{"domainId":{"type":"string"},"name":{"maxLength":255,"minLength":1,"type":"string"},"cronExpression":{"maxLength":255,"minLength":1,"type":"string"},"cronType":{"type":"string","enum":["markDeleted","wipe","startJob","updateExpirationTime","wipeSortingAssets","expireSortingAssets","sortingAndBundling"]},"startDateStart":{"maxLength":255,"minLength":0,"type":"string"},"startDateEnd":{"maxLength":255,"minLength":0,"type":"string"},"endDateStart":{"maxLength":255,"minLength":0,"type":"string"},"endDateEnd":{"maxLength":255,"minLength":0,"type":"string"},"enabled":{"type":"boolean"},"serviceName":{"maxLength":255,"minLength":0,"type":"string"},"channelName":{"maxLength":255,"minLength":0,"type":"string"},"inputPath":{"maxLength":255,"minLength":0,"type":"string"},"headers":{"type":"object","additionalProperties":{"type":"string"}},"cacheTimeout":{"type":"number","format":"float"},"mode":{"type":"string","enum":["BATCH","ONDEMAND"]},"flowModelId":{"type":"string","format":"uuid"},"preSortQueueName":{"maxLength":255,"minLength":0,"type":"string"},"postSortQueueName":{"maxLength":255,"minLength":0,"type":"string"},"jobId":{"type":"string","format":"uuid"},"dryRun":{"type":"boolean"},"appConsolidation":{"type":"boolean"},"jobAvailable":{"type":"boolean"},"id":{"type":"string","format":"uuid"},"statuses":{"type":"array","items":{"type":"string","enum":["canceled","complete","deleted","started","waiting","holding","error","uninitialized"]}},"sortingAssetStatuses":{"type":"array","items":{"type":"string","enum":["processed","waiting","expired","canceled","all"]}},"communicationIdList":{"type":"array","items":{"type":"string","format":"uuid"}}}},"DataResponseCronJob":{"type":"object","properties":{"status":{"type":"string","description":"General response state","example":"success|failure"},"message":{"type":"string","description":"Status code as a string representation (optional)"},"details":{"type":"string","description":"Detailed message (optional)"},"data":{"$ref":"#/components/schemas/CronJob"}}},"Configuration":{"type":"object","properties":{"domainId":{"type":"string"},"configType":{"type":"string"},"configName":{"type":"string"},"configDetails":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/PropertyValue"}},"active":{"type":"boolean"}}},"PropertyValue":{"type":"object","properties":{"value":{"type":"string"},"secretId":{"type":"string"},"values":{"uniqueItems":true,"type":"array","items":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/PropertyValue"}}}}},"DataResponseConfiguration":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/Configuration"}}},"HostKey":{"type":"object","properties":{"host":{"type":"string"},"type":{"type":"string"},"key":{"type":"string"}}},"PostSortRunFilter":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"string","format":"uuid"}},"jobIds":{"type":"array","items":{"type":"string","format":"uuid"}},"flowStepIds":{"type":"array","items":{"type":"string","format":"uuid"}},"communicationIds":{"type":"array","items":{"type":"string","format":"uuid"}},"queueNames":{"type":"array","example":["Pre-Sort Output Queue"],"items":{"type":"string","example":"[\"Pre-Sort Output Queue\"]"}},"creationDateStart":{"pattern":"yyyy-MM-dd","type":"string","example":"2023-02-17"},"creationDateEnd":{"pattern":"yyyy-MM-dd","type":"string","example":"2023-02-20"},"externalIds":{"type":"array","example":["ExternalID1","ExternalID2"],"items":{"type":"string","example":"[\"ExternalID1\",\"ExternalID2\"]"}}}},"PostSortRunOption":{"required":["flowModelId"],"type":"object","properties":{"flowModelId":{"type":"string","format":"uuid"},"appConsolidation":{"type":"boolean"},"dryRun":{"type":"boolean","example":false},"externalId":{"type":"string"},"customerList":{"pattern":"^(?!([ \\d]*-){2})\\d+(?: *[-,] *\\d+)*$","type":"string","example":"2,7,14-50"},"postSortQueueName":{"maxLength":255,"minLength":0,"type":"string","example":"Post-sort queue name"},"filter":{"$ref":"#/components/schemas/PostSortRunFilter"}}},"FlowInstanceCountsFilter":{"type":"object","properties":{"flowModelIds":{"type":"array","items":{"type":"string","format":"uuid"}},"startDateStart":{"type":"string","format":"date-time"},"startDateEnd":{"type":"string","format":"date-time"},"fillMissingData":{"type":"boolean"}}},"FlowInstanceCountsFilterRequest":{"type":"object","properties":{"filter":{"$ref":"#/components/schemas/FlowInstanceCountsFilter"}}},"DataResponseMapObjectObject":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"object","additionalProperties":{"type":"object"}}}},"FlowInstanceFilter":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"string","format":"uuid"}},"flowModelSnapshotIds":{"type":"array","items":{"type":"string","format":"uuid"}},"flowModelId":{"type":"string","format":"uuid","deprecated":true},"flowModelIds":{"type":"array","items":{"type":"string","format":"uuid"}},"jobId":{"type":"string","format":"uuid"},"startDateStart":{"type":"string","format":"date-time"},"startDateEnd":{"type":"string","format":"date-time"},"endDateStart":{"type":"string","format":"date-time"},"endDateEnd":{"type":"string","format":"date-time"},"expiringDateStart":{"type":"string","format":"date-time"},"expiringDateEnd":{"type":"string","format":"date-time"},"domainId":{"type":"string"},"externalId":{"maxLength":400,"minLength":0,"type":"string"},"statuses":{"type":"array","items":{"type":"string","enum":["canceled","started","complete","waiting","holding","error","finishing"]}},"flowModelTypes":{"type":"array","items":{"type":"string","enum":["COMMUNICATION","ALERT","NOTIFICATION"]}},"executingLongRunningOp":{"type":"boolean"}}},"FlowInstanceFilterRequest":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"count":{"type":"integer","format":"int32"},"sort":{"$ref":"#/components/schemas/SortInfo"},"filter":{"$ref":"#/components/schemas/FlowInstanceFilter"}}},"DataResponseFlowInstancesAndAssociatedJobs":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/FlowInstancesAndAssociatedJobs"}}},"FlowInstance":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"jobId":{"type":"string","format":"uuid"},"flowModelId":{"type":"string","format":"uuid"},"flowModelSnapshotId":{"type":"string","format":"uuid"},"domainId":{"type":"string"},"status":{"type":"string","enum":["canceled","started","complete","waiting","holding","error","finishing"]},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"expirationDate":{"type":"string","format":"date-time"},"msg":{"type":"string"},"externalId":{"type":"string"},"flowModelType":{"type":"string","enum":["COMMUNICATION","ALERT","NOTIFICATION"]},"inputRetrievable":{"type":"boolean"},"executingLongRunningOp":{"type":"boolean"}}},"FlowInstancesAndAssociatedJobs":{"type":"object","properties":{"flowInstances":{"$ref":"#/components/schemas/PageResponseFlowInstance"},"jobs":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Job"}}}},"Job":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"domainId":{"type":"string"},"channel":{"type":"string"},"mode":{"type":"string","enum":["BATCH","ONDEMAND"]},"status":{"type":"string","enum":["canceled","complete","deleted","started","waiting","holding","error","uninitialized"]},"flowModelType":{"type":"string","enum":["COMMUNICATION","ALERT","NOTIFICATION"]},"msg":{"type":"string"},"externalId":{"type":"string"},"triggeredBy":{"type":"string"},"aggregatedFMCSnapshotId":{"type":"string","format":"uuid"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"expirationDate":{"type":"string","format":"date-time"}}},"PageResponseFlowInstance":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/FlowInstance"}},"page":{"$ref":"#/components/schemas/SimplePage"}}},"SimplePage":{"type":"object","properties":{"pageSize":{"type":"integer","format":"int32"},"pageOffset":{"type":"integer","format":"int32"},"totalElements":{"type":"integer","format":"int64"},"totalPages":{"type":"integer","format":"int32"},"currentPageNumber":{"type":"integer","format":"int32"}}},"Condition":{"type":"object","properties":{"operator":{"type":"string","enum":["EQ","NEQ","LT","LTE","GT","GTE","IN","NIN","NL","NN"]},"datatype":{"type":"string","enum":["string","numeric"]},"type":{"type":"string","enum":["outcome","variable"]},"name":{"type":"string"},"value":{"type":"string"},"values":{"type":"array","items":{"type":"string"}}}},"Connection":{"type":"object","properties":{"condition":{"$ref":"#/components/schemas/Condition"},"sourceAnchor":{"type":"string"},"targetAnchor":{"type":"string"},"targetNode":{"type":"string"},"targetNodeId":{"type":"string"},"displayName":{"type":"string"},"defaultConnection":{"type":"boolean"}}},"DataResponseTenantFlowmodel":{"type":"object","properties":{"status":{"type":"string","description":"General response state","example":"success|failure"},"message":{"type":"string","description":"Status code as a string representation (optional)"},"details":{"type":"string","description":"Detailed message (optional)"},"data":{"$ref":"#/components/schemas/TenantFlowmodel"}}},"Node":{"type":"object","properties":{"displayName":{"type":"string"},"id":{"type":"string"},"instanceId":{"type":"string"},"type":{"type":"string","enum":["input","output","output_external_response","communication","communication_response","externalsubflow","decider","delay","processor","aggregation","event"]},"subtype":{"type":"string","enum":["directory_channel","https_channel","aws_s3_input_channel","empower_fulfillment_channel","post_sort_event_channel","file_channel","email_channel","documentresponse_channel","azure_blob_channel","aws_s3_channel","gcp_cs_out_channel","generic","generic_channel","unknown"]},"internal":{"type":"boolean"},"x":{"type":"integer","format":"int32"},"y":{"type":"integer","format":"int32"},"connections":{"type":"array","items":{"$ref":"#/components/schemas/Connection"}},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/NodeAttribute"}},"metadata":{"type":"array","items":{"$ref":"#/components/schemas/NodeMetadata"}}}},"NodeAttribute":{"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string"}}},"NodeMetadata":{"type":"object","properties":{"name":{"type":"string"},"type":{"type":"string"},"text":{"type":"string"}}},"TenantFlowmodel":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"name":{"type":"string"},"description":{"type":"string"},"revision":{"type":"integer","format":"int32"},"version":{"type":"integer","format":"int32"},"state":{"type":"string","enum":["DRAFT","REVIEW","APPROVED","REJECTED"]},"type":{"type":"string","enum":["COMMUNICATION","ALERT","NOTIFICATION"]},"stateComment":{"type":"string"},"lockedBy":{"type":"string"},"sdpermissions":{"type":"array","items":{"type":"string"}},"nodes":{"type":"array","items":{"$ref":"#/components/schemas/Node"}},"latestVersion":{"type":"boolean"}}},"FlowObjectData":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"version":{"type":"string"}}},"FlowObjectsRequest":{"type":"object","properties":{"resources":{"type":"array","items":{"$ref":"#/components/schemas/FlowObjectData"}}}},"DataResponseFlowModelContextSnapshot":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/FlowModelContextSnapshot"}}},"FlowModelContextSnapshot":{"type":"object","properties":{"snapshotId":{"type":"string","format":"uuid"},"id":{"type":"string","format":"uuid"},"domainId":{"type":"string"},"name":{"type":"string"},"xmlContent":{"type":"string"},"version":{"type":"integer","format":"int32"},"content":{"type":"string"}}},"Details":{"type":"object","properties":{"appName":{"type":"string"},"buildNumber":{"type":"string"},"timestamp":{"type":"string"},"git":{"$ref":"#/components/schemas/GitConfig"}}},"GitConfig":{"type":"object","properties":{"tag":{"type":"string"},"hash":{"type":"string"},"branch":{"type":"string"},"commits":{"type":"string"}}},"VersionConfig":{"type":"object","properties":{"apiIdentifier":{"type":"string"},"details":{"$ref":"#/components/schemas/Details"},"major":{"type":"string"},"minor":{"type":"string"},"patch":{"type":"string"},"versionString":{"type":"string"}}},"DataResponseTenantsConfiguration":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/TenantsConfiguration"}}},"TenantsConfiguration":{"type":"object","properties":{"autoSchemaManagement":{"type":"boolean"}}},"ListResponseHostKey":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/HostKey"}}}},"DataResponseBoolean":{"type":"object","properties":{"status":{"type":"string","description":"General response state","example":"success|failure"},"message":{"type":"string","description":"Status code as a string representation (optional)"},"details":{"type":"string","description":"Detailed message (optional)"},"data":{"type":"boolean"}}},"JobFilter":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"string","format":"uuid"}},"channel":{"maxLength":255,"minLength":0,"type":"string"},"startDateStart":{"type":"string","format":"date-time"},"startDateEnd":{"type":"string","format":"date-time"},"endDateStart":{"type":"string","format":"date-time"},"endDateEnd":{"type":"string","format":"date-time"},"expiringDateStart":{"type":"string","format":"date-time"},"expiringDateEnd":{"type":"string","format":"date-time"},"domainId":{"type":"string"},"statuses":{"type":"array","items":{"type":"string","enum":["canceled","complete","deleted","started","waiting","holding","error","uninitialized"]}},"mode":{"type":"string","enum":["BATCH","ONDEMAND"]},"externalId":{"maxLength":400,"minLength":0,"type":"string"},"triggeredBy":{"maxLength":400,"minLength":0,"type":"string"},"aggregatedFMCSnapshotIds":{"type":"array","items":{"type":"string","format":"uuid"}},"flowModelTypes":{"type":"array","items":{"type":"string","enum":["COMMUNICATION","ALERT","NOTIFICATION"]}}}},"JobFilterRequest":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"count":{"type":"integer","format":"int32"},"sort":{"$ref":"#/components/schemas/SortInfo"},"filter":{"$ref":"#/components/schemas/JobFilter"}}},"PageResponseJob":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/Job"}},"page":{"$ref":"#/components/schemas/SimplePage"}}},"DataResponseJob":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/Job"}}},"FlowStepFilter":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"string","format":"uuid"}},"flowInstanceId":{"type":"string","format":"uuid"},"stepName":{"maxLength":255,"minLength":0,"type":"string"},"displayName":{"maxLength":255,"minLength":0,"type":"string"},"startDateStart":{"type":"string","format":"date-time"},"startDateEnd":{"type":"string","format":"date-time"},"endDateStart":{"type":"string","format":"date-time"},"endDateEnd":{"type":"string","format":"date-time"},"queueDateStart":{"type":"string","format":"date-time"},"queueDateEnd":{"type":"string","format":"date-time"},"executeDateStart":{"type":"string","format":"date-time"},"executeDateEnd":{"type":"string","format":"date-time"},"expiringDateStart":{"type":"string","format":"date-time"},"expiringDateEnd":{"type":"string","format":"date-time"},"externalId":{"maxLength":400,"minLength":0,"type":"string"},"previousStepId":{"type":"string","format":"uuid"},"caseSensitive":{"type":"boolean"},"deliveryFileRetrievable":{"type":"boolean"},"statuses":{"type":"array","items":{"type":"string","enum":["canceled","created","waiting","holding","started","executed","filtered","complete","error","expired"]}},"stepTypes":{"type":"array","items":{"type":"string","enum":["input","communication","output","decider","processor","aggregator","delay","hold","externalFlow"]}}}},"FlowStepFilterRequest":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"count":{"type":"integer","format":"int32"},"sort":{"$ref":"#/components/schemas/SortInfo"},"filter":{"$ref":"#/components/schemas/FlowStepFilter"}}},"FlowStep":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"previousStepId":{"type":"string","format":"uuid"},"flowInstanceId":{"type":"string","format":"uuid"},"stepName":{"type":"string"},"displayName":{"type":"string"},"status":{"type":"string","enum":["canceled","created","waiting","holding","started","executed","filtered","complete","error","expired"]},"stepType":{"type":"string","enum":["input","communication","output","decider","processor","aggregator","delay","hold","externalFlow"]},"queueDate":{"type":"string","format":"date-time"},"startDate":{"type":"string","format":"date-time"},"executeDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"expirationDate":{"type":"string","format":"date-time"},"msg":{"type":"string"},"externalId":{"type":"string"},"deliveryFileRetrievable":{"type":"boolean"},"messageFileRetrievable":{"type":"boolean"}}},"PageResponseFlowStep":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/FlowStep"}},"page":{"$ref":"#/components/schemas/SimplePage"}}},"DataResponseFlowStep":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/FlowStep"}}},"StreamingResponseBody":{"type":"object"},"DataResponseFlowStepFlow":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/FlowStepFlow"}}},"FlowStepFlow":{"type":"object","properties":{"inputChannel":{"type":"string"},"flowSteps":{"type":"array","items":{"$ref":"#/components/schemas/FlowStep"}}}},"DataResponseJsonNode":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/JsonNode"}}},"JsonNode":{"type":"object"},"SimplePageRequest":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"count":{"type":"integer","format":"int32"}}},"PageResponseString":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"string"}},"page":{"$ref":"#/components/schemas/SimplePage"}}},"ListResponseString":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"type":"string"}}}},"FlowModelSnapshotFilter":{"type":"object","properties":{"domain":{"type":"string"},"ids":{"type":"array","items":{"type":"string","format":"uuid"}},"dasIds":{"type":"array","items":{"type":"string","format":"uuid"}},"dasVersions":{"type":"array","items":{"type":"integer","format":"int32"}},"searchString":{"maxLength":128,"minLength":0,"type":"string"},"caseSensitive":{"type":"boolean"},"wholeWord":{"type":"boolean"},"published":{"type":"boolean"},"publishedBy":{"maxLength":255,"minLength":0,"type":"string"},"publishDateStart":{"type":"string","format":"date-time"},"publishDateEnd":{"type":"string","format":"date-time"},"unpublishDateStart":{"type":"string","format":"date-time"},"unpublishDateEnd":{"type":"string","format":"date-time"},"effectiveDate":{"type":"string","format":"date-time"}}},"FlowModelSnapshotFilterRequest":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"count":{"type":"integer","format":"int32"},"sort":{"$ref":"#/components/schemas/SortInfo"},"filter":{"$ref":"#/components/schemas/FlowModelSnapshotFilter"},"includeContent":{"type":"boolean"}}},"FlowModelSnapshot":{"type":"object","properties":{"snapshotId":{"type":"string","format":"uuid"},"dasId":{"type":"string","format":"uuid"},"dasVersion":{"type":"integer","format":"int32"},"domain":{"type":"string"},"name":{"maxLength":128,"minLength":1,"type":"string"},"description":{"type":"string"},"publishedBy":{"type":"string"},"publishDate":{"type":"string","format":"date-time"},"unpublishDate":{"type":"string","format":"date-time"},"content":{"type":"array","items":{"type":"string","format":"byte"}}}},"PageResponseFlowModelSnapshot":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/FlowModelSnapshot"}},"page":{"$ref":"#/components/schemas/SimplePage"}}},"DataResponseFlowModelSnapshot":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/FlowModelSnapshot"}}},"DataResponseFlowInstance":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/FlowInstance"}}},"DataResponseMapStringPlugin":{"type":"object","properties":{"status":{"type":"string","description":"General response state","example":"success|failure"},"message":{"type":"string","description":"Status code as a string representation (optional)"},"details":{"type":"string","description":"Detailed message (optional)"},"data":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/Plugin"}}}},"OptionValue":{"required":["id","label"],"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"}}},"Plugin":{"required":["id"],"type":"object","properties":{"id":{"type":"string"},"description":{"type":"string"},"group":{"type":"string"},"icon":{"type":"string"},"iconType":{"type":"string"},"label":{"type":"string"},"version":{"type":"string"},"locale":{"type":"string"},"config":{"$ref":"#/components/schemas/PluginWizardConfig"},"uiComponent":{"type":"string"},"custom":{"type":"boolean"}}},"PluginDynamicOptions":{"type":"object","properties":{"type":{"type":"string"},"filter":{"type":"string"}}},"PluginMigrationConfig":{"type":"object","properties":{"source":{"type":"string"},"format":{"type":"string"}}},"PluginProperty":{"required":["id"],"type":"object","properties":{"id":{"type":"string"},"label":{"type":"string"},"defaultValue":{"type":"string"},"type":{"type":"string"},"required":{"type":"boolean"},"disabled":{"type":"boolean"},"placeholder":{"type":"string"},"maxLength":{"type":"integer","format":"int32"},"validator":{"type":"string","deprecated":true},"validators":{"type":"array","items":{"type":"string"}},"visible":{"type":"string"},"options":{"type":"array","items":{"$ref":"#/components/schemas/OptionValue"}},"minListRows":{"type":"integer","format":"int32"},"maxListRows":{"type":"integer","format":"int32"},"instruction":{"type":"string"},"rows":{"type":"integer","format":"int32"},"migration":{"$ref":"#/components/schemas/PluginMigrationConfig"},"headers":{"type":"boolean"},"dynamicOptions":{"$ref":"#/components/schemas/PluginDynamicOptions"}}},"PluginValidators":{"type":"object"},"PluginWizardConfig":{"type":"object","properties":{"outcomeMappingSupported":{"type":"boolean"},"assuredDeliverySupported":{"type":"boolean"},"outcomeMappingRequired":{"type":"boolean"},"analyticsSupported":{"type":"boolean"},"additionalFilesInputHandlingSupported":{"type":"boolean"},"additionalFilesInputHandlingOnly":{"type":"boolean"},"restrictedUseDefault":{"type":"boolean"},"validators":{"$ref":"#/components/schemas/PluginValidators"},"secureChannelHostVerificationRequired":{"type":"array","items":{"type":"string"}},"authenticationProvided":{"type":"boolean"},"jobExpirationSupported":{"type":"boolean"},"steps":{"type":"array","items":{"$ref":"#/components/schemas/PluginWizardStep"}}}},"PluginWizardStep":{"required":["id"],"type":"object","properties":{"id":{"type":"string"},"title":{"type":"string"},"visible":{"type":"string"},"properties":{"type":"array","items":{"$ref":"#/components/schemas/PluginProperty"}}}},"DataResponseDeletableResource":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/DeletableResource"}}},"DeletableResource":{"type":"object","properties":{"deletable":{"type":"boolean"}}},"ListResponseTenantFlowmodel":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/TenantFlowmodel"}}}},"FlowModelContextFilter":{"type":"object","properties":{"snapshotIds":{"type":"array","items":{"type":"string","format":"uuid"}},"dasIds":{"type":"array","items":{"type":"string","format":"uuid"}},"dasVersions":{"type":"array","items":{"type":"integer","format":"int32"}},"domain":{"type":"string"},"searchString":{"maxLength":255,"minLength":0,"type":"string"},"caseSensitive":{"type":"boolean"},"wholeWord":{"type":"boolean"}}},"FlowModelContextFilterRequest":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"count":{"type":"integer","format":"int32"},"sort":{"$ref":"#/components/schemas/SortInfo"},"filter":{"$ref":"#/components/schemas/FlowModelContextFilter"}}},"PageResponseFlowModelContextSnapshot":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/FlowModelContextSnapshot"}},"page":{"$ref":"#/components/schemas/SimplePage"}}},"ListResponseFlowModelContextSnapshot":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/FlowModelContextSnapshot"}}}},"ListResponseCronJob":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/CronJob"}}}},"ConfigurationFilter":{"type":"object","properties":{"domainId":{"type":"string"},"configType":{"type":"string"},"configName":{"type":"string"}}},"ConfigurationFilterRequest":{"type":"object","properties":{"offset":{"type":"integer","format":"int32"},"count":{"type":"integer","format":"int32"},"sort":{"$ref":"#/components/schemas/SortInfo"},"filter":{"$ref":"#/components/schemas/ConfigurationFilter"}}},"PageResponseConfiguration":{"type":"object","properties":{"status":{"type":"string"},"data":{"type":"array","items":{"$ref":"#/components/schemas/Configuration"}},"page":{"$ref":"#/components/schemas/SimplePage"}}},"PublicOrcConfiguration":{"type":"object","properties":{"assuredDeliveryEnabled":{"type":"boolean"},"flowScriptDebuggingEnabled":{"type":"boolean"},"baseSubscription":{"type":"boolean"},"subscriptionEnabled":{"type":"boolean"}}},"DataResponseJobDeleteStatus":{"type":"object","properties":{"status":{"type":"string"},"data":{"$ref":"#/components/schemas/JobDeleteStatus"}}},"JobDeleteStatus":{"type":"object","properties":{"failedDeleteJobs":{"type":"object","additionalProperties":{"type":"string"}},"successDeleteJobs":{"type":"integer","format":"int64"}}}}}}