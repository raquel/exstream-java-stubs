/*
 * Exstream Design
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.DataResponseLinkDTO;
import org.openapitools.client.model.GenericResponse;
import org.openapitools.client.model.LinkDTO;
import org.openapitools.client.model.ListResponseLinkDTO;
import org.openapitools.client.model.MultipleLinksBody;
import java.time.OffsetDateTime;
import org.openapitools.client.model.PageResponseLinkDTO;
import org.openapitools.client.model.PageResponseResourceVersion;
import org.openapitools.client.model.ResourceCategory;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LinksControllerApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public LinksControllerApi() {
        this(Configuration.getDefaultApiClient());
    }

    public LinksControllerApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createLink
     * @param domain  (required)
     * @param linkDTO  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createLinkCall(String domain, LinkDTO linkDTO, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = linkDTO;

        // create path and map variables
        String localVarPath = "/api/v1/links/{domain}"
            .replace("{" + "domain" + "}", localVarApiClient.escapeString(domain.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createLinkValidateBeforeCall(String domain, LinkDTO linkDTO, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'domain' is set
        if (domain == null) {
            throw new ApiException("Missing the required parameter 'domain' when calling createLink(Async)");
        }

        // verify the required parameter 'linkDTO' is set
        if (linkDTO == null) {
            throw new ApiException("Missing the required parameter 'linkDTO' when calling createLink(Async)");
        }

        return createLinkCall(domain, linkDTO, _callback);

    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param linkDTO  (required)
     * @return DataResponseLinkDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public DataResponseLinkDTO createLink(String domain, LinkDTO linkDTO) throws ApiException {
        ApiResponse<DataResponseLinkDTO> localVarResp = createLinkWithHttpInfo(domain, linkDTO);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param linkDTO  (required)
     * @return ApiResponse&lt;DataResponseLinkDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DataResponseLinkDTO> createLinkWithHttpInfo(String domain, LinkDTO linkDTO) throws ApiException {
        okhttp3.Call localVarCall = createLinkValidateBeforeCall(domain, linkDTO, null);
        Type localVarReturnType = new TypeToken<DataResponseLinkDTO>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param domain  (required)
     * @param linkDTO  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createLinkAsync(String domain, LinkDTO linkDTO, final ApiCallback<DataResponseLinkDTO> _callback) throws ApiException {

        okhttp3.Call localVarCall = createLinkValidateBeforeCall(domain, linkDTO, _callback);
        Type localVarReturnType = new TypeToken<DataResponseLinkDTO>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for createLinks
     * @param domain  (required)
     * @param multipleLinksBody  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createLinksCall(String domain, MultipleLinksBody multipleLinksBody, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = multipleLinksBody;

        // create path and map variables
        String localVarPath = "/api/v1/links/{domain}/multiple"
            .replace("{" + "domain" + "}", localVarApiClient.escapeString(domain.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createLinksValidateBeforeCall(String domain, MultipleLinksBody multipleLinksBody, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'domain' is set
        if (domain == null) {
            throw new ApiException("Missing the required parameter 'domain' when calling createLinks(Async)");
        }

        // verify the required parameter 'multipleLinksBody' is set
        if (multipleLinksBody == null) {
            throw new ApiException("Missing the required parameter 'multipleLinksBody' when calling createLinks(Async)");
        }

        return createLinksCall(domain, multipleLinksBody, _callback);

    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param multipleLinksBody  (required)
     * @return ListResponseLinkDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListResponseLinkDTO createLinks(String domain, MultipleLinksBody multipleLinksBody) throws ApiException {
        ApiResponse<ListResponseLinkDTO> localVarResp = createLinksWithHttpInfo(domain, multipleLinksBody);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param multipleLinksBody  (required)
     * @return ApiResponse&lt;ListResponseLinkDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListResponseLinkDTO> createLinksWithHttpInfo(String domain, MultipleLinksBody multipleLinksBody) throws ApiException {
        okhttp3.Call localVarCall = createLinksValidateBeforeCall(domain, multipleLinksBody, null);
        Type localVarReturnType = new TypeToken<ListResponseLinkDTO>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param domain  (required)
     * @param multipleLinksBody  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createLinksAsync(String domain, MultipleLinksBody multipleLinksBody, final ApiCallback<ListResponseLinkDTO> _callback) throws ApiException {

        okhttp3.Call localVarCall = createLinksValidateBeforeCall(domain, multipleLinksBody, _callback);
        Type localVarReturnType = new TypeToken<ListResponseLinkDTO>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteLink
     * @param domain  (required)
     * @param linkDTO  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteLinkCall(String domain, LinkDTO linkDTO, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = linkDTO;

        // create path and map variables
        String localVarPath = "/api/v1/links/{domain}"
            .replace("{" + "domain" + "}", localVarApiClient.escapeString(domain.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteLinkValidateBeforeCall(String domain, LinkDTO linkDTO, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'domain' is set
        if (domain == null) {
            throw new ApiException("Missing the required parameter 'domain' when calling deleteLink(Async)");
        }

        // verify the required parameter 'linkDTO' is set
        if (linkDTO == null) {
            throw new ApiException("Missing the required parameter 'linkDTO' when calling deleteLink(Async)");
        }

        return deleteLinkCall(domain, linkDTO, _callback);

    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param linkDTO  (required)
     * @return GenericResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public GenericResponse deleteLink(String domain, LinkDTO linkDTO) throws ApiException {
        ApiResponse<GenericResponse> localVarResp = deleteLinkWithHttpInfo(domain, linkDTO);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param linkDTO  (required)
     * @return ApiResponse&lt;GenericResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GenericResponse> deleteLinkWithHttpInfo(String domain, LinkDTO linkDTO) throws ApiException {
        okhttp3.Call localVarCall = deleteLinkValidateBeforeCall(domain, linkDTO, null);
        Type localVarReturnType = new TypeToken<GenericResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param domain  (required)
     * @param linkDTO  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteLinkAsync(String domain, LinkDTO linkDTO, final ApiCallback<GenericResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteLinkValidateBeforeCall(domain, linkDTO, _callback);
        Type localVarReturnType = new TypeToken<GenericResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteLinks
     * @param domain  (required)
     * @param multipleLinksBody  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteLinksCall(String domain, MultipleLinksBody multipleLinksBody, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = multipleLinksBody;

        // create path and map variables
        String localVarPath = "/api/v1/links/{domain}/multiple"
            .replace("{" + "domain" + "}", localVarApiClient.escapeString(domain.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteLinksValidateBeforeCall(String domain, MultipleLinksBody multipleLinksBody, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'domain' is set
        if (domain == null) {
            throw new ApiException("Missing the required parameter 'domain' when calling deleteLinks(Async)");
        }

        // verify the required parameter 'multipleLinksBody' is set
        if (multipleLinksBody == null) {
            throw new ApiException("Missing the required parameter 'multipleLinksBody' when calling deleteLinks(Async)");
        }

        return deleteLinksCall(domain, multipleLinksBody, _callback);

    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param multipleLinksBody  (required)
     * @return GenericResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public GenericResponse deleteLinks(String domain, MultipleLinksBody multipleLinksBody) throws ApiException {
        ApiResponse<GenericResponse> localVarResp = deleteLinksWithHttpInfo(domain, multipleLinksBody);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param multipleLinksBody  (required)
     * @return ApiResponse&lt;GenericResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GenericResponse> deleteLinksWithHttpInfo(String domain, MultipleLinksBody multipleLinksBody) throws ApiException {
        okhttp3.Call localVarCall = deleteLinksValidateBeforeCall(domain, multipleLinksBody, null);
        Type localVarReturnType = new TypeToken<GenericResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param domain  (required)
     * @param multipleLinksBody  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteLinksAsync(String domain, MultipleLinksBody multipleLinksBody, final ApiCallback<GenericResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteLinksValidateBeforeCall(domain, multipleLinksBody, _callback);
        Type localVarReturnType = new TypeToken<GenericResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getLinks
     * @param domain  (required)
     * @param linkSubjectId  (optional)
     * @param linkSubjectVersion  (optional)
     * @param linkObjectId  (optional)
     * @param linkDepth Optionally specify the maximum depth for a recursive traversal of a link tree. (optional)
     * @param filterIds  (optional)
     * @param filterExcludedIds  (optional)
     * @param filterTypes  (optional)
     * @param filterExcludedTypes  (optional)
     * @param filterName  (optional)
     * @param filterDescription  (optional)
     * @param filterCreatedBy  (optional)
     * @param filterLastModifiedBy  (optional)
     * @param filterCreatedDateStart  (optional)
     * @param filterCreatedDateEnd  (optional)
     * @param filterLastModifiedDateStart  (optional)
     * @param filterLastModifiedDateEnd  (optional)
     * @param filterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param filterCaseSensitive  (optional)
     * @param filterWholeWord  (optional)
     * @param filterResourcePackId  (optional)
     * @param filterSystemResource  (optional)
     * @param filterHidden  (optional)
     * @param filterHasApprovedVersion  (optional)
     * @param filterStandardVariantId  (optional)
     * @param filterUseEffectiveDate  (optional)
     * @param filterEffectiveDate  (optional)
     * @param filterCategories  (optional)
     * @param filterCategoryObjects  (optional)
     * @param filterVfilterLastModifiedDateEnd  (optional)
     * @param filterDomainId only include resources in this domain (optional)
     * @param filterLatestVersion only include the latest version of objects (optional)
     * @param filterLocked  (optional)
     * @param filterStates  (optional)
     * @param filterOverrideIds  (optional)
     * @param filterOverrideStates  (optional)
     * @param vfilterIds  (optional)
     * @param vfilterExcludedIds  (optional)
     * @param vfilterTypes  (optional)
     * @param vfilterExcludedTypes  (optional)
     * @param vfilterName  (optional)
     * @param vfilterDescription  (optional)
     * @param vfilterCreatedBy  (optional)
     * @param vfilterLastModifiedBy  (optional)
     * @param vfilterCreatedDateStart  (optional)
     * @param vfilterCreatedDateEnd  (optional)
     * @param vfilterLastModifiedDateStart  (optional)
     * @param vfilterLastModifiedDateEnd  (optional)
     * @param vfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param vfilterCaseSensitive  (optional)
     * @param vfilterWholeWord  (optional)
     * @param vfilterResourcePackId  (optional)
     * @param vfilterSystemResource  (optional)
     * @param vfilterHidden  (optional)
     * @param vfilterHasApprovedVersion  (optional)
     * @param vfilterStandardVariantId  (optional)
     * @param vfilterUseEffectiveDate  (optional)
     * @param vfilterEffectiveDate  (optional)
     * @param vfilterCategories  (optional)
     * @param vfilterCategoryObjects  (optional)
     * @param vfilterVfilterLastModifiedDateEnd  (optional)
     * @param vfilterDomainId only include resources in this domain (optional)
     * @param vfilterLatestVersion only include the latest version of objects (optional)
     * @param vfilterLocked  (optional)
     * @param vfilterStates  (optional)
     * @param vfilterOverrideIds  (optional)
     * @param vfilterOverrideStates  (optional)
     * @param tfilterIds  (optional)
     * @param tfilterExcludedIds  (optional)
     * @param tfilterTypes  (optional)
     * @param tfilterExcludedTypes  (optional)
     * @param tfilterName  (optional)
     * @param tfilterDescription  (optional)
     * @param tfilterCreatedBy  (optional)
     * @param tfilterLastModifiedBy  (optional)
     * @param tfilterCreatedDateStart  (optional)
     * @param tfilterCreatedDateEnd  (optional)
     * @param tfilterLastModifiedDateStart  (optional)
     * @param tfilterLastModifiedDateEnd  (optional)
     * @param tfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param tfilterCaseSensitive  (optional)
     * @param tfilterWholeWord  (optional)
     * @param tfilterResourcePackId  (optional)
     * @param tfilterSystemResource  (optional)
     * @param tfilterHidden  (optional)
     * @param tfilterHasApprovedVersion  (optional)
     * @param tfilterStandardVariantId  (optional)
     * @param tfilterUseEffectiveDate  (optional)
     * @param tfilterEffectiveDate  (optional)
     * @param tfilterCategories  (optional)
     * @param tfilterCategoryObjects  (optional)
     * @param tfilterVfilterLastModifiedDateEnd  (optional)
     * @param tfilterDomainId only include resources in this domain (optional)
     * @param tfilterLatestVersion only include the latest version of objects (optional)
     * @param tfilterLocked  (optional)
     * @param tfilterStates  (optional)
     * @param tfilterOverrideIds  (optional)
     * @param tfilterOverrideStates  (optional)
     * @param rfilterIds  (optional)
     * @param rfilterExcludedIds  (optional)
     * @param rfilterTypes  (optional)
     * @param rfilterExcludedTypes  (optional)
     * @param rfilterName  (optional)
     * @param rfilterDescription  (optional)
     * @param rfilterCreatedBy  (optional)
     * @param rfilterLastModifiedBy  (optional)
     * @param rfilterCreatedDateStart  (optional)
     * @param rfilterCreatedDateEnd  (optional)
     * @param rfilterLastModifiedDateStart  (optional)
     * @param rfilterLastModifiedDateEnd  (optional)
     * @param rfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param rfilterCaseSensitive  (optional)
     * @param rfilterWholeWord  (optional)
     * @param rfilterResourcePackId  (optional)
     * @param rfilterSystemResource  (optional)
     * @param rfilterHidden  (optional)
     * @param rfilterHasApprovedVersion  (optional)
     * @param rfilterStandardVariantId  (optional)
     * @param rfilterUseEffectiveDate  (optional)
     * @param rfilterEffectiveDate  (optional)
     * @param rfilterCategories  (optional)
     * @param rfilterCategoryObjects  (optional)
     * @param rfilterVfilterLastModifiedDateEnd  (optional)
     * @param rfilterDomainId only include resources in this domain (optional)
     * @param rfilterLatestVersion only include the latest version of objects (optional)
     * @param rfilterLocked  (optional)
     * @param rfilterStates  (optional)
     * @param rfilterOverrideIds  (optional)
     * @param rfilterOverrideStates  (optional)
     * @param useEffectiveDate  (optional)
     * @param effectiveDate  (optional)
     * @param offset For pagination, fetch entities after this many (optional)
     * @param count For pagination, the number of entities per page (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getLinksCall(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/links/{domain}"
            .replace("{" + "domain" + "}", localVarApiClient.escapeString(domain.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (linkSubjectId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linkSubjectId", linkSubjectId));
        }

        if (linkSubjectVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linkSubjectVersion", linkSubjectVersion));
        }

        if (linkObjectId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linkObjectId", linkObjectId));
        }

        if (linkDepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linkDepth", linkDepth));
        }

        if (filterIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.ids", filterIds));
        }

        if (filterExcludedIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.excludedIds", filterExcludedIds));
        }

        if (filterTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.types", filterTypes));
        }

        if (filterExcludedTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.excludedTypes", filterExcludedTypes));
        }

        if (filterName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.name", filterName));
        }

        if (filterDescription != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.description", filterDescription));
        }

        if (filterCreatedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.createdBy", filterCreatedBy));
        }

        if (filterLastModifiedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.lastModifiedBy", filterLastModifiedBy));
        }

        if (filterCreatedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.createdDateStart", filterCreatedDateStart));
        }

        if (filterCreatedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.createdDateEnd", filterCreatedDateEnd));
        }

        if (filterLastModifiedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.lastModifiedDateStart", filterLastModifiedDateStart));
        }

        if (filterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.lastModifiedDateEnd", filterLastModifiedDateEnd));
        }

        if (filterSearchString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.searchString", filterSearchString));
        }

        if (filterCaseSensitive != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.caseSensitive", filterCaseSensitive));
        }

        if (filterWholeWord != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.wholeWord", filterWholeWord));
        }

        if (filterResourcePackId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.resourcePackId", filterResourcePackId));
        }

        if (filterSystemResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.systemResource", filterSystemResource));
        }

        if (filterHidden != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.hidden", filterHidden));
        }

        if (filterHasApprovedVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.hasApprovedVersion", filterHasApprovedVersion));
        }

        if (filterStandardVariantId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.standardVariantId", filterStandardVariantId));
        }

        if (filterUseEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.useEffectiveDate", filterUseEffectiveDate));
        }

        if (filterEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.effectiveDate", filterEffectiveDate));
        }

        if (filterCategories != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.categories", filterCategories));
        }

        if (filterCategoryObjects != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.categoryObjects", filterCategoryObjects));
        }

        if (filterVfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.vfilter_lastModifiedDateEnd", filterVfilterLastModifiedDateEnd));
        }

        if (filterDomainId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.domainId", filterDomainId));
        }

        if (filterLatestVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.latestVersion", filterLatestVersion));
        }

        if (filterLocked != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.locked", filterLocked));
        }

        if (filterStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.states", filterStates));
        }

        if (filterOverrideIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.overrideIds", filterOverrideIds));
        }

        if (filterOverrideStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.overrideStates", filterOverrideStates));
        }

        if (vfilterIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.ids", vfilterIds));
        }

        if (vfilterExcludedIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.excludedIds", vfilterExcludedIds));
        }

        if (vfilterTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.types", vfilterTypes));
        }

        if (vfilterExcludedTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.excludedTypes", vfilterExcludedTypes));
        }

        if (vfilterName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.name", vfilterName));
        }

        if (vfilterDescription != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.description", vfilterDescription));
        }

        if (vfilterCreatedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.createdBy", vfilterCreatedBy));
        }

        if (vfilterLastModifiedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.lastModifiedBy", vfilterLastModifiedBy));
        }

        if (vfilterCreatedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.createdDateStart", vfilterCreatedDateStart));
        }

        if (vfilterCreatedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.createdDateEnd", vfilterCreatedDateEnd));
        }

        if (vfilterLastModifiedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.lastModifiedDateStart", vfilterLastModifiedDateStart));
        }

        if (vfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.lastModifiedDateEnd", vfilterLastModifiedDateEnd));
        }

        if (vfilterSearchString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.searchString", vfilterSearchString));
        }

        if (vfilterCaseSensitive != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.caseSensitive", vfilterCaseSensitive));
        }

        if (vfilterWholeWord != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.wholeWord", vfilterWholeWord));
        }

        if (vfilterResourcePackId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.resourcePackId", vfilterResourcePackId));
        }

        if (vfilterSystemResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.systemResource", vfilterSystemResource));
        }

        if (vfilterHidden != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.hidden", vfilterHidden));
        }

        if (vfilterHasApprovedVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.hasApprovedVersion", vfilterHasApprovedVersion));
        }

        if (vfilterStandardVariantId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.standardVariantId", vfilterStandardVariantId));
        }

        if (vfilterUseEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.useEffectiveDate", vfilterUseEffectiveDate));
        }

        if (vfilterEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.effectiveDate", vfilterEffectiveDate));
        }

        if (vfilterCategories != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.categories", vfilterCategories));
        }

        if (vfilterCategoryObjects != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.categoryObjects", vfilterCategoryObjects));
        }

        if (vfilterVfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.vfilter_lastModifiedDateEnd", vfilterVfilterLastModifiedDateEnd));
        }

        if (vfilterDomainId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.domainId", vfilterDomainId));
        }

        if (vfilterLatestVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.latestVersion", vfilterLatestVersion));
        }

        if (vfilterLocked != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.locked", vfilterLocked));
        }

        if (vfilterStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.states", vfilterStates));
        }

        if (vfilterOverrideIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.overrideIds", vfilterOverrideIds));
        }

        if (vfilterOverrideStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.overrideStates", vfilterOverrideStates));
        }

        if (tfilterIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.ids", tfilterIds));
        }

        if (tfilterExcludedIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.excludedIds", tfilterExcludedIds));
        }

        if (tfilterTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.types", tfilterTypes));
        }

        if (tfilterExcludedTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.excludedTypes", tfilterExcludedTypes));
        }

        if (tfilterName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.name", tfilterName));
        }

        if (tfilterDescription != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.description", tfilterDescription));
        }

        if (tfilterCreatedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.createdBy", tfilterCreatedBy));
        }

        if (tfilterLastModifiedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.lastModifiedBy", tfilterLastModifiedBy));
        }

        if (tfilterCreatedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.createdDateStart", tfilterCreatedDateStart));
        }

        if (tfilterCreatedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.createdDateEnd", tfilterCreatedDateEnd));
        }

        if (tfilterLastModifiedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.lastModifiedDateStart", tfilterLastModifiedDateStart));
        }

        if (tfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.lastModifiedDateEnd", tfilterLastModifiedDateEnd));
        }

        if (tfilterSearchString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.searchString", tfilterSearchString));
        }

        if (tfilterCaseSensitive != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.caseSensitive", tfilterCaseSensitive));
        }

        if (tfilterWholeWord != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.wholeWord", tfilterWholeWord));
        }

        if (tfilterResourcePackId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.resourcePackId", tfilterResourcePackId));
        }

        if (tfilterSystemResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.systemResource", tfilterSystemResource));
        }

        if (tfilterHidden != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.hidden", tfilterHidden));
        }

        if (tfilterHasApprovedVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.hasApprovedVersion", tfilterHasApprovedVersion));
        }

        if (tfilterStandardVariantId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.standardVariantId", tfilterStandardVariantId));
        }

        if (tfilterUseEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.useEffectiveDate", tfilterUseEffectiveDate));
        }

        if (tfilterEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.effectiveDate", tfilterEffectiveDate));
        }

        if (tfilterCategories != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.categories", tfilterCategories));
        }

        if (tfilterCategoryObjects != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.categoryObjects", tfilterCategoryObjects));
        }

        if (tfilterVfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.vfilter_lastModifiedDateEnd", tfilterVfilterLastModifiedDateEnd));
        }

        if (tfilterDomainId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.domainId", tfilterDomainId));
        }

        if (tfilterLatestVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.latestVersion", tfilterLatestVersion));
        }

        if (tfilterLocked != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.locked", tfilterLocked));
        }

        if (tfilterStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.states", tfilterStates));
        }

        if (tfilterOverrideIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.overrideIds", tfilterOverrideIds));
        }

        if (tfilterOverrideStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.overrideStates", tfilterOverrideStates));
        }

        if (rfilterIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.ids", rfilterIds));
        }

        if (rfilterExcludedIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.excludedIds", rfilterExcludedIds));
        }

        if (rfilterTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.types", rfilterTypes));
        }

        if (rfilterExcludedTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.excludedTypes", rfilterExcludedTypes));
        }

        if (rfilterName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.name", rfilterName));
        }

        if (rfilterDescription != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.description", rfilterDescription));
        }

        if (rfilterCreatedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.createdBy", rfilterCreatedBy));
        }

        if (rfilterLastModifiedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.lastModifiedBy", rfilterLastModifiedBy));
        }

        if (rfilterCreatedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.createdDateStart", rfilterCreatedDateStart));
        }

        if (rfilterCreatedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.createdDateEnd", rfilterCreatedDateEnd));
        }

        if (rfilterLastModifiedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.lastModifiedDateStart", rfilterLastModifiedDateStart));
        }

        if (rfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.lastModifiedDateEnd", rfilterLastModifiedDateEnd));
        }

        if (rfilterSearchString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.searchString", rfilterSearchString));
        }

        if (rfilterCaseSensitive != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.caseSensitive", rfilterCaseSensitive));
        }

        if (rfilterWholeWord != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.wholeWord", rfilterWholeWord));
        }

        if (rfilterResourcePackId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.resourcePackId", rfilterResourcePackId));
        }

        if (rfilterSystemResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.systemResource", rfilterSystemResource));
        }

        if (rfilterHidden != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.hidden", rfilterHidden));
        }

        if (rfilterHasApprovedVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.hasApprovedVersion", rfilterHasApprovedVersion));
        }

        if (rfilterStandardVariantId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.standardVariantId", rfilterStandardVariantId));
        }

        if (rfilterUseEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.useEffectiveDate", rfilterUseEffectiveDate));
        }

        if (rfilterEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.effectiveDate", rfilterEffectiveDate));
        }

        if (rfilterCategories != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.categories", rfilterCategories));
        }

        if (rfilterCategoryObjects != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.categoryObjects", rfilterCategoryObjects));
        }

        if (rfilterVfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.vfilter_lastModifiedDateEnd", rfilterVfilterLastModifiedDateEnd));
        }

        if (rfilterDomainId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.domainId", rfilterDomainId));
        }

        if (rfilterLatestVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.latestVersion", rfilterLatestVersion));
        }

        if (rfilterLocked != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.locked", rfilterLocked));
        }

        if (rfilterStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.states", rfilterStates));
        }

        if (rfilterOverrideIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.overrideIds", rfilterOverrideIds));
        }

        if (rfilterOverrideStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.overrideStates", rfilterOverrideStates));
        }

        if (useEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("useEffectiveDate", useEffectiveDate));
        }

        if (effectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("effectiveDate", effectiveDate));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getLinksValidateBeforeCall(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'domain' is set
        if (domain == null) {
            throw new ApiException("Missing the required parameter 'domain' when calling getLinks(Async)");
        }

        return getLinksCall(domain, linkSubjectId, linkSubjectVersion, linkObjectId, linkDepth, filterIds, filterExcludedIds, filterTypes, filterExcludedTypes, filterName, filterDescription, filterCreatedBy, filterLastModifiedBy, filterCreatedDateStart, filterCreatedDateEnd, filterLastModifiedDateStart, filterLastModifiedDateEnd, filterSearchString, filterCaseSensitive, filterWholeWord, filterResourcePackId, filterSystemResource, filterHidden, filterHasApprovedVersion, filterStandardVariantId, filterUseEffectiveDate, filterEffectiveDate, filterCategories, filterCategoryObjects, filterVfilterLastModifiedDateEnd, filterDomainId, filterLatestVersion, filterLocked, filterStates, filterOverrideIds, filterOverrideStates, vfilterIds, vfilterExcludedIds, vfilterTypes, vfilterExcludedTypes, vfilterName, vfilterDescription, vfilterCreatedBy, vfilterLastModifiedBy, vfilterCreatedDateStart, vfilterCreatedDateEnd, vfilterLastModifiedDateStart, vfilterLastModifiedDateEnd, vfilterSearchString, vfilterCaseSensitive, vfilterWholeWord, vfilterResourcePackId, vfilterSystemResource, vfilterHidden, vfilterHasApprovedVersion, vfilterStandardVariantId, vfilterUseEffectiveDate, vfilterEffectiveDate, vfilterCategories, vfilterCategoryObjects, vfilterVfilterLastModifiedDateEnd, vfilterDomainId, vfilterLatestVersion, vfilterLocked, vfilterStates, vfilterOverrideIds, vfilterOverrideStates, tfilterIds, tfilterExcludedIds, tfilterTypes, tfilterExcludedTypes, tfilterName, tfilterDescription, tfilterCreatedBy, tfilterLastModifiedBy, tfilterCreatedDateStart, tfilterCreatedDateEnd, tfilterLastModifiedDateStart, tfilterLastModifiedDateEnd, tfilterSearchString, tfilterCaseSensitive, tfilterWholeWord, tfilterResourcePackId, tfilterSystemResource, tfilterHidden, tfilterHasApprovedVersion, tfilterStandardVariantId, tfilterUseEffectiveDate, tfilterEffectiveDate, tfilterCategories, tfilterCategoryObjects, tfilterVfilterLastModifiedDateEnd, tfilterDomainId, tfilterLatestVersion, tfilterLocked, tfilterStates, tfilterOverrideIds, tfilterOverrideStates, rfilterIds, rfilterExcludedIds, rfilterTypes, rfilterExcludedTypes, rfilterName, rfilterDescription, rfilterCreatedBy, rfilterLastModifiedBy, rfilterCreatedDateStart, rfilterCreatedDateEnd, rfilterLastModifiedDateStart, rfilterLastModifiedDateEnd, rfilterSearchString, rfilterCaseSensitive, rfilterWholeWord, rfilterResourcePackId, rfilterSystemResource, rfilterHidden, rfilterHasApprovedVersion, rfilterStandardVariantId, rfilterUseEffectiveDate, rfilterEffectiveDate, rfilterCategories, rfilterCategoryObjects, rfilterVfilterLastModifiedDateEnd, rfilterDomainId, rfilterLatestVersion, rfilterLocked, rfilterStates, rfilterOverrideIds, rfilterOverrideStates, useEffectiveDate, effectiveDate, offset, count, _callback);

    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param linkSubjectId  (optional)
     * @param linkSubjectVersion  (optional)
     * @param linkObjectId  (optional)
     * @param linkDepth Optionally specify the maximum depth for a recursive traversal of a link tree. (optional)
     * @param filterIds  (optional)
     * @param filterExcludedIds  (optional)
     * @param filterTypes  (optional)
     * @param filterExcludedTypes  (optional)
     * @param filterName  (optional)
     * @param filterDescription  (optional)
     * @param filterCreatedBy  (optional)
     * @param filterLastModifiedBy  (optional)
     * @param filterCreatedDateStart  (optional)
     * @param filterCreatedDateEnd  (optional)
     * @param filterLastModifiedDateStart  (optional)
     * @param filterLastModifiedDateEnd  (optional)
     * @param filterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param filterCaseSensitive  (optional)
     * @param filterWholeWord  (optional)
     * @param filterResourcePackId  (optional)
     * @param filterSystemResource  (optional)
     * @param filterHidden  (optional)
     * @param filterHasApprovedVersion  (optional)
     * @param filterStandardVariantId  (optional)
     * @param filterUseEffectiveDate  (optional)
     * @param filterEffectiveDate  (optional)
     * @param filterCategories  (optional)
     * @param filterCategoryObjects  (optional)
     * @param filterVfilterLastModifiedDateEnd  (optional)
     * @param filterDomainId only include resources in this domain (optional)
     * @param filterLatestVersion only include the latest version of objects (optional)
     * @param filterLocked  (optional)
     * @param filterStates  (optional)
     * @param filterOverrideIds  (optional)
     * @param filterOverrideStates  (optional)
     * @param vfilterIds  (optional)
     * @param vfilterExcludedIds  (optional)
     * @param vfilterTypes  (optional)
     * @param vfilterExcludedTypes  (optional)
     * @param vfilterName  (optional)
     * @param vfilterDescription  (optional)
     * @param vfilterCreatedBy  (optional)
     * @param vfilterLastModifiedBy  (optional)
     * @param vfilterCreatedDateStart  (optional)
     * @param vfilterCreatedDateEnd  (optional)
     * @param vfilterLastModifiedDateStart  (optional)
     * @param vfilterLastModifiedDateEnd  (optional)
     * @param vfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param vfilterCaseSensitive  (optional)
     * @param vfilterWholeWord  (optional)
     * @param vfilterResourcePackId  (optional)
     * @param vfilterSystemResource  (optional)
     * @param vfilterHidden  (optional)
     * @param vfilterHasApprovedVersion  (optional)
     * @param vfilterStandardVariantId  (optional)
     * @param vfilterUseEffectiveDate  (optional)
     * @param vfilterEffectiveDate  (optional)
     * @param vfilterCategories  (optional)
     * @param vfilterCategoryObjects  (optional)
     * @param vfilterVfilterLastModifiedDateEnd  (optional)
     * @param vfilterDomainId only include resources in this domain (optional)
     * @param vfilterLatestVersion only include the latest version of objects (optional)
     * @param vfilterLocked  (optional)
     * @param vfilterStates  (optional)
     * @param vfilterOverrideIds  (optional)
     * @param vfilterOverrideStates  (optional)
     * @param tfilterIds  (optional)
     * @param tfilterExcludedIds  (optional)
     * @param tfilterTypes  (optional)
     * @param tfilterExcludedTypes  (optional)
     * @param tfilterName  (optional)
     * @param tfilterDescription  (optional)
     * @param tfilterCreatedBy  (optional)
     * @param tfilterLastModifiedBy  (optional)
     * @param tfilterCreatedDateStart  (optional)
     * @param tfilterCreatedDateEnd  (optional)
     * @param tfilterLastModifiedDateStart  (optional)
     * @param tfilterLastModifiedDateEnd  (optional)
     * @param tfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param tfilterCaseSensitive  (optional)
     * @param tfilterWholeWord  (optional)
     * @param tfilterResourcePackId  (optional)
     * @param tfilterSystemResource  (optional)
     * @param tfilterHidden  (optional)
     * @param tfilterHasApprovedVersion  (optional)
     * @param tfilterStandardVariantId  (optional)
     * @param tfilterUseEffectiveDate  (optional)
     * @param tfilterEffectiveDate  (optional)
     * @param tfilterCategories  (optional)
     * @param tfilterCategoryObjects  (optional)
     * @param tfilterVfilterLastModifiedDateEnd  (optional)
     * @param tfilterDomainId only include resources in this domain (optional)
     * @param tfilterLatestVersion only include the latest version of objects (optional)
     * @param tfilterLocked  (optional)
     * @param tfilterStates  (optional)
     * @param tfilterOverrideIds  (optional)
     * @param tfilterOverrideStates  (optional)
     * @param rfilterIds  (optional)
     * @param rfilterExcludedIds  (optional)
     * @param rfilterTypes  (optional)
     * @param rfilterExcludedTypes  (optional)
     * @param rfilterName  (optional)
     * @param rfilterDescription  (optional)
     * @param rfilterCreatedBy  (optional)
     * @param rfilterLastModifiedBy  (optional)
     * @param rfilterCreatedDateStart  (optional)
     * @param rfilterCreatedDateEnd  (optional)
     * @param rfilterLastModifiedDateStart  (optional)
     * @param rfilterLastModifiedDateEnd  (optional)
     * @param rfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param rfilterCaseSensitive  (optional)
     * @param rfilterWholeWord  (optional)
     * @param rfilterResourcePackId  (optional)
     * @param rfilterSystemResource  (optional)
     * @param rfilterHidden  (optional)
     * @param rfilterHasApprovedVersion  (optional)
     * @param rfilterStandardVariantId  (optional)
     * @param rfilterUseEffectiveDate  (optional)
     * @param rfilterEffectiveDate  (optional)
     * @param rfilterCategories  (optional)
     * @param rfilterCategoryObjects  (optional)
     * @param rfilterVfilterLastModifiedDateEnd  (optional)
     * @param rfilterDomainId only include resources in this domain (optional)
     * @param rfilterLatestVersion only include the latest version of objects (optional)
     * @param rfilterLocked  (optional)
     * @param rfilterStates  (optional)
     * @param rfilterOverrideIds  (optional)
     * @param rfilterOverrideStates  (optional)
     * @param useEffectiveDate  (optional)
     * @param effectiveDate  (optional)
     * @param offset For pagination, fetch entities after this many (optional)
     * @param count For pagination, the number of entities per page (optional)
     * @return PageResponseLinkDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public PageResponseLinkDTO getLinks(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count) throws ApiException {
        ApiResponse<PageResponseLinkDTO> localVarResp = getLinksWithHttpInfo(domain, linkSubjectId, linkSubjectVersion, linkObjectId, linkDepth, filterIds, filterExcludedIds, filterTypes, filterExcludedTypes, filterName, filterDescription, filterCreatedBy, filterLastModifiedBy, filterCreatedDateStart, filterCreatedDateEnd, filterLastModifiedDateStart, filterLastModifiedDateEnd, filterSearchString, filterCaseSensitive, filterWholeWord, filterResourcePackId, filterSystemResource, filterHidden, filterHasApprovedVersion, filterStandardVariantId, filterUseEffectiveDate, filterEffectiveDate, filterCategories, filterCategoryObjects, filterVfilterLastModifiedDateEnd, filterDomainId, filterLatestVersion, filterLocked, filterStates, filterOverrideIds, filterOverrideStates, vfilterIds, vfilterExcludedIds, vfilterTypes, vfilterExcludedTypes, vfilterName, vfilterDescription, vfilterCreatedBy, vfilterLastModifiedBy, vfilterCreatedDateStart, vfilterCreatedDateEnd, vfilterLastModifiedDateStart, vfilterLastModifiedDateEnd, vfilterSearchString, vfilterCaseSensitive, vfilterWholeWord, vfilterResourcePackId, vfilterSystemResource, vfilterHidden, vfilterHasApprovedVersion, vfilterStandardVariantId, vfilterUseEffectiveDate, vfilterEffectiveDate, vfilterCategories, vfilterCategoryObjects, vfilterVfilterLastModifiedDateEnd, vfilterDomainId, vfilterLatestVersion, vfilterLocked, vfilterStates, vfilterOverrideIds, vfilterOverrideStates, tfilterIds, tfilterExcludedIds, tfilterTypes, tfilterExcludedTypes, tfilterName, tfilterDescription, tfilterCreatedBy, tfilterLastModifiedBy, tfilterCreatedDateStart, tfilterCreatedDateEnd, tfilterLastModifiedDateStart, tfilterLastModifiedDateEnd, tfilterSearchString, tfilterCaseSensitive, tfilterWholeWord, tfilterResourcePackId, tfilterSystemResource, tfilterHidden, tfilterHasApprovedVersion, tfilterStandardVariantId, tfilterUseEffectiveDate, tfilterEffectiveDate, tfilterCategories, tfilterCategoryObjects, tfilterVfilterLastModifiedDateEnd, tfilterDomainId, tfilterLatestVersion, tfilterLocked, tfilterStates, tfilterOverrideIds, tfilterOverrideStates, rfilterIds, rfilterExcludedIds, rfilterTypes, rfilterExcludedTypes, rfilterName, rfilterDescription, rfilterCreatedBy, rfilterLastModifiedBy, rfilterCreatedDateStart, rfilterCreatedDateEnd, rfilterLastModifiedDateStart, rfilterLastModifiedDateEnd, rfilterSearchString, rfilterCaseSensitive, rfilterWholeWord, rfilterResourcePackId, rfilterSystemResource, rfilterHidden, rfilterHasApprovedVersion, rfilterStandardVariantId, rfilterUseEffectiveDate, rfilterEffectiveDate, rfilterCategories, rfilterCategoryObjects, rfilterVfilterLastModifiedDateEnd, rfilterDomainId, rfilterLatestVersion, rfilterLocked, rfilterStates, rfilterOverrideIds, rfilterOverrideStates, useEffectiveDate, effectiveDate, offset, count);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param linkSubjectId  (optional)
     * @param linkSubjectVersion  (optional)
     * @param linkObjectId  (optional)
     * @param linkDepth Optionally specify the maximum depth for a recursive traversal of a link tree. (optional)
     * @param filterIds  (optional)
     * @param filterExcludedIds  (optional)
     * @param filterTypes  (optional)
     * @param filterExcludedTypes  (optional)
     * @param filterName  (optional)
     * @param filterDescription  (optional)
     * @param filterCreatedBy  (optional)
     * @param filterLastModifiedBy  (optional)
     * @param filterCreatedDateStart  (optional)
     * @param filterCreatedDateEnd  (optional)
     * @param filterLastModifiedDateStart  (optional)
     * @param filterLastModifiedDateEnd  (optional)
     * @param filterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param filterCaseSensitive  (optional)
     * @param filterWholeWord  (optional)
     * @param filterResourcePackId  (optional)
     * @param filterSystemResource  (optional)
     * @param filterHidden  (optional)
     * @param filterHasApprovedVersion  (optional)
     * @param filterStandardVariantId  (optional)
     * @param filterUseEffectiveDate  (optional)
     * @param filterEffectiveDate  (optional)
     * @param filterCategories  (optional)
     * @param filterCategoryObjects  (optional)
     * @param filterVfilterLastModifiedDateEnd  (optional)
     * @param filterDomainId only include resources in this domain (optional)
     * @param filterLatestVersion only include the latest version of objects (optional)
     * @param filterLocked  (optional)
     * @param filterStates  (optional)
     * @param filterOverrideIds  (optional)
     * @param filterOverrideStates  (optional)
     * @param vfilterIds  (optional)
     * @param vfilterExcludedIds  (optional)
     * @param vfilterTypes  (optional)
     * @param vfilterExcludedTypes  (optional)
     * @param vfilterName  (optional)
     * @param vfilterDescription  (optional)
     * @param vfilterCreatedBy  (optional)
     * @param vfilterLastModifiedBy  (optional)
     * @param vfilterCreatedDateStart  (optional)
     * @param vfilterCreatedDateEnd  (optional)
     * @param vfilterLastModifiedDateStart  (optional)
     * @param vfilterLastModifiedDateEnd  (optional)
     * @param vfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param vfilterCaseSensitive  (optional)
     * @param vfilterWholeWord  (optional)
     * @param vfilterResourcePackId  (optional)
     * @param vfilterSystemResource  (optional)
     * @param vfilterHidden  (optional)
     * @param vfilterHasApprovedVersion  (optional)
     * @param vfilterStandardVariantId  (optional)
     * @param vfilterUseEffectiveDate  (optional)
     * @param vfilterEffectiveDate  (optional)
     * @param vfilterCategories  (optional)
     * @param vfilterCategoryObjects  (optional)
     * @param vfilterVfilterLastModifiedDateEnd  (optional)
     * @param vfilterDomainId only include resources in this domain (optional)
     * @param vfilterLatestVersion only include the latest version of objects (optional)
     * @param vfilterLocked  (optional)
     * @param vfilterStates  (optional)
     * @param vfilterOverrideIds  (optional)
     * @param vfilterOverrideStates  (optional)
     * @param tfilterIds  (optional)
     * @param tfilterExcludedIds  (optional)
     * @param tfilterTypes  (optional)
     * @param tfilterExcludedTypes  (optional)
     * @param tfilterName  (optional)
     * @param tfilterDescription  (optional)
     * @param tfilterCreatedBy  (optional)
     * @param tfilterLastModifiedBy  (optional)
     * @param tfilterCreatedDateStart  (optional)
     * @param tfilterCreatedDateEnd  (optional)
     * @param tfilterLastModifiedDateStart  (optional)
     * @param tfilterLastModifiedDateEnd  (optional)
     * @param tfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param tfilterCaseSensitive  (optional)
     * @param tfilterWholeWord  (optional)
     * @param tfilterResourcePackId  (optional)
     * @param tfilterSystemResource  (optional)
     * @param tfilterHidden  (optional)
     * @param tfilterHasApprovedVersion  (optional)
     * @param tfilterStandardVariantId  (optional)
     * @param tfilterUseEffectiveDate  (optional)
     * @param tfilterEffectiveDate  (optional)
     * @param tfilterCategories  (optional)
     * @param tfilterCategoryObjects  (optional)
     * @param tfilterVfilterLastModifiedDateEnd  (optional)
     * @param tfilterDomainId only include resources in this domain (optional)
     * @param tfilterLatestVersion only include the latest version of objects (optional)
     * @param tfilterLocked  (optional)
     * @param tfilterStates  (optional)
     * @param tfilterOverrideIds  (optional)
     * @param tfilterOverrideStates  (optional)
     * @param rfilterIds  (optional)
     * @param rfilterExcludedIds  (optional)
     * @param rfilterTypes  (optional)
     * @param rfilterExcludedTypes  (optional)
     * @param rfilterName  (optional)
     * @param rfilterDescription  (optional)
     * @param rfilterCreatedBy  (optional)
     * @param rfilterLastModifiedBy  (optional)
     * @param rfilterCreatedDateStart  (optional)
     * @param rfilterCreatedDateEnd  (optional)
     * @param rfilterLastModifiedDateStart  (optional)
     * @param rfilterLastModifiedDateEnd  (optional)
     * @param rfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param rfilterCaseSensitive  (optional)
     * @param rfilterWholeWord  (optional)
     * @param rfilterResourcePackId  (optional)
     * @param rfilterSystemResource  (optional)
     * @param rfilterHidden  (optional)
     * @param rfilterHasApprovedVersion  (optional)
     * @param rfilterStandardVariantId  (optional)
     * @param rfilterUseEffectiveDate  (optional)
     * @param rfilterEffectiveDate  (optional)
     * @param rfilterCategories  (optional)
     * @param rfilterCategoryObjects  (optional)
     * @param rfilterVfilterLastModifiedDateEnd  (optional)
     * @param rfilterDomainId only include resources in this domain (optional)
     * @param rfilterLatestVersion only include the latest version of objects (optional)
     * @param rfilterLocked  (optional)
     * @param rfilterStates  (optional)
     * @param rfilterOverrideIds  (optional)
     * @param rfilterOverrideStates  (optional)
     * @param useEffectiveDate  (optional)
     * @param effectiveDate  (optional)
     * @param offset For pagination, fetch entities after this many (optional)
     * @param count For pagination, the number of entities per page (optional)
     * @return ApiResponse&lt;PageResponseLinkDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageResponseLinkDTO> getLinksWithHttpInfo(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count) throws ApiException {
        okhttp3.Call localVarCall = getLinksValidateBeforeCall(domain, linkSubjectId, linkSubjectVersion, linkObjectId, linkDepth, filterIds, filterExcludedIds, filterTypes, filterExcludedTypes, filterName, filterDescription, filterCreatedBy, filterLastModifiedBy, filterCreatedDateStart, filterCreatedDateEnd, filterLastModifiedDateStart, filterLastModifiedDateEnd, filterSearchString, filterCaseSensitive, filterWholeWord, filterResourcePackId, filterSystemResource, filterHidden, filterHasApprovedVersion, filterStandardVariantId, filterUseEffectiveDate, filterEffectiveDate, filterCategories, filterCategoryObjects, filterVfilterLastModifiedDateEnd, filterDomainId, filterLatestVersion, filterLocked, filterStates, filterOverrideIds, filterOverrideStates, vfilterIds, vfilterExcludedIds, vfilterTypes, vfilterExcludedTypes, vfilterName, vfilterDescription, vfilterCreatedBy, vfilterLastModifiedBy, vfilterCreatedDateStart, vfilterCreatedDateEnd, vfilterLastModifiedDateStart, vfilterLastModifiedDateEnd, vfilterSearchString, vfilterCaseSensitive, vfilterWholeWord, vfilterResourcePackId, vfilterSystemResource, vfilterHidden, vfilterHasApprovedVersion, vfilterStandardVariantId, vfilterUseEffectiveDate, vfilterEffectiveDate, vfilterCategories, vfilterCategoryObjects, vfilterVfilterLastModifiedDateEnd, vfilterDomainId, vfilterLatestVersion, vfilterLocked, vfilterStates, vfilterOverrideIds, vfilterOverrideStates, tfilterIds, tfilterExcludedIds, tfilterTypes, tfilterExcludedTypes, tfilterName, tfilterDescription, tfilterCreatedBy, tfilterLastModifiedBy, tfilterCreatedDateStart, tfilterCreatedDateEnd, tfilterLastModifiedDateStart, tfilterLastModifiedDateEnd, tfilterSearchString, tfilterCaseSensitive, tfilterWholeWord, tfilterResourcePackId, tfilterSystemResource, tfilterHidden, tfilterHasApprovedVersion, tfilterStandardVariantId, tfilterUseEffectiveDate, tfilterEffectiveDate, tfilterCategories, tfilterCategoryObjects, tfilterVfilterLastModifiedDateEnd, tfilterDomainId, tfilterLatestVersion, tfilterLocked, tfilterStates, tfilterOverrideIds, tfilterOverrideStates, rfilterIds, rfilterExcludedIds, rfilterTypes, rfilterExcludedTypes, rfilterName, rfilterDescription, rfilterCreatedBy, rfilterLastModifiedBy, rfilterCreatedDateStart, rfilterCreatedDateEnd, rfilterLastModifiedDateStart, rfilterLastModifiedDateEnd, rfilterSearchString, rfilterCaseSensitive, rfilterWholeWord, rfilterResourcePackId, rfilterSystemResource, rfilterHidden, rfilterHasApprovedVersion, rfilterStandardVariantId, rfilterUseEffectiveDate, rfilterEffectiveDate, rfilterCategories, rfilterCategoryObjects, rfilterVfilterLastModifiedDateEnd, rfilterDomainId, rfilterLatestVersion, rfilterLocked, rfilterStates, rfilterOverrideIds, rfilterOverrideStates, useEffectiveDate, effectiveDate, offset, count, null);
        Type localVarReturnType = new TypeToken<PageResponseLinkDTO>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param domain  (required)
     * @param linkSubjectId  (optional)
     * @param linkSubjectVersion  (optional)
     * @param linkObjectId  (optional)
     * @param linkDepth Optionally specify the maximum depth for a recursive traversal of a link tree. (optional)
     * @param filterIds  (optional)
     * @param filterExcludedIds  (optional)
     * @param filterTypes  (optional)
     * @param filterExcludedTypes  (optional)
     * @param filterName  (optional)
     * @param filterDescription  (optional)
     * @param filterCreatedBy  (optional)
     * @param filterLastModifiedBy  (optional)
     * @param filterCreatedDateStart  (optional)
     * @param filterCreatedDateEnd  (optional)
     * @param filterLastModifiedDateStart  (optional)
     * @param filterLastModifiedDateEnd  (optional)
     * @param filterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param filterCaseSensitive  (optional)
     * @param filterWholeWord  (optional)
     * @param filterResourcePackId  (optional)
     * @param filterSystemResource  (optional)
     * @param filterHidden  (optional)
     * @param filterHasApprovedVersion  (optional)
     * @param filterStandardVariantId  (optional)
     * @param filterUseEffectiveDate  (optional)
     * @param filterEffectiveDate  (optional)
     * @param filterCategories  (optional)
     * @param filterCategoryObjects  (optional)
     * @param filterVfilterLastModifiedDateEnd  (optional)
     * @param filterDomainId only include resources in this domain (optional)
     * @param filterLatestVersion only include the latest version of objects (optional)
     * @param filterLocked  (optional)
     * @param filterStates  (optional)
     * @param filterOverrideIds  (optional)
     * @param filterOverrideStates  (optional)
     * @param vfilterIds  (optional)
     * @param vfilterExcludedIds  (optional)
     * @param vfilterTypes  (optional)
     * @param vfilterExcludedTypes  (optional)
     * @param vfilterName  (optional)
     * @param vfilterDescription  (optional)
     * @param vfilterCreatedBy  (optional)
     * @param vfilterLastModifiedBy  (optional)
     * @param vfilterCreatedDateStart  (optional)
     * @param vfilterCreatedDateEnd  (optional)
     * @param vfilterLastModifiedDateStart  (optional)
     * @param vfilterLastModifiedDateEnd  (optional)
     * @param vfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param vfilterCaseSensitive  (optional)
     * @param vfilterWholeWord  (optional)
     * @param vfilterResourcePackId  (optional)
     * @param vfilterSystemResource  (optional)
     * @param vfilterHidden  (optional)
     * @param vfilterHasApprovedVersion  (optional)
     * @param vfilterStandardVariantId  (optional)
     * @param vfilterUseEffectiveDate  (optional)
     * @param vfilterEffectiveDate  (optional)
     * @param vfilterCategories  (optional)
     * @param vfilterCategoryObjects  (optional)
     * @param vfilterVfilterLastModifiedDateEnd  (optional)
     * @param vfilterDomainId only include resources in this domain (optional)
     * @param vfilterLatestVersion only include the latest version of objects (optional)
     * @param vfilterLocked  (optional)
     * @param vfilterStates  (optional)
     * @param vfilterOverrideIds  (optional)
     * @param vfilterOverrideStates  (optional)
     * @param tfilterIds  (optional)
     * @param tfilterExcludedIds  (optional)
     * @param tfilterTypes  (optional)
     * @param tfilterExcludedTypes  (optional)
     * @param tfilterName  (optional)
     * @param tfilterDescription  (optional)
     * @param tfilterCreatedBy  (optional)
     * @param tfilterLastModifiedBy  (optional)
     * @param tfilterCreatedDateStart  (optional)
     * @param tfilterCreatedDateEnd  (optional)
     * @param tfilterLastModifiedDateStart  (optional)
     * @param tfilterLastModifiedDateEnd  (optional)
     * @param tfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param tfilterCaseSensitive  (optional)
     * @param tfilterWholeWord  (optional)
     * @param tfilterResourcePackId  (optional)
     * @param tfilterSystemResource  (optional)
     * @param tfilterHidden  (optional)
     * @param tfilterHasApprovedVersion  (optional)
     * @param tfilterStandardVariantId  (optional)
     * @param tfilterUseEffectiveDate  (optional)
     * @param tfilterEffectiveDate  (optional)
     * @param tfilterCategories  (optional)
     * @param tfilterCategoryObjects  (optional)
     * @param tfilterVfilterLastModifiedDateEnd  (optional)
     * @param tfilterDomainId only include resources in this domain (optional)
     * @param tfilterLatestVersion only include the latest version of objects (optional)
     * @param tfilterLocked  (optional)
     * @param tfilterStates  (optional)
     * @param tfilterOverrideIds  (optional)
     * @param tfilterOverrideStates  (optional)
     * @param rfilterIds  (optional)
     * @param rfilterExcludedIds  (optional)
     * @param rfilterTypes  (optional)
     * @param rfilterExcludedTypes  (optional)
     * @param rfilterName  (optional)
     * @param rfilterDescription  (optional)
     * @param rfilterCreatedBy  (optional)
     * @param rfilterLastModifiedBy  (optional)
     * @param rfilterCreatedDateStart  (optional)
     * @param rfilterCreatedDateEnd  (optional)
     * @param rfilterLastModifiedDateStart  (optional)
     * @param rfilterLastModifiedDateEnd  (optional)
     * @param rfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param rfilterCaseSensitive  (optional)
     * @param rfilterWholeWord  (optional)
     * @param rfilterResourcePackId  (optional)
     * @param rfilterSystemResource  (optional)
     * @param rfilterHidden  (optional)
     * @param rfilterHasApprovedVersion  (optional)
     * @param rfilterStandardVariantId  (optional)
     * @param rfilterUseEffectiveDate  (optional)
     * @param rfilterEffectiveDate  (optional)
     * @param rfilterCategories  (optional)
     * @param rfilterCategoryObjects  (optional)
     * @param rfilterVfilterLastModifiedDateEnd  (optional)
     * @param rfilterDomainId only include resources in this domain (optional)
     * @param rfilterLatestVersion only include the latest version of objects (optional)
     * @param rfilterLocked  (optional)
     * @param rfilterStates  (optional)
     * @param rfilterOverrideIds  (optional)
     * @param rfilterOverrideStates  (optional)
     * @param useEffectiveDate  (optional)
     * @param effectiveDate  (optional)
     * @param offset For pagination, fetch entities after this many (optional)
     * @param count For pagination, the number of entities per page (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getLinksAsync(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count, final ApiCallback<PageResponseLinkDTO> _callback) throws ApiException {

        okhttp3.Call localVarCall = getLinksValidateBeforeCall(domain, linkSubjectId, linkSubjectVersion, linkObjectId, linkDepth, filterIds, filterExcludedIds, filterTypes, filterExcludedTypes, filterName, filterDescription, filterCreatedBy, filterLastModifiedBy, filterCreatedDateStart, filterCreatedDateEnd, filterLastModifiedDateStart, filterLastModifiedDateEnd, filterSearchString, filterCaseSensitive, filterWholeWord, filterResourcePackId, filterSystemResource, filterHidden, filterHasApprovedVersion, filterStandardVariantId, filterUseEffectiveDate, filterEffectiveDate, filterCategories, filterCategoryObjects, filterVfilterLastModifiedDateEnd, filterDomainId, filterLatestVersion, filterLocked, filterStates, filterOverrideIds, filterOverrideStates, vfilterIds, vfilterExcludedIds, vfilterTypes, vfilterExcludedTypes, vfilterName, vfilterDescription, vfilterCreatedBy, vfilterLastModifiedBy, vfilterCreatedDateStart, vfilterCreatedDateEnd, vfilterLastModifiedDateStart, vfilterLastModifiedDateEnd, vfilterSearchString, vfilterCaseSensitive, vfilterWholeWord, vfilterResourcePackId, vfilterSystemResource, vfilterHidden, vfilterHasApprovedVersion, vfilterStandardVariantId, vfilterUseEffectiveDate, vfilterEffectiveDate, vfilterCategories, vfilterCategoryObjects, vfilterVfilterLastModifiedDateEnd, vfilterDomainId, vfilterLatestVersion, vfilterLocked, vfilterStates, vfilterOverrideIds, vfilterOverrideStates, tfilterIds, tfilterExcludedIds, tfilterTypes, tfilterExcludedTypes, tfilterName, tfilterDescription, tfilterCreatedBy, tfilterLastModifiedBy, tfilterCreatedDateStart, tfilterCreatedDateEnd, tfilterLastModifiedDateStart, tfilterLastModifiedDateEnd, tfilterSearchString, tfilterCaseSensitive, tfilterWholeWord, tfilterResourcePackId, tfilterSystemResource, tfilterHidden, tfilterHasApprovedVersion, tfilterStandardVariantId, tfilterUseEffectiveDate, tfilterEffectiveDate, tfilterCategories, tfilterCategoryObjects, tfilterVfilterLastModifiedDateEnd, tfilterDomainId, tfilterLatestVersion, tfilterLocked, tfilterStates, tfilterOverrideIds, tfilterOverrideStates, rfilterIds, rfilterExcludedIds, rfilterTypes, rfilterExcludedTypes, rfilterName, rfilterDescription, rfilterCreatedBy, rfilterLastModifiedBy, rfilterCreatedDateStart, rfilterCreatedDateEnd, rfilterLastModifiedDateStart, rfilterLastModifiedDateEnd, rfilterSearchString, rfilterCaseSensitive, rfilterWholeWord, rfilterResourcePackId, rfilterSystemResource, rfilterHidden, rfilterHasApprovedVersion, rfilterStandardVariantId, rfilterUseEffectiveDate, rfilterEffectiveDate, rfilterCategories, rfilterCategoryObjects, rfilterVfilterLastModifiedDateEnd, rfilterDomainId, rfilterLatestVersion, rfilterLocked, rfilterStates, rfilterOverrideIds, rfilterOverrideStates, useEffectiveDate, effectiveDate, offset, count, _callback);
        Type localVarReturnType = new TypeToken<PageResponseLinkDTO>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getResources1
     * @param domain  (required)
     * @param linkSubjectId  (optional)
     * @param linkSubjectVersion  (optional)
     * @param linkObjectId  (optional)
     * @param linkDepth Optionally specify the maximum depth for a recursive traversal of a link tree. (optional)
     * @param filterIds  (optional)
     * @param filterExcludedIds  (optional)
     * @param filterTypes  (optional)
     * @param filterExcludedTypes  (optional)
     * @param filterName  (optional)
     * @param filterDescription  (optional)
     * @param filterCreatedBy  (optional)
     * @param filterLastModifiedBy  (optional)
     * @param filterCreatedDateStart  (optional)
     * @param filterCreatedDateEnd  (optional)
     * @param filterLastModifiedDateStart  (optional)
     * @param filterLastModifiedDateEnd  (optional)
     * @param filterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param filterCaseSensitive  (optional)
     * @param filterWholeWord  (optional)
     * @param filterResourcePackId  (optional)
     * @param filterSystemResource  (optional)
     * @param filterHidden  (optional)
     * @param filterHasApprovedVersion  (optional)
     * @param filterStandardVariantId  (optional)
     * @param filterUseEffectiveDate  (optional)
     * @param filterEffectiveDate  (optional)
     * @param filterCategories  (optional)
     * @param filterCategoryObjects  (optional)
     * @param filterVfilterLastModifiedDateEnd  (optional)
     * @param filterDomainId only include resources in this domain (optional)
     * @param filterLatestVersion only include the latest version of objects (optional)
     * @param filterLocked  (optional)
     * @param filterStates  (optional)
     * @param filterOverrideIds  (optional)
     * @param filterOverrideStates  (optional)
     * @param vfilterIds  (optional)
     * @param vfilterExcludedIds  (optional)
     * @param vfilterTypes  (optional)
     * @param vfilterExcludedTypes  (optional)
     * @param vfilterName  (optional)
     * @param vfilterDescription  (optional)
     * @param vfilterCreatedBy  (optional)
     * @param vfilterLastModifiedBy  (optional)
     * @param vfilterCreatedDateStart  (optional)
     * @param vfilterCreatedDateEnd  (optional)
     * @param vfilterLastModifiedDateStart  (optional)
     * @param vfilterLastModifiedDateEnd  (optional)
     * @param vfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param vfilterCaseSensitive  (optional)
     * @param vfilterWholeWord  (optional)
     * @param vfilterResourcePackId  (optional)
     * @param vfilterSystemResource  (optional)
     * @param vfilterHidden  (optional)
     * @param vfilterHasApprovedVersion  (optional)
     * @param vfilterStandardVariantId  (optional)
     * @param vfilterUseEffectiveDate  (optional)
     * @param vfilterEffectiveDate  (optional)
     * @param vfilterCategories  (optional)
     * @param vfilterCategoryObjects  (optional)
     * @param vfilterVfilterLastModifiedDateEnd  (optional)
     * @param vfilterDomainId only include resources in this domain (optional)
     * @param vfilterLatestVersion only include the latest version of objects (optional)
     * @param vfilterLocked  (optional)
     * @param vfilterStates  (optional)
     * @param vfilterOverrideIds  (optional)
     * @param vfilterOverrideStates  (optional)
     * @param tfilterIds  (optional)
     * @param tfilterExcludedIds  (optional)
     * @param tfilterTypes  (optional)
     * @param tfilterExcludedTypes  (optional)
     * @param tfilterName  (optional)
     * @param tfilterDescription  (optional)
     * @param tfilterCreatedBy  (optional)
     * @param tfilterLastModifiedBy  (optional)
     * @param tfilterCreatedDateStart  (optional)
     * @param tfilterCreatedDateEnd  (optional)
     * @param tfilterLastModifiedDateStart  (optional)
     * @param tfilterLastModifiedDateEnd  (optional)
     * @param tfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param tfilterCaseSensitive  (optional)
     * @param tfilterWholeWord  (optional)
     * @param tfilterResourcePackId  (optional)
     * @param tfilterSystemResource  (optional)
     * @param tfilterHidden  (optional)
     * @param tfilterHasApprovedVersion  (optional)
     * @param tfilterStandardVariantId  (optional)
     * @param tfilterUseEffectiveDate  (optional)
     * @param tfilterEffectiveDate  (optional)
     * @param tfilterCategories  (optional)
     * @param tfilterCategoryObjects  (optional)
     * @param tfilterVfilterLastModifiedDateEnd  (optional)
     * @param tfilterDomainId only include resources in this domain (optional)
     * @param tfilterLatestVersion only include the latest version of objects (optional)
     * @param tfilterLocked  (optional)
     * @param tfilterStates  (optional)
     * @param tfilterOverrideIds  (optional)
     * @param tfilterOverrideStates  (optional)
     * @param rfilterIds  (optional)
     * @param rfilterExcludedIds  (optional)
     * @param rfilterTypes  (optional)
     * @param rfilterExcludedTypes  (optional)
     * @param rfilterName  (optional)
     * @param rfilterDescription  (optional)
     * @param rfilterCreatedBy  (optional)
     * @param rfilterLastModifiedBy  (optional)
     * @param rfilterCreatedDateStart  (optional)
     * @param rfilterCreatedDateEnd  (optional)
     * @param rfilterLastModifiedDateStart  (optional)
     * @param rfilterLastModifiedDateEnd  (optional)
     * @param rfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param rfilterCaseSensitive  (optional)
     * @param rfilterWholeWord  (optional)
     * @param rfilterResourcePackId  (optional)
     * @param rfilterSystemResource  (optional)
     * @param rfilterHidden  (optional)
     * @param rfilterHasApprovedVersion  (optional)
     * @param rfilterStandardVariantId  (optional)
     * @param rfilterUseEffectiveDate  (optional)
     * @param rfilterEffectiveDate  (optional)
     * @param rfilterCategories  (optional)
     * @param rfilterCategoryObjects  (optional)
     * @param rfilterVfilterLastModifiedDateEnd  (optional)
     * @param rfilterDomainId only include resources in this domain (optional)
     * @param rfilterLatestVersion only include the latest version of objects (optional)
     * @param rfilterLocked  (optional)
     * @param rfilterStates  (optional)
     * @param rfilterOverrideIds  (optional)
     * @param rfilterOverrideStates  (optional)
     * @param useEffectiveDate  (optional)
     * @param effectiveDate  (optional)
     * @param offset For pagination, fetch entities after this many (optional)
     * @param count For pagination, the number of entities per page (optional)
     * @param fetchApproval  (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getResources1Call(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count, Boolean fetchApproval, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/links/{domain}/resources"
            .replace("{" + "domain" + "}", localVarApiClient.escapeString(domain.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (linkSubjectId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linkSubjectId", linkSubjectId));
        }

        if (linkSubjectVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linkSubjectVersion", linkSubjectVersion));
        }

        if (linkObjectId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linkObjectId", linkObjectId));
        }

        if (linkDepth != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linkDepth", linkDepth));
        }

        if (filterIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.ids", filterIds));
        }

        if (filterExcludedIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.excludedIds", filterExcludedIds));
        }

        if (filterTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.types", filterTypes));
        }

        if (filterExcludedTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.excludedTypes", filterExcludedTypes));
        }

        if (filterName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.name", filterName));
        }

        if (filterDescription != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.description", filterDescription));
        }

        if (filterCreatedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.createdBy", filterCreatedBy));
        }

        if (filterLastModifiedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.lastModifiedBy", filterLastModifiedBy));
        }

        if (filterCreatedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.createdDateStart", filterCreatedDateStart));
        }

        if (filterCreatedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.createdDateEnd", filterCreatedDateEnd));
        }

        if (filterLastModifiedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.lastModifiedDateStart", filterLastModifiedDateStart));
        }

        if (filterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.lastModifiedDateEnd", filterLastModifiedDateEnd));
        }

        if (filterSearchString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.searchString", filterSearchString));
        }

        if (filterCaseSensitive != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.caseSensitive", filterCaseSensitive));
        }

        if (filterWholeWord != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.wholeWord", filterWholeWord));
        }

        if (filterResourcePackId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.resourcePackId", filterResourcePackId));
        }

        if (filterSystemResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.systemResource", filterSystemResource));
        }

        if (filterHidden != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.hidden", filterHidden));
        }

        if (filterHasApprovedVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.hasApprovedVersion", filterHasApprovedVersion));
        }

        if (filterStandardVariantId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.standardVariantId", filterStandardVariantId));
        }

        if (filterUseEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.useEffectiveDate", filterUseEffectiveDate));
        }

        if (filterEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.effectiveDate", filterEffectiveDate));
        }

        if (filterCategories != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.categories", filterCategories));
        }

        if (filterCategoryObjects != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.categoryObjects", filterCategoryObjects));
        }

        if (filterVfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.vfilter_lastModifiedDateEnd", filterVfilterLastModifiedDateEnd));
        }

        if (filterDomainId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.domainId", filterDomainId));
        }

        if (filterLatestVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.latestVersion", filterLatestVersion));
        }

        if (filterLocked != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter.locked", filterLocked));
        }

        if (filterStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.states", filterStates));
        }

        if (filterOverrideIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.overrideIds", filterOverrideIds));
        }

        if (filterOverrideStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "filter.overrideStates", filterOverrideStates));
        }

        if (vfilterIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.ids", vfilterIds));
        }

        if (vfilterExcludedIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.excludedIds", vfilterExcludedIds));
        }

        if (vfilterTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.types", vfilterTypes));
        }

        if (vfilterExcludedTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.excludedTypes", vfilterExcludedTypes));
        }

        if (vfilterName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.name", vfilterName));
        }

        if (vfilterDescription != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.description", vfilterDescription));
        }

        if (vfilterCreatedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.createdBy", vfilterCreatedBy));
        }

        if (vfilterLastModifiedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.lastModifiedBy", vfilterLastModifiedBy));
        }

        if (vfilterCreatedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.createdDateStart", vfilterCreatedDateStart));
        }

        if (vfilterCreatedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.createdDateEnd", vfilterCreatedDateEnd));
        }

        if (vfilterLastModifiedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.lastModifiedDateStart", vfilterLastModifiedDateStart));
        }

        if (vfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.lastModifiedDateEnd", vfilterLastModifiedDateEnd));
        }

        if (vfilterSearchString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.searchString", vfilterSearchString));
        }

        if (vfilterCaseSensitive != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.caseSensitive", vfilterCaseSensitive));
        }

        if (vfilterWholeWord != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.wholeWord", vfilterWholeWord));
        }

        if (vfilterResourcePackId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.resourcePackId", vfilterResourcePackId));
        }

        if (vfilterSystemResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.systemResource", vfilterSystemResource));
        }

        if (vfilterHidden != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.hidden", vfilterHidden));
        }

        if (vfilterHasApprovedVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.hasApprovedVersion", vfilterHasApprovedVersion));
        }

        if (vfilterStandardVariantId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.standardVariantId", vfilterStandardVariantId));
        }

        if (vfilterUseEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.useEffectiveDate", vfilterUseEffectiveDate));
        }

        if (vfilterEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.effectiveDate", vfilterEffectiveDate));
        }

        if (vfilterCategories != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.categories", vfilterCategories));
        }

        if (vfilterCategoryObjects != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.categoryObjects", vfilterCategoryObjects));
        }

        if (vfilterVfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.vfilter_lastModifiedDateEnd", vfilterVfilterLastModifiedDateEnd));
        }

        if (vfilterDomainId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.domainId", vfilterDomainId));
        }

        if (vfilterLatestVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.latestVersion", vfilterLatestVersion));
        }

        if (vfilterLocked != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vfilter.locked", vfilterLocked));
        }

        if (vfilterStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.states", vfilterStates));
        }

        if (vfilterOverrideIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.overrideIds", vfilterOverrideIds));
        }

        if (vfilterOverrideStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "vfilter.overrideStates", vfilterOverrideStates));
        }

        if (tfilterIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.ids", tfilterIds));
        }

        if (tfilterExcludedIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.excludedIds", tfilterExcludedIds));
        }

        if (tfilterTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.types", tfilterTypes));
        }

        if (tfilterExcludedTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.excludedTypes", tfilterExcludedTypes));
        }

        if (tfilterName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.name", tfilterName));
        }

        if (tfilterDescription != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.description", tfilterDescription));
        }

        if (tfilterCreatedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.createdBy", tfilterCreatedBy));
        }

        if (tfilterLastModifiedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.lastModifiedBy", tfilterLastModifiedBy));
        }

        if (tfilterCreatedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.createdDateStart", tfilterCreatedDateStart));
        }

        if (tfilterCreatedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.createdDateEnd", tfilterCreatedDateEnd));
        }

        if (tfilterLastModifiedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.lastModifiedDateStart", tfilterLastModifiedDateStart));
        }

        if (tfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.lastModifiedDateEnd", tfilterLastModifiedDateEnd));
        }

        if (tfilterSearchString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.searchString", tfilterSearchString));
        }

        if (tfilterCaseSensitive != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.caseSensitive", tfilterCaseSensitive));
        }

        if (tfilterWholeWord != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.wholeWord", tfilterWholeWord));
        }

        if (tfilterResourcePackId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.resourcePackId", tfilterResourcePackId));
        }

        if (tfilterSystemResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.systemResource", tfilterSystemResource));
        }

        if (tfilterHidden != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.hidden", tfilterHidden));
        }

        if (tfilterHasApprovedVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.hasApprovedVersion", tfilterHasApprovedVersion));
        }

        if (tfilterStandardVariantId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.standardVariantId", tfilterStandardVariantId));
        }

        if (tfilterUseEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.useEffectiveDate", tfilterUseEffectiveDate));
        }

        if (tfilterEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.effectiveDate", tfilterEffectiveDate));
        }

        if (tfilterCategories != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.categories", tfilterCategories));
        }

        if (tfilterCategoryObjects != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.categoryObjects", tfilterCategoryObjects));
        }

        if (tfilterVfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.vfilter_lastModifiedDateEnd", tfilterVfilterLastModifiedDateEnd));
        }

        if (tfilterDomainId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.domainId", tfilterDomainId));
        }

        if (tfilterLatestVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.latestVersion", tfilterLatestVersion));
        }

        if (tfilterLocked != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tfilter.locked", tfilterLocked));
        }

        if (tfilterStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.states", tfilterStates));
        }

        if (tfilterOverrideIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.overrideIds", tfilterOverrideIds));
        }

        if (tfilterOverrideStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "tfilter.overrideStates", tfilterOverrideStates));
        }

        if (rfilterIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.ids", rfilterIds));
        }

        if (rfilterExcludedIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.excludedIds", rfilterExcludedIds));
        }

        if (rfilterTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.types", rfilterTypes));
        }

        if (rfilterExcludedTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.excludedTypes", rfilterExcludedTypes));
        }

        if (rfilterName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.name", rfilterName));
        }

        if (rfilterDescription != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.description", rfilterDescription));
        }

        if (rfilterCreatedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.createdBy", rfilterCreatedBy));
        }

        if (rfilterLastModifiedBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.lastModifiedBy", rfilterLastModifiedBy));
        }

        if (rfilterCreatedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.createdDateStart", rfilterCreatedDateStart));
        }

        if (rfilterCreatedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.createdDateEnd", rfilterCreatedDateEnd));
        }

        if (rfilterLastModifiedDateStart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.lastModifiedDateStart", rfilterLastModifiedDateStart));
        }

        if (rfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.lastModifiedDateEnd", rfilterLastModifiedDateEnd));
        }

        if (rfilterSearchString != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.searchString", rfilterSearchString));
        }

        if (rfilterCaseSensitive != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.caseSensitive", rfilterCaseSensitive));
        }

        if (rfilterWholeWord != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.wholeWord", rfilterWholeWord));
        }

        if (rfilterResourcePackId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.resourcePackId", rfilterResourcePackId));
        }

        if (rfilterSystemResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.systemResource", rfilterSystemResource));
        }

        if (rfilterHidden != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.hidden", rfilterHidden));
        }

        if (rfilterHasApprovedVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.hasApprovedVersion", rfilterHasApprovedVersion));
        }

        if (rfilterStandardVariantId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.standardVariantId", rfilterStandardVariantId));
        }

        if (rfilterUseEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.useEffectiveDate", rfilterUseEffectiveDate));
        }

        if (rfilterEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.effectiveDate", rfilterEffectiveDate));
        }

        if (rfilterCategories != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.categories", rfilterCategories));
        }

        if (rfilterCategoryObjects != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.categoryObjects", rfilterCategoryObjects));
        }

        if (rfilterVfilterLastModifiedDateEnd != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.vfilter_lastModifiedDateEnd", rfilterVfilterLastModifiedDateEnd));
        }

        if (rfilterDomainId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.domainId", rfilterDomainId));
        }

        if (rfilterLatestVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.latestVersion", rfilterLatestVersion));
        }

        if (rfilterLocked != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("rfilter.locked", rfilterLocked));
        }

        if (rfilterStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.states", rfilterStates));
        }

        if (rfilterOverrideIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.overrideIds", rfilterOverrideIds));
        }

        if (rfilterOverrideStates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "rfilter.overrideStates", rfilterOverrideStates));
        }

        if (useEffectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("useEffectiveDate", useEffectiveDate));
        }

        if (effectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("effectiveDate", effectiveDate));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (count != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("count", count));
        }

        if (fetchApproval != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fetchApproval", fetchApproval));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getResources1ValidateBeforeCall(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count, Boolean fetchApproval, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'domain' is set
        if (domain == null) {
            throw new ApiException("Missing the required parameter 'domain' when calling getResources1(Async)");
        }

        return getResources1Call(domain, linkSubjectId, linkSubjectVersion, linkObjectId, linkDepth, filterIds, filterExcludedIds, filterTypes, filterExcludedTypes, filterName, filterDescription, filterCreatedBy, filterLastModifiedBy, filterCreatedDateStart, filterCreatedDateEnd, filterLastModifiedDateStart, filterLastModifiedDateEnd, filterSearchString, filterCaseSensitive, filterWholeWord, filterResourcePackId, filterSystemResource, filterHidden, filterHasApprovedVersion, filterStandardVariantId, filterUseEffectiveDate, filterEffectiveDate, filterCategories, filterCategoryObjects, filterVfilterLastModifiedDateEnd, filterDomainId, filterLatestVersion, filterLocked, filterStates, filterOverrideIds, filterOverrideStates, vfilterIds, vfilterExcludedIds, vfilterTypes, vfilterExcludedTypes, vfilterName, vfilterDescription, vfilterCreatedBy, vfilterLastModifiedBy, vfilterCreatedDateStart, vfilterCreatedDateEnd, vfilterLastModifiedDateStart, vfilterLastModifiedDateEnd, vfilterSearchString, vfilterCaseSensitive, vfilterWholeWord, vfilterResourcePackId, vfilterSystemResource, vfilterHidden, vfilterHasApprovedVersion, vfilterStandardVariantId, vfilterUseEffectiveDate, vfilterEffectiveDate, vfilterCategories, vfilterCategoryObjects, vfilterVfilterLastModifiedDateEnd, vfilterDomainId, vfilterLatestVersion, vfilterLocked, vfilterStates, vfilterOverrideIds, vfilterOverrideStates, tfilterIds, tfilterExcludedIds, tfilterTypes, tfilterExcludedTypes, tfilterName, tfilterDescription, tfilterCreatedBy, tfilterLastModifiedBy, tfilterCreatedDateStart, tfilterCreatedDateEnd, tfilterLastModifiedDateStart, tfilterLastModifiedDateEnd, tfilterSearchString, tfilterCaseSensitive, tfilterWholeWord, tfilterResourcePackId, tfilterSystemResource, tfilterHidden, tfilterHasApprovedVersion, tfilterStandardVariantId, tfilterUseEffectiveDate, tfilterEffectiveDate, tfilterCategories, tfilterCategoryObjects, tfilterVfilterLastModifiedDateEnd, tfilterDomainId, tfilterLatestVersion, tfilterLocked, tfilterStates, tfilterOverrideIds, tfilterOverrideStates, rfilterIds, rfilterExcludedIds, rfilterTypes, rfilterExcludedTypes, rfilterName, rfilterDescription, rfilterCreatedBy, rfilterLastModifiedBy, rfilterCreatedDateStart, rfilterCreatedDateEnd, rfilterLastModifiedDateStart, rfilterLastModifiedDateEnd, rfilterSearchString, rfilterCaseSensitive, rfilterWholeWord, rfilterResourcePackId, rfilterSystemResource, rfilterHidden, rfilterHasApprovedVersion, rfilterStandardVariantId, rfilterUseEffectiveDate, rfilterEffectiveDate, rfilterCategories, rfilterCategoryObjects, rfilterVfilterLastModifiedDateEnd, rfilterDomainId, rfilterLatestVersion, rfilterLocked, rfilterStates, rfilterOverrideIds, rfilterOverrideStates, useEffectiveDate, effectiveDate, offset, count, fetchApproval, _callback);

    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param linkSubjectId  (optional)
     * @param linkSubjectVersion  (optional)
     * @param linkObjectId  (optional)
     * @param linkDepth Optionally specify the maximum depth for a recursive traversal of a link tree. (optional)
     * @param filterIds  (optional)
     * @param filterExcludedIds  (optional)
     * @param filterTypes  (optional)
     * @param filterExcludedTypes  (optional)
     * @param filterName  (optional)
     * @param filterDescription  (optional)
     * @param filterCreatedBy  (optional)
     * @param filterLastModifiedBy  (optional)
     * @param filterCreatedDateStart  (optional)
     * @param filterCreatedDateEnd  (optional)
     * @param filterLastModifiedDateStart  (optional)
     * @param filterLastModifiedDateEnd  (optional)
     * @param filterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param filterCaseSensitive  (optional)
     * @param filterWholeWord  (optional)
     * @param filterResourcePackId  (optional)
     * @param filterSystemResource  (optional)
     * @param filterHidden  (optional)
     * @param filterHasApprovedVersion  (optional)
     * @param filterStandardVariantId  (optional)
     * @param filterUseEffectiveDate  (optional)
     * @param filterEffectiveDate  (optional)
     * @param filterCategories  (optional)
     * @param filterCategoryObjects  (optional)
     * @param filterVfilterLastModifiedDateEnd  (optional)
     * @param filterDomainId only include resources in this domain (optional)
     * @param filterLatestVersion only include the latest version of objects (optional)
     * @param filterLocked  (optional)
     * @param filterStates  (optional)
     * @param filterOverrideIds  (optional)
     * @param filterOverrideStates  (optional)
     * @param vfilterIds  (optional)
     * @param vfilterExcludedIds  (optional)
     * @param vfilterTypes  (optional)
     * @param vfilterExcludedTypes  (optional)
     * @param vfilterName  (optional)
     * @param vfilterDescription  (optional)
     * @param vfilterCreatedBy  (optional)
     * @param vfilterLastModifiedBy  (optional)
     * @param vfilterCreatedDateStart  (optional)
     * @param vfilterCreatedDateEnd  (optional)
     * @param vfilterLastModifiedDateStart  (optional)
     * @param vfilterLastModifiedDateEnd  (optional)
     * @param vfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param vfilterCaseSensitive  (optional)
     * @param vfilterWholeWord  (optional)
     * @param vfilterResourcePackId  (optional)
     * @param vfilterSystemResource  (optional)
     * @param vfilterHidden  (optional)
     * @param vfilterHasApprovedVersion  (optional)
     * @param vfilterStandardVariantId  (optional)
     * @param vfilterUseEffectiveDate  (optional)
     * @param vfilterEffectiveDate  (optional)
     * @param vfilterCategories  (optional)
     * @param vfilterCategoryObjects  (optional)
     * @param vfilterVfilterLastModifiedDateEnd  (optional)
     * @param vfilterDomainId only include resources in this domain (optional)
     * @param vfilterLatestVersion only include the latest version of objects (optional)
     * @param vfilterLocked  (optional)
     * @param vfilterStates  (optional)
     * @param vfilterOverrideIds  (optional)
     * @param vfilterOverrideStates  (optional)
     * @param tfilterIds  (optional)
     * @param tfilterExcludedIds  (optional)
     * @param tfilterTypes  (optional)
     * @param tfilterExcludedTypes  (optional)
     * @param tfilterName  (optional)
     * @param tfilterDescription  (optional)
     * @param tfilterCreatedBy  (optional)
     * @param tfilterLastModifiedBy  (optional)
     * @param tfilterCreatedDateStart  (optional)
     * @param tfilterCreatedDateEnd  (optional)
     * @param tfilterLastModifiedDateStart  (optional)
     * @param tfilterLastModifiedDateEnd  (optional)
     * @param tfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param tfilterCaseSensitive  (optional)
     * @param tfilterWholeWord  (optional)
     * @param tfilterResourcePackId  (optional)
     * @param tfilterSystemResource  (optional)
     * @param tfilterHidden  (optional)
     * @param tfilterHasApprovedVersion  (optional)
     * @param tfilterStandardVariantId  (optional)
     * @param tfilterUseEffectiveDate  (optional)
     * @param tfilterEffectiveDate  (optional)
     * @param tfilterCategories  (optional)
     * @param tfilterCategoryObjects  (optional)
     * @param tfilterVfilterLastModifiedDateEnd  (optional)
     * @param tfilterDomainId only include resources in this domain (optional)
     * @param tfilterLatestVersion only include the latest version of objects (optional)
     * @param tfilterLocked  (optional)
     * @param tfilterStates  (optional)
     * @param tfilterOverrideIds  (optional)
     * @param tfilterOverrideStates  (optional)
     * @param rfilterIds  (optional)
     * @param rfilterExcludedIds  (optional)
     * @param rfilterTypes  (optional)
     * @param rfilterExcludedTypes  (optional)
     * @param rfilterName  (optional)
     * @param rfilterDescription  (optional)
     * @param rfilterCreatedBy  (optional)
     * @param rfilterLastModifiedBy  (optional)
     * @param rfilterCreatedDateStart  (optional)
     * @param rfilterCreatedDateEnd  (optional)
     * @param rfilterLastModifiedDateStart  (optional)
     * @param rfilterLastModifiedDateEnd  (optional)
     * @param rfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param rfilterCaseSensitive  (optional)
     * @param rfilterWholeWord  (optional)
     * @param rfilterResourcePackId  (optional)
     * @param rfilterSystemResource  (optional)
     * @param rfilterHidden  (optional)
     * @param rfilterHasApprovedVersion  (optional)
     * @param rfilterStandardVariantId  (optional)
     * @param rfilterUseEffectiveDate  (optional)
     * @param rfilterEffectiveDate  (optional)
     * @param rfilterCategories  (optional)
     * @param rfilterCategoryObjects  (optional)
     * @param rfilterVfilterLastModifiedDateEnd  (optional)
     * @param rfilterDomainId only include resources in this domain (optional)
     * @param rfilterLatestVersion only include the latest version of objects (optional)
     * @param rfilterLocked  (optional)
     * @param rfilterStates  (optional)
     * @param rfilterOverrideIds  (optional)
     * @param rfilterOverrideStates  (optional)
     * @param useEffectiveDate  (optional)
     * @param effectiveDate  (optional)
     * @param offset For pagination, fetch entities after this many (optional)
     * @param count For pagination, the number of entities per page (optional)
     * @param fetchApproval  (optional, default to false)
     * @return PageResponseResourceVersion
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public PageResponseResourceVersion getResources1(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count, Boolean fetchApproval) throws ApiException {
        ApiResponse<PageResponseResourceVersion> localVarResp = getResources1WithHttpInfo(domain, linkSubjectId, linkSubjectVersion, linkObjectId, linkDepth, filterIds, filterExcludedIds, filterTypes, filterExcludedTypes, filterName, filterDescription, filterCreatedBy, filterLastModifiedBy, filterCreatedDateStart, filterCreatedDateEnd, filterLastModifiedDateStart, filterLastModifiedDateEnd, filterSearchString, filterCaseSensitive, filterWholeWord, filterResourcePackId, filterSystemResource, filterHidden, filterHasApprovedVersion, filterStandardVariantId, filterUseEffectiveDate, filterEffectiveDate, filterCategories, filterCategoryObjects, filterVfilterLastModifiedDateEnd, filterDomainId, filterLatestVersion, filterLocked, filterStates, filterOverrideIds, filterOverrideStates, vfilterIds, vfilterExcludedIds, vfilterTypes, vfilterExcludedTypes, vfilterName, vfilterDescription, vfilterCreatedBy, vfilterLastModifiedBy, vfilterCreatedDateStart, vfilterCreatedDateEnd, vfilterLastModifiedDateStart, vfilterLastModifiedDateEnd, vfilterSearchString, vfilterCaseSensitive, vfilterWholeWord, vfilterResourcePackId, vfilterSystemResource, vfilterHidden, vfilterHasApprovedVersion, vfilterStandardVariantId, vfilterUseEffectiveDate, vfilterEffectiveDate, vfilterCategories, vfilterCategoryObjects, vfilterVfilterLastModifiedDateEnd, vfilterDomainId, vfilterLatestVersion, vfilterLocked, vfilterStates, vfilterOverrideIds, vfilterOverrideStates, tfilterIds, tfilterExcludedIds, tfilterTypes, tfilterExcludedTypes, tfilterName, tfilterDescription, tfilterCreatedBy, tfilterLastModifiedBy, tfilterCreatedDateStart, tfilterCreatedDateEnd, tfilterLastModifiedDateStart, tfilterLastModifiedDateEnd, tfilterSearchString, tfilterCaseSensitive, tfilterWholeWord, tfilterResourcePackId, tfilterSystemResource, tfilterHidden, tfilterHasApprovedVersion, tfilterStandardVariantId, tfilterUseEffectiveDate, tfilterEffectiveDate, tfilterCategories, tfilterCategoryObjects, tfilterVfilterLastModifiedDateEnd, tfilterDomainId, tfilterLatestVersion, tfilterLocked, tfilterStates, tfilterOverrideIds, tfilterOverrideStates, rfilterIds, rfilterExcludedIds, rfilterTypes, rfilterExcludedTypes, rfilterName, rfilterDescription, rfilterCreatedBy, rfilterLastModifiedBy, rfilterCreatedDateStart, rfilterCreatedDateEnd, rfilterLastModifiedDateStart, rfilterLastModifiedDateEnd, rfilterSearchString, rfilterCaseSensitive, rfilterWholeWord, rfilterResourcePackId, rfilterSystemResource, rfilterHidden, rfilterHasApprovedVersion, rfilterStandardVariantId, rfilterUseEffectiveDate, rfilterEffectiveDate, rfilterCategories, rfilterCategoryObjects, rfilterVfilterLastModifiedDateEnd, rfilterDomainId, rfilterLatestVersion, rfilterLocked, rfilterStates, rfilterOverrideIds, rfilterOverrideStates, useEffectiveDate, effectiveDate, offset, count, fetchApproval);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param domain  (required)
     * @param linkSubjectId  (optional)
     * @param linkSubjectVersion  (optional)
     * @param linkObjectId  (optional)
     * @param linkDepth Optionally specify the maximum depth for a recursive traversal of a link tree. (optional)
     * @param filterIds  (optional)
     * @param filterExcludedIds  (optional)
     * @param filterTypes  (optional)
     * @param filterExcludedTypes  (optional)
     * @param filterName  (optional)
     * @param filterDescription  (optional)
     * @param filterCreatedBy  (optional)
     * @param filterLastModifiedBy  (optional)
     * @param filterCreatedDateStart  (optional)
     * @param filterCreatedDateEnd  (optional)
     * @param filterLastModifiedDateStart  (optional)
     * @param filterLastModifiedDateEnd  (optional)
     * @param filterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param filterCaseSensitive  (optional)
     * @param filterWholeWord  (optional)
     * @param filterResourcePackId  (optional)
     * @param filterSystemResource  (optional)
     * @param filterHidden  (optional)
     * @param filterHasApprovedVersion  (optional)
     * @param filterStandardVariantId  (optional)
     * @param filterUseEffectiveDate  (optional)
     * @param filterEffectiveDate  (optional)
     * @param filterCategories  (optional)
     * @param filterCategoryObjects  (optional)
     * @param filterVfilterLastModifiedDateEnd  (optional)
     * @param filterDomainId only include resources in this domain (optional)
     * @param filterLatestVersion only include the latest version of objects (optional)
     * @param filterLocked  (optional)
     * @param filterStates  (optional)
     * @param filterOverrideIds  (optional)
     * @param filterOverrideStates  (optional)
     * @param vfilterIds  (optional)
     * @param vfilterExcludedIds  (optional)
     * @param vfilterTypes  (optional)
     * @param vfilterExcludedTypes  (optional)
     * @param vfilterName  (optional)
     * @param vfilterDescription  (optional)
     * @param vfilterCreatedBy  (optional)
     * @param vfilterLastModifiedBy  (optional)
     * @param vfilterCreatedDateStart  (optional)
     * @param vfilterCreatedDateEnd  (optional)
     * @param vfilterLastModifiedDateStart  (optional)
     * @param vfilterLastModifiedDateEnd  (optional)
     * @param vfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param vfilterCaseSensitive  (optional)
     * @param vfilterWholeWord  (optional)
     * @param vfilterResourcePackId  (optional)
     * @param vfilterSystemResource  (optional)
     * @param vfilterHidden  (optional)
     * @param vfilterHasApprovedVersion  (optional)
     * @param vfilterStandardVariantId  (optional)
     * @param vfilterUseEffectiveDate  (optional)
     * @param vfilterEffectiveDate  (optional)
     * @param vfilterCategories  (optional)
     * @param vfilterCategoryObjects  (optional)
     * @param vfilterVfilterLastModifiedDateEnd  (optional)
     * @param vfilterDomainId only include resources in this domain (optional)
     * @param vfilterLatestVersion only include the latest version of objects (optional)
     * @param vfilterLocked  (optional)
     * @param vfilterStates  (optional)
     * @param vfilterOverrideIds  (optional)
     * @param vfilterOverrideStates  (optional)
     * @param tfilterIds  (optional)
     * @param tfilterExcludedIds  (optional)
     * @param tfilterTypes  (optional)
     * @param tfilterExcludedTypes  (optional)
     * @param tfilterName  (optional)
     * @param tfilterDescription  (optional)
     * @param tfilterCreatedBy  (optional)
     * @param tfilterLastModifiedBy  (optional)
     * @param tfilterCreatedDateStart  (optional)
     * @param tfilterCreatedDateEnd  (optional)
     * @param tfilterLastModifiedDateStart  (optional)
     * @param tfilterLastModifiedDateEnd  (optional)
     * @param tfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param tfilterCaseSensitive  (optional)
     * @param tfilterWholeWord  (optional)
     * @param tfilterResourcePackId  (optional)
     * @param tfilterSystemResource  (optional)
     * @param tfilterHidden  (optional)
     * @param tfilterHasApprovedVersion  (optional)
     * @param tfilterStandardVariantId  (optional)
     * @param tfilterUseEffectiveDate  (optional)
     * @param tfilterEffectiveDate  (optional)
     * @param tfilterCategories  (optional)
     * @param tfilterCategoryObjects  (optional)
     * @param tfilterVfilterLastModifiedDateEnd  (optional)
     * @param tfilterDomainId only include resources in this domain (optional)
     * @param tfilterLatestVersion only include the latest version of objects (optional)
     * @param tfilterLocked  (optional)
     * @param tfilterStates  (optional)
     * @param tfilterOverrideIds  (optional)
     * @param tfilterOverrideStates  (optional)
     * @param rfilterIds  (optional)
     * @param rfilterExcludedIds  (optional)
     * @param rfilterTypes  (optional)
     * @param rfilterExcludedTypes  (optional)
     * @param rfilterName  (optional)
     * @param rfilterDescription  (optional)
     * @param rfilterCreatedBy  (optional)
     * @param rfilterLastModifiedBy  (optional)
     * @param rfilterCreatedDateStart  (optional)
     * @param rfilterCreatedDateEnd  (optional)
     * @param rfilterLastModifiedDateStart  (optional)
     * @param rfilterLastModifiedDateEnd  (optional)
     * @param rfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param rfilterCaseSensitive  (optional)
     * @param rfilterWholeWord  (optional)
     * @param rfilterResourcePackId  (optional)
     * @param rfilterSystemResource  (optional)
     * @param rfilterHidden  (optional)
     * @param rfilterHasApprovedVersion  (optional)
     * @param rfilterStandardVariantId  (optional)
     * @param rfilterUseEffectiveDate  (optional)
     * @param rfilterEffectiveDate  (optional)
     * @param rfilterCategories  (optional)
     * @param rfilterCategoryObjects  (optional)
     * @param rfilterVfilterLastModifiedDateEnd  (optional)
     * @param rfilterDomainId only include resources in this domain (optional)
     * @param rfilterLatestVersion only include the latest version of objects (optional)
     * @param rfilterLocked  (optional)
     * @param rfilterStates  (optional)
     * @param rfilterOverrideIds  (optional)
     * @param rfilterOverrideStates  (optional)
     * @param useEffectiveDate  (optional)
     * @param effectiveDate  (optional)
     * @param offset For pagination, fetch entities after this many (optional)
     * @param count For pagination, the number of entities per page (optional)
     * @param fetchApproval  (optional, default to false)
     * @return ApiResponse&lt;PageResponseResourceVersion&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageResponseResourceVersion> getResources1WithHttpInfo(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count, Boolean fetchApproval) throws ApiException {
        okhttp3.Call localVarCall = getResources1ValidateBeforeCall(domain, linkSubjectId, linkSubjectVersion, linkObjectId, linkDepth, filterIds, filterExcludedIds, filterTypes, filterExcludedTypes, filterName, filterDescription, filterCreatedBy, filterLastModifiedBy, filterCreatedDateStart, filterCreatedDateEnd, filterLastModifiedDateStart, filterLastModifiedDateEnd, filterSearchString, filterCaseSensitive, filterWholeWord, filterResourcePackId, filterSystemResource, filterHidden, filterHasApprovedVersion, filterStandardVariantId, filterUseEffectiveDate, filterEffectiveDate, filterCategories, filterCategoryObjects, filterVfilterLastModifiedDateEnd, filterDomainId, filterLatestVersion, filterLocked, filterStates, filterOverrideIds, filterOverrideStates, vfilterIds, vfilterExcludedIds, vfilterTypes, vfilterExcludedTypes, vfilterName, vfilterDescription, vfilterCreatedBy, vfilterLastModifiedBy, vfilterCreatedDateStart, vfilterCreatedDateEnd, vfilterLastModifiedDateStart, vfilterLastModifiedDateEnd, vfilterSearchString, vfilterCaseSensitive, vfilterWholeWord, vfilterResourcePackId, vfilterSystemResource, vfilterHidden, vfilterHasApprovedVersion, vfilterStandardVariantId, vfilterUseEffectiveDate, vfilterEffectiveDate, vfilterCategories, vfilterCategoryObjects, vfilterVfilterLastModifiedDateEnd, vfilterDomainId, vfilterLatestVersion, vfilterLocked, vfilterStates, vfilterOverrideIds, vfilterOverrideStates, tfilterIds, tfilterExcludedIds, tfilterTypes, tfilterExcludedTypes, tfilterName, tfilterDescription, tfilterCreatedBy, tfilterLastModifiedBy, tfilterCreatedDateStart, tfilterCreatedDateEnd, tfilterLastModifiedDateStart, tfilterLastModifiedDateEnd, tfilterSearchString, tfilterCaseSensitive, tfilterWholeWord, tfilterResourcePackId, tfilterSystemResource, tfilterHidden, tfilterHasApprovedVersion, tfilterStandardVariantId, tfilterUseEffectiveDate, tfilterEffectiveDate, tfilterCategories, tfilterCategoryObjects, tfilterVfilterLastModifiedDateEnd, tfilterDomainId, tfilterLatestVersion, tfilterLocked, tfilterStates, tfilterOverrideIds, tfilterOverrideStates, rfilterIds, rfilterExcludedIds, rfilterTypes, rfilterExcludedTypes, rfilterName, rfilterDescription, rfilterCreatedBy, rfilterLastModifiedBy, rfilterCreatedDateStart, rfilterCreatedDateEnd, rfilterLastModifiedDateStart, rfilterLastModifiedDateEnd, rfilterSearchString, rfilterCaseSensitive, rfilterWholeWord, rfilterResourcePackId, rfilterSystemResource, rfilterHidden, rfilterHasApprovedVersion, rfilterStandardVariantId, rfilterUseEffectiveDate, rfilterEffectiveDate, rfilterCategories, rfilterCategoryObjects, rfilterVfilterLastModifiedDateEnd, rfilterDomainId, rfilterLatestVersion, rfilterLocked, rfilterStates, rfilterOverrideIds, rfilterOverrideStates, useEffectiveDate, effectiveDate, offset, count, fetchApproval, null);
        Type localVarReturnType = new TypeToken<PageResponseResourceVersion>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param domain  (required)
     * @param linkSubjectId  (optional)
     * @param linkSubjectVersion  (optional)
     * @param linkObjectId  (optional)
     * @param linkDepth Optionally specify the maximum depth for a recursive traversal of a link tree. (optional)
     * @param filterIds  (optional)
     * @param filterExcludedIds  (optional)
     * @param filterTypes  (optional)
     * @param filterExcludedTypes  (optional)
     * @param filterName  (optional)
     * @param filterDescription  (optional)
     * @param filterCreatedBy  (optional)
     * @param filterLastModifiedBy  (optional)
     * @param filterCreatedDateStart  (optional)
     * @param filterCreatedDateEnd  (optional)
     * @param filterLastModifiedDateStart  (optional)
     * @param filterLastModifiedDateEnd  (optional)
     * @param filterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param filterCaseSensitive  (optional)
     * @param filterWholeWord  (optional)
     * @param filterResourcePackId  (optional)
     * @param filterSystemResource  (optional)
     * @param filterHidden  (optional)
     * @param filterHasApprovedVersion  (optional)
     * @param filterStandardVariantId  (optional)
     * @param filterUseEffectiveDate  (optional)
     * @param filterEffectiveDate  (optional)
     * @param filterCategories  (optional)
     * @param filterCategoryObjects  (optional)
     * @param filterVfilterLastModifiedDateEnd  (optional)
     * @param filterDomainId only include resources in this domain (optional)
     * @param filterLatestVersion only include the latest version of objects (optional)
     * @param filterLocked  (optional)
     * @param filterStates  (optional)
     * @param filterOverrideIds  (optional)
     * @param filterOverrideStates  (optional)
     * @param vfilterIds  (optional)
     * @param vfilterExcludedIds  (optional)
     * @param vfilterTypes  (optional)
     * @param vfilterExcludedTypes  (optional)
     * @param vfilterName  (optional)
     * @param vfilterDescription  (optional)
     * @param vfilterCreatedBy  (optional)
     * @param vfilterLastModifiedBy  (optional)
     * @param vfilterCreatedDateStart  (optional)
     * @param vfilterCreatedDateEnd  (optional)
     * @param vfilterLastModifiedDateStart  (optional)
     * @param vfilterLastModifiedDateEnd  (optional)
     * @param vfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param vfilterCaseSensitive  (optional)
     * @param vfilterWholeWord  (optional)
     * @param vfilterResourcePackId  (optional)
     * @param vfilterSystemResource  (optional)
     * @param vfilterHidden  (optional)
     * @param vfilterHasApprovedVersion  (optional)
     * @param vfilterStandardVariantId  (optional)
     * @param vfilterUseEffectiveDate  (optional)
     * @param vfilterEffectiveDate  (optional)
     * @param vfilterCategories  (optional)
     * @param vfilterCategoryObjects  (optional)
     * @param vfilterVfilterLastModifiedDateEnd  (optional)
     * @param vfilterDomainId only include resources in this domain (optional)
     * @param vfilterLatestVersion only include the latest version of objects (optional)
     * @param vfilterLocked  (optional)
     * @param vfilterStates  (optional)
     * @param vfilterOverrideIds  (optional)
     * @param vfilterOverrideStates  (optional)
     * @param tfilterIds  (optional)
     * @param tfilterExcludedIds  (optional)
     * @param tfilterTypes  (optional)
     * @param tfilterExcludedTypes  (optional)
     * @param tfilterName  (optional)
     * @param tfilterDescription  (optional)
     * @param tfilterCreatedBy  (optional)
     * @param tfilterLastModifiedBy  (optional)
     * @param tfilterCreatedDateStart  (optional)
     * @param tfilterCreatedDateEnd  (optional)
     * @param tfilterLastModifiedDateStart  (optional)
     * @param tfilterLastModifiedDateEnd  (optional)
     * @param tfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param tfilterCaseSensitive  (optional)
     * @param tfilterWholeWord  (optional)
     * @param tfilterResourcePackId  (optional)
     * @param tfilterSystemResource  (optional)
     * @param tfilterHidden  (optional)
     * @param tfilterHasApprovedVersion  (optional)
     * @param tfilterStandardVariantId  (optional)
     * @param tfilterUseEffectiveDate  (optional)
     * @param tfilterEffectiveDate  (optional)
     * @param tfilterCategories  (optional)
     * @param tfilterCategoryObjects  (optional)
     * @param tfilterVfilterLastModifiedDateEnd  (optional)
     * @param tfilterDomainId only include resources in this domain (optional)
     * @param tfilterLatestVersion only include the latest version of objects (optional)
     * @param tfilterLocked  (optional)
     * @param tfilterStates  (optional)
     * @param tfilterOverrideIds  (optional)
     * @param tfilterOverrideStates  (optional)
     * @param rfilterIds  (optional)
     * @param rfilterExcludedIds  (optional)
     * @param rfilterTypes  (optional)
     * @param rfilterExcludedTypes  (optional)
     * @param rfilterName  (optional)
     * @param rfilterDescription  (optional)
     * @param rfilterCreatedBy  (optional)
     * @param rfilterLastModifiedBy  (optional)
     * @param rfilterCreatedDateStart  (optional)
     * @param rfilterCreatedDateEnd  (optional)
     * @param rfilterLastModifiedDateStart  (optional)
     * @param rfilterLastModifiedDateEnd  (optional)
     * @param rfilterSearchString This is equivalent to searching where the name OR the description is LIKE this value (optional)
     * @param rfilterCaseSensitive  (optional)
     * @param rfilterWholeWord  (optional)
     * @param rfilterResourcePackId  (optional)
     * @param rfilterSystemResource  (optional)
     * @param rfilterHidden  (optional)
     * @param rfilterHasApprovedVersion  (optional)
     * @param rfilterStandardVariantId  (optional)
     * @param rfilterUseEffectiveDate  (optional)
     * @param rfilterEffectiveDate  (optional)
     * @param rfilterCategories  (optional)
     * @param rfilterCategoryObjects  (optional)
     * @param rfilterVfilterLastModifiedDateEnd  (optional)
     * @param rfilterDomainId only include resources in this domain (optional)
     * @param rfilterLatestVersion only include the latest version of objects (optional)
     * @param rfilterLocked  (optional)
     * @param rfilterStates  (optional)
     * @param rfilterOverrideIds  (optional)
     * @param rfilterOverrideStates  (optional)
     * @param useEffectiveDate  (optional)
     * @param effectiveDate  (optional)
     * @param offset For pagination, fetch entities after this many (optional)
     * @param count For pagination, the number of entities per page (optional)
     * @param fetchApproval  (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getResources1Async(String domain, UUID linkSubjectId, Integer linkSubjectVersion, UUID linkObjectId, Integer linkDepth, List<UUID> filterIds, List<UUID> filterExcludedIds, List<String> filterTypes, List<String> filterExcludedTypes, String filterName, String filterDescription, String filterCreatedBy, String filterLastModifiedBy, OffsetDateTime filterCreatedDateStart, OffsetDateTime filterCreatedDateEnd, OffsetDateTime filterLastModifiedDateStart, OffsetDateTime filterLastModifiedDateEnd, String filterSearchString, Boolean filterCaseSensitive, Boolean filterWholeWord, UUID filterResourcePackId, Boolean filterSystemResource, Boolean filterHidden, Boolean filterHasApprovedVersion, UUID filterStandardVariantId, Boolean filterUseEffectiveDate, OffsetDateTime filterEffectiveDate, List<String> filterCategories, List<ResourceCategory> filterCategoryObjects, OffsetDateTime filterVfilterLastModifiedDateEnd, String filterDomainId, Boolean filterLatestVersion, Boolean filterLocked, List<String> filterStates, List<UUID> filterOverrideIds, List<String> filterOverrideStates, List<UUID> vfilterIds, List<UUID> vfilterExcludedIds, List<String> vfilterTypes, List<String> vfilterExcludedTypes, String vfilterName, String vfilterDescription, String vfilterCreatedBy, String vfilterLastModifiedBy, OffsetDateTime vfilterCreatedDateStart, OffsetDateTime vfilterCreatedDateEnd, OffsetDateTime vfilterLastModifiedDateStart, OffsetDateTime vfilterLastModifiedDateEnd, String vfilterSearchString, Boolean vfilterCaseSensitive, Boolean vfilterWholeWord, UUID vfilterResourcePackId, Boolean vfilterSystemResource, Boolean vfilterHidden, Boolean vfilterHasApprovedVersion, UUID vfilterStandardVariantId, Boolean vfilterUseEffectiveDate, OffsetDateTime vfilterEffectiveDate, List<String> vfilterCategories, List<ResourceCategory> vfilterCategoryObjects, OffsetDateTime vfilterVfilterLastModifiedDateEnd, String vfilterDomainId, Boolean vfilterLatestVersion, Boolean vfilterLocked, List<String> vfilterStates, List<UUID> vfilterOverrideIds, List<String> vfilterOverrideStates, List<UUID> tfilterIds, List<UUID> tfilterExcludedIds, List<String> tfilterTypes, List<String> tfilterExcludedTypes, String tfilterName, String tfilterDescription, String tfilterCreatedBy, String tfilterLastModifiedBy, OffsetDateTime tfilterCreatedDateStart, OffsetDateTime tfilterCreatedDateEnd, OffsetDateTime tfilterLastModifiedDateStart, OffsetDateTime tfilterLastModifiedDateEnd, String tfilterSearchString, Boolean tfilterCaseSensitive, Boolean tfilterWholeWord, UUID tfilterResourcePackId, Boolean tfilterSystemResource, Boolean tfilterHidden, Boolean tfilterHasApprovedVersion, UUID tfilterStandardVariantId, Boolean tfilterUseEffectiveDate, OffsetDateTime tfilterEffectiveDate, List<String> tfilterCategories, List<ResourceCategory> tfilterCategoryObjects, OffsetDateTime tfilterVfilterLastModifiedDateEnd, String tfilterDomainId, Boolean tfilterLatestVersion, Boolean tfilterLocked, List<String> tfilterStates, List<UUID> tfilterOverrideIds, List<String> tfilterOverrideStates, List<UUID> rfilterIds, List<UUID> rfilterExcludedIds, List<String> rfilterTypes, List<String> rfilterExcludedTypes, String rfilterName, String rfilterDescription, String rfilterCreatedBy, String rfilterLastModifiedBy, OffsetDateTime rfilterCreatedDateStart, OffsetDateTime rfilterCreatedDateEnd, OffsetDateTime rfilterLastModifiedDateStart, OffsetDateTime rfilterLastModifiedDateEnd, String rfilterSearchString, Boolean rfilterCaseSensitive, Boolean rfilterWholeWord, UUID rfilterResourcePackId, Boolean rfilterSystemResource, Boolean rfilterHidden, Boolean rfilterHasApprovedVersion, UUID rfilterStandardVariantId, Boolean rfilterUseEffectiveDate, OffsetDateTime rfilterEffectiveDate, List<String> rfilterCategories, List<ResourceCategory> rfilterCategoryObjects, OffsetDateTime rfilterVfilterLastModifiedDateEnd, String rfilterDomainId, Boolean rfilterLatestVersion, Boolean rfilterLocked, List<String> rfilterStates, List<UUID> rfilterOverrideIds, List<String> rfilterOverrideStates, Boolean useEffectiveDate, OffsetDateTime effectiveDate, Integer offset, Integer count, Boolean fetchApproval, final ApiCallback<PageResponseResourceVersion> _callback) throws ApiException {

        okhttp3.Call localVarCall = getResources1ValidateBeforeCall(domain, linkSubjectId, linkSubjectVersion, linkObjectId, linkDepth, filterIds, filterExcludedIds, filterTypes, filterExcludedTypes, filterName, filterDescription, filterCreatedBy, filterLastModifiedBy, filterCreatedDateStart, filterCreatedDateEnd, filterLastModifiedDateStart, filterLastModifiedDateEnd, filterSearchString, filterCaseSensitive, filterWholeWord, filterResourcePackId, filterSystemResource, filterHidden, filterHasApprovedVersion, filterStandardVariantId, filterUseEffectiveDate, filterEffectiveDate, filterCategories, filterCategoryObjects, filterVfilterLastModifiedDateEnd, filterDomainId, filterLatestVersion, filterLocked, filterStates, filterOverrideIds, filterOverrideStates, vfilterIds, vfilterExcludedIds, vfilterTypes, vfilterExcludedTypes, vfilterName, vfilterDescription, vfilterCreatedBy, vfilterLastModifiedBy, vfilterCreatedDateStart, vfilterCreatedDateEnd, vfilterLastModifiedDateStart, vfilterLastModifiedDateEnd, vfilterSearchString, vfilterCaseSensitive, vfilterWholeWord, vfilterResourcePackId, vfilterSystemResource, vfilterHidden, vfilterHasApprovedVersion, vfilterStandardVariantId, vfilterUseEffectiveDate, vfilterEffectiveDate, vfilterCategories, vfilterCategoryObjects, vfilterVfilterLastModifiedDateEnd, vfilterDomainId, vfilterLatestVersion, vfilterLocked, vfilterStates, vfilterOverrideIds, vfilterOverrideStates, tfilterIds, tfilterExcludedIds, tfilterTypes, tfilterExcludedTypes, tfilterName, tfilterDescription, tfilterCreatedBy, tfilterLastModifiedBy, tfilterCreatedDateStart, tfilterCreatedDateEnd, tfilterLastModifiedDateStart, tfilterLastModifiedDateEnd, tfilterSearchString, tfilterCaseSensitive, tfilterWholeWord, tfilterResourcePackId, tfilterSystemResource, tfilterHidden, tfilterHasApprovedVersion, tfilterStandardVariantId, tfilterUseEffectiveDate, tfilterEffectiveDate, tfilterCategories, tfilterCategoryObjects, tfilterVfilterLastModifiedDateEnd, tfilterDomainId, tfilterLatestVersion, tfilterLocked, tfilterStates, tfilterOverrideIds, tfilterOverrideStates, rfilterIds, rfilterExcludedIds, rfilterTypes, rfilterExcludedTypes, rfilterName, rfilterDescription, rfilterCreatedBy, rfilterLastModifiedBy, rfilterCreatedDateStart, rfilterCreatedDateEnd, rfilterLastModifiedDateStart, rfilterLastModifiedDateEnd, rfilterSearchString, rfilterCaseSensitive, rfilterWholeWord, rfilterResourcePackId, rfilterSystemResource, rfilterHidden, rfilterHasApprovedVersion, rfilterStandardVariantId, rfilterUseEffectiveDate, rfilterEffectiveDate, rfilterCategories, rfilterCategoryObjects, rfilterVfilterLastModifiedDateEnd, rfilterDomainId, rfilterLatestVersion, rfilterLocked, rfilterStates, rfilterOverrideIds, rfilterOverrideStates, useEffectiveDate, effectiveDate, offset, count, fetchApproval, _callback);
        Type localVarReturnType = new TypeToken<PageResponseResourceVersion>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
