/*
 * Exstream Design
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CollectionResourceFilter;
import org.openapitools.client.model.ListResponseCollectionResource;
import org.openapitools.client.model.PageResponseCollectionResourceDetailResponse;
import org.openapitools.client.model.VersionedId;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CollectionResourcesControllerApi
 */
@Disabled
public class CollectionResourcesControllerApiTest {

    private final CollectionResourcesControllerApi api = new CollectionResourcesControllerApi();

    /**
     * Get the list of resources and versions, including additional detail information, for the specified list of collection ids
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collectionDetailsTest() throws ApiException {
        CollectionResourceFilter requestFilter = null;
        List<String> requestBody = null;
        PageResponseCollectionResourceDetailResponse response = api.collectionDetails(requestFilter, requestBody);
        // TODO: test validations
    }

    /**
     * Create a new collection resource containing the specified ResourceVersions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void create2Test() throws ApiException {
        List<VersionedId> versionedId = null;
        ListResponseCollectionResource response = api.create2(versionedId);
        // TODO: test validations
    }

    /**
     * Deletes the set of resources for the specified collection id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void delete3Test() throws ApiException {
        String collectionId = null;
        api.delete3(collectionId);
        // TODO: test validations
    }

    /**
     * Deletes the set of resources for the specified collection ids
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBulkTest() throws ApiException {
        List<String> requestBody = null;
        api.deleteBulk(requestBody);
        // TODO: test validations
    }

}
