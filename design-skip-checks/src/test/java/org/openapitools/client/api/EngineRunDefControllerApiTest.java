/*
 * Exstream Design
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataResponseResourceVersion;
import org.openapitools.client.model.PageResponseResourceVersion;
import org.openapitools.client.model.RunDef;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EngineRunDefControllerApi
 */
@Disabled
public class EngineRunDefControllerApiTest {

    private final EngineRunDefControllerApi api = new EngineRunDefControllerApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void create1Test() throws ApiException {
        String domain = null;
        UUID templateId = null;
        RunDef response = api.create1(domain, templateId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAvailableEnginesTest() throws ApiException {
        String domain = null;
        PageResponseResourceVersion response = api.getAvailableEngines(domain);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefForPreviewTest() throws ApiException {
        String domain = null;
        UUID id = null;
        Boolean useApprovedTemplate = null;
        RunDef response = api.getDefForPreview(domain, id, useApprovedTemplate);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefaultEngineTest() throws ApiException {
        String domain = null;
        String encoding = null;
        DataResponseResourceVersion response = api.getDefaultEngine(domain, encoding);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNamedEngineTest() throws ApiException {
        String domain = null;
        String engineName = null;
        String encoding = null;
        DataResponseResourceVersion response = api.getNamedEngine(domain, engineName, encoding);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setEngineAsDefaultTest() throws ApiException {
        String domain = null;
        UUID id = null;
        DataResponseResourceVersion response = api.setEngineAsDefault(domain, id);
        // TODO: test validations
    }

}
