/*
 * Exstream Design
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataResponseBulkFavoriteResponse;
import org.openapitools.client.model.DataResponseBulkUnfavoriteResponse;
import org.openapitools.client.model.FavoriteResourcesInput;
import org.openapitools.client.model.SavedResource;
import org.openapitools.client.model.SavedResourceInput;
import org.openapitools.client.model.UserProfileResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserProfileControllerApi
 */
@Disabled
public class UserProfileControllerApiTest {

    private final UserProfileControllerApi api = new UserProfileControllerApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addFavoriteTest() throws ApiException {
        String domain = null;
        SavedResourceInput savedResourceInput = null;
        SavedResource response = api.addFavorite(domain, savedResourceInput);
        // TODO: test validations
    }

    /**
     * Marks the given list of resources as favorite for the current user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addFavoritesTest() throws ApiException {
        String domain = null;
        FavoriteResourcesInput favoriteResourcesInput = null;
        DataResponseBulkFavoriteResponse response = api.addFavorites(domain, favoriteResourcesInput);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addRecentTest() throws ApiException {
        String domain = null;
        SavedResourceInput savedResourceInput = null;
        SavedResource response = api.addRecent(domain, savedResourceInput);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFavoriteTest() throws ApiException {
        String domain = null;
        SavedResourceInput savedResourceInput = null;
        api.deleteFavorite(domain, savedResourceInput);
        // TODO: test validations
    }

    /**
     * Removes the given list of resources from the favorites.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFavoritesTest() throws ApiException {
        String domain = null;
        FavoriteResourcesInput favoriteResourcesInput = null;
        DataResponseBulkUnfavoriteResponse response = api.deleteFavorites(domain, favoriteResourcesInput);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserProfileTest() throws ApiException {
        String domain = null;
        Boolean fetchSavedResources = null;
        UserProfileResponse response = api.getUserProfile(domain, fetchSavedResources);
        // TODO: test validations
    }

}
