/*
 * Exstream Design
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateThemeRequest;
import org.openapitools.client.model.DataResponseResourceVersion;
import org.openapitools.client.model.DataResponseTheme;
import org.openapitools.client.model.GenericResponse;
import org.openapitools.client.model.PostGetThemeWithOptionsPayload;
import org.openapitools.client.model.Theme;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThemeControllerApi
 */
@Disabled
public class ThemeControllerApiTest {

    private final ThemeControllerApi api = new ThemeControllerApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createThemeTest() throws ApiException {
        String domain = null;
        CreateThemeRequest createThemeRequest = null;
        DataResponseResourceVersion response = api.createTheme(domain, createThemeRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getThemeTest() throws ApiException {
        String domain = null;
        UUID themeId = null;
        Integer version = null;
        DataResponseTheme response = api.getTheme(domain, themeId, version);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getThemeWithOptionsTest() throws ApiException {
        String domain = null;
        UUID themeId = null;
        Integer version = null;
        PostGetThemeWithOptionsPayload postGetThemeWithOptionsPayload = null;
        DataResponseTheme response = api.getThemeWithOptions(domain, themeId, version, postGetThemeWithOptionsPayload);
        // TODO: test validations
    }

    /**
     * Update the specified theme to be based on the latest approved version of its template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTemplateTest() throws ApiException {
        String domain = null;
        UUID themeId = null;
        GenericResponse response = api.updateTemplate(domain, themeId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateThemeTest() throws ApiException {
        String domain = null;
        UUID themeId = null;
        Theme theme = null;
        Boolean requireLock = null;
        GenericResponse response = api.updateTheme(domain, themeId, theme, requireLock);
        // TODO: test validations
    }

}
