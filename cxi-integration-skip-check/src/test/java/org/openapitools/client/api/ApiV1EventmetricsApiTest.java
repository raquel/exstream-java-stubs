/*
 * Exstream CXI Integration
 * **For internal use of the product only**
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataResponseListEmailevent;
import org.openapitools.client.model.DataResponseListEvents;
import org.openapitools.client.model.DataResponseLong;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiV1EventmetricsApi
 */
@Disabled
public class ApiV1EventmetricsApiTest {

    private final ApiV1EventmetricsApi api = new ApiV1EventmetricsApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomMetadataEventsTest() throws ApiException {
        String tenantId = null;
        String domainId = null;
        String flowStepId = null;
        String communicationId = null;
        DataResponseListEvents response = api.getCustomMetadataEvents(tenantId, domainId, flowStepId, communicationId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocgenReportTest() throws ApiException {
        String tenantId = null;
        String domainId = null;
        Integer processingState = null;
        OffsetDateTime lastUpdateTimeStart = null;
        OffsetDateTime lastUpdateTimeEnd = null;
        DataResponseLong response = api.getDocgenReport(tenantId, domainId, processingState, lastUpdateTimeStart, lastUpdateTimeEnd);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmailEventsTest() throws ApiException {
        String tenantId = null;
        String domainId = null;
        String connectorType = null;
        OffsetDateTime lastUpdateTimeStart = null;
        OffsetDateTime lastUpdateTimeEnd = null;
        DataResponseListEmailevent response = api.getEmailEvents(tenantId, domainId, connectorType, lastUpdateTimeStart, lastUpdateTimeEnd);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEmaileventReportTest() throws ApiException {
        String tenantId = null;
        String domainId = null;
        String connectorType = null;
        Integer processingState = null;
        OffsetDateTime lastUpdateTimeStart = null;
        OffsetDateTime lastUpdateTimeEnd = null;
        DataResponseLong response = api.getEmaileventReport(tenantId, domainId, connectorType, processingState, lastUpdateTimeStart, lastUpdateTimeEnd);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventsTest() throws ApiException {
        String tenantId = null;
        String domainId = null;
        Integer eventType = null;
        OffsetDateTime lastUpdateTimeStart = null;
        OffsetDateTime lastUpdateTimeEnd = null;
        DataResponseListEvents response = api.getEvents(tenantId, domainId, eventType, lastUpdateTimeStart, lastUpdateTimeEnd);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEventsReportTest() throws ApiException {
        String tenantId = null;
        String domainId = null;
        OffsetDateTime lastUpdateTimeStart = null;
        OffsetDateTime lastUpdateTimeEnd = null;
        DataResponseLong response = api.getEventsReport(tenantId, domainId, lastUpdateTimeStart, lastUpdateTimeEnd);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProcessingStateEmaileventReportTest() throws ApiException {
        String tenantId = null;
        String domainId = null;
        String connectorType = null;
        List<Integer> processingStates = null;
        OffsetDateTime lastUpdateTimeStart = null;
        OffsetDateTime lastUpdateTimeEnd = null;
        DataResponseLong response = api.getProcessingStateEmaileventReport(tenantId, domainId, connectorType, processingStates, lastUpdateTimeStart, lastUpdateTimeEnd);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProcessingStatesEventsTest() throws ApiException {
        String tenantId = null;
        String domainId = null;
        List<Integer> processingStates = null;
        OffsetDateTime lastUpdateTimeStart = null;
        OffsetDateTime lastUpdateTimeEnd = null;
        DataResponseListEvents response = api.getProcessingStatesEvents(tenantId, domainId, processingStates, lastUpdateTimeStart, lastUpdateTimeEnd);
        // TODO: test validations
    }

}
